
Sensorlamp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002506  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000d6  00802000  00002506  0000259a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000107  008020d6  008020d6  00002670  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002670  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b0  00000000  00000000  0000270c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000078c8  00000000  00000000  000029bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003acb  00000000  00000000  0000a284  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ab7  00000000  00000000  0000dd4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000092c  00000000  00000000  0000f808  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003e02  00000000  00000000  00010134  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002737  00000000  00000000  00013f36  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000270  00000000  00000000  0001666d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a1 01 	jmp	0x342	; 0x342 <__ctors_end>
       4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
       8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
       c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      10:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      14:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      18:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      1c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      20:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      24:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      28:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      2c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      30:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      34:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      38:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      3c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      40:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      44:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      48:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      4c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      50:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      54:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      58:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      5c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      60:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      64:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      68:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      6c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      70:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      74:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      78:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      7c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      80:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      84:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      88:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      8c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      90:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      94:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      98:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      9c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      a0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      a4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      a8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      ac:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      b0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      b4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      b8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      bc:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__vector_47>
      c0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      c4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      c8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      cc:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      d0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      d4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      d8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      dc:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      e0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      e4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      e8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      ec:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      f0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      f4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      f8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
      fc:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     100:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     104:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     108:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     10c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     110:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     114:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     118:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     11c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     120:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     124:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     128:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     12c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     130:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     134:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     138:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     13c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     140:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     144:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     148:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     14c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     150:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     154:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     158:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     15c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     160:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     164:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     168:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     16c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     170:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     174:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     178:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     17c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     180:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     184:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     188:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     18c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     190:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     194:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     198:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     19c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1a0:	0c 94 77 02 	jmp	0x4ee	; 0x4ee <__vector_104>
     1a4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1a8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1ac:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1b0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1b4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1b8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1bc:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1c0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1c4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1c8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1cc:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1d0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1d4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1d8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1dc:	0c 94 92 08 	jmp	0x1124	; 0x1124 <__vector_119>
     1e0:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__vector_120>
     1e4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1e8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1ec:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1f0:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1f4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
     1f8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <uartF0_fputc>
     200:	0c 94 21 07 	jmp	0xe42	; 0xe42 <uartF0_fgetc>

00000204 <__trampolines_end>:
     204:	6e 61       	ori	r22, 0x1E	; 30
     206:	6e 00       	.word	0x006e	; ????

00000208 <__c.2332>:
     208:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     218:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     228:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     238:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     248:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     258:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     268:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     278:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     288:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     298:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2a8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2b8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2c8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2d8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2e8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2f8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000306 <pstr_nan>:
     306:	4e 41 4e                                            NAN

00000309 <pstr_inity>:
     309:	49 4e 49 54 59                                      INITY

0000030e <pstr_inf>:
     30e:	49 4e 46                                            INF

00000311 <pwr_m10>:
     311:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     321:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000329 <pwr_p10>:
     329:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     339:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000342 <__ctors_end>:
     342:	11 24       	eor	r1, r1
     344:	1f be       	out	0x3f, r1	; 63
     346:	cf ef       	ldi	r28, 0xFF	; 255
     348:	cd bf       	out	0x3d, r28	; 61
     34a:	df e5       	ldi	r29, 0x5F	; 95
     34c:	de bf       	out	0x3e, r29	; 62
     34e:	00 e0       	ldi	r16, 0x00	; 0
     350:	0c bf       	out	0x3c, r16	; 60

00000352 <__do_copy_data>:
     352:	10 e2       	ldi	r17, 0x20	; 32
     354:	a0 e0       	ldi	r26, 0x00	; 0
     356:	b0 e2       	ldi	r27, 0x20	; 32
     358:	e6 e0       	ldi	r30, 0x06	; 6
     35a:	f5 e2       	ldi	r31, 0x25	; 37
     35c:	00 e0       	ldi	r16, 0x00	; 0
     35e:	0b bf       	out	0x3b, r16	; 59
     360:	02 c0       	rjmp	.+4      	; 0x366 <__do_copy_data+0x14>
     362:	07 90       	elpm	r0, Z+
     364:	0d 92       	st	X+, r0
     366:	a6 3d       	cpi	r26, 0xD6	; 214
     368:	b1 07       	cpc	r27, r17
     36a:	d9 f7       	brne	.-10     	; 0x362 <__do_copy_data+0x10>

0000036c <__do_clear_bss>:
     36c:	21 e2       	ldi	r18, 0x21	; 33
     36e:	a6 ed       	ldi	r26, 0xD6	; 214
     370:	b0 e2       	ldi	r27, 0x20	; 32
     372:	01 c0       	rjmp	.+2      	; 0x376 <.do_clear_bss_start>

00000374 <.do_clear_bss_loop>:
     374:	1d 92       	st	X+, r1

00000376 <.do_clear_bss_start>:
     376:	ad 3d       	cpi	r26, 0xDD	; 221
     378:	b2 07       	cpc	r27, r18
     37a:	e1 f7       	brne	.-8      	; 0x374 <.do_clear_bss_loop>
     37c:	0e 94 1e 03 	call	0x63c	; 0x63c <main>
     380:	0c 94 81 12 	jmp	0x2502	; 0x2502 <_exit>

00000384 <__bad_interrupt>:
     384:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000388 <init_adc>:
int16_t Raw_Value;
double   Vinp;

void init_adc(void)
{
	PORTA.DIRCLR     = PIN2_bm;
     388:	84 e0       	ldi	r24, 0x04	; 4
     38a:	80 93 02 06 	sts	0x0602, r24	; 0x800602 <__TEXT_REGION_LENGTH__+0x7be602>
	ADCA.CH0.MUXCTRL = ADC_CH_MUXPOS_PIN2_gc |
     38e:	e0 e0       	ldi	r30, 0x00	; 0
     390:	f2 e0       	ldi	r31, 0x02	; 2
     392:	85 e1       	ldi	r24, 0x15	; 21
     394:	81 a3       	std	Z+33, r24	; 0x21
	ADC_CH_MUXNEG_GND_MODE3_gc;
	ADCA.CH0.CTRL    = ADC_CH_INPUTMODE_DIFF_gc;
     396:	82 e0       	ldi	r24, 0x02	; 2
     398:	80 a3       	std	Z+32, r24	; 0x20
	ADCA.REFCTRL     = ADC_REFSEL_INTVCC_gc;
     39a:	80 e1       	ldi	r24, 0x10	; 16
     39c:	82 83       	std	Z+2, r24	; 0x02
	ADCA.CTRLB       = ADC_RESOLUTION_12BIT_gc |
     39e:	81 83       	std	Z+1, r24	; 0x01
	ADC_CONMODE_bm;
	ADCA.PRESCALER   = ADC_PRESCALER_DIV256_gc;
     3a0:	86 e0       	ldi	r24, 0x06	; 6
     3a2:	84 83       	std	Z+4, r24	; 0x04
	ADCA.CTRLA       = ADC_ENABLE_bm;
     3a4:	81 e0       	ldi	r24, 0x01	; 1
     3a6:	80 83       	st	Z, r24
     3a8:	08 95       	ret

000003aa <read_adc>:
}

int16_t read_adc(void)
{
	int16_t res;
	ADCA.CH0.CTRL |= ADC_CH_START_bm;
     3aa:	e0 e0       	ldi	r30, 0x00	; 0
     3ac:	f2 e0       	ldi	r31, 0x02	; 2
     3ae:	80 a1       	ldd	r24, Z+32	; 0x20
     3b0:	80 68       	ori	r24, 0x80	; 128
     3b2:	80 a3       	std	Z+32, r24	; 0x20
	while ( !(ADCA.CH0.INTFLAGS & ADC_CH_CHIF_bm) ) ;
     3b4:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <__TEXT_REGION_LENGTH__+0x7be223>
     3b8:	80 ff       	sbrs	r24, 0
     3ba:	fc cf       	rjmp	.-8      	; 0x3b4 <read_adc+0xa>
	ADCA.CH0.INTFLAGS |= ADC_CH_CHIF_bm;
     3bc:	e0 e0       	ldi	r30, 0x00	; 0
     3be:	f2 e0       	ldi	r31, 0x02	; 2
     3c0:	83 a1       	ldd	r24, Z+35	; 0x23
     3c2:	81 60       	ori	r24, 0x01	; 1
     3c4:	83 a3       	std	Z+35, r24	; 0x23

	return ADCA.CH0.RES;
     3c6:	84 a1       	ldd	r24, Z+36	; 0x24
     3c8:	95 a1       	ldd	r25, Z+37	; 0x25
}
     3ca:	08 95       	ret

000003cc <__vector_47>:

ISR(TCE0_OVF_vect)
{
     3cc:	1f 92       	push	r1
     3ce:	0f 92       	push	r0
     3d0:	0f b6       	in	r0, 0x3f	; 63
     3d2:	0f 92       	push	r0
     3d4:	11 24       	eor	r1, r1
     3d6:	0b b6       	in	r0, 0x3b	; 59
     3d8:	0f 92       	push	r0
     3da:	2f 93       	push	r18
     3dc:	3f 93       	push	r19
     3de:	4f 93       	push	r20
     3e0:	5f 93       	push	r21
     3e2:	6f 93       	push	r22
     3e4:	7f 93       	push	r23
     3e6:	8f 93       	push	r24
     3e8:	9f 93       	push	r25
     3ea:	af 93       	push	r26
     3ec:	bf 93       	push	r27
     3ee:	ef 93       	push	r30
     3f0:	ff 93       	push	r31
	if ( (PORTD.IN & PIN3_bm) && (Sen_Int == 0)){
     3f2:	80 91 68 06 	lds	r24, 0x0668	; 0x800668 <__TEXT_REGION_LENGTH__+0x7be668>
     3f6:	83 ff       	sbrs	r24, 3
     3f8:	0d c0       	rjmp	.+26     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     3fa:	80 91 d8 20 	lds	r24, 0x20D8	; 0x8020d8 <Sen_Int>
     3fe:	81 11       	cpse	r24, r1
     400:	09 c0       	rjmp	.+18     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
		Sen_Prog = 1;
     402:	81 e0       	ldi	r24, 0x01	; 1
     404:	80 93 d6 20 	sts	0x20D6, r24	; 0x8020d6 <__data_end>
		Sen_Int = 1;
     408:	80 93 d8 20 	sts	0x20D8, r24	; 0x8020d8 <Sen_Int>
		printf("Turn on Light\n");
     40c:	87 e1       	ldi	r24, 0x17	; 23
     40e:	90 e2       	ldi	r25, 0x20	; 32
     410:	0e 94 68 10 	call	0x20d0	; 0x20d0 <puts>
	}
	
	if ( (Sen_Int != 0) && (Sen_Int != 12) ){
     414:	80 91 d8 20 	lds	r24, 0x20D8	; 0x8020d8 <Sen_Int>
     418:	88 23       	and	r24, r24
     41a:	49 f0       	breq	.+18     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     41c:	8c 30       	cpi	r24, 0x0C	; 12
     41e:	39 f0       	breq	.+14     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
		++Sen_Int;
     420:	8f 5f       	subi	r24, 0xFF	; 255
     422:	80 93 d8 20 	sts	0x20D8, r24	; 0x8020d8 <Sen_Int>
		printf("Counting till Sensor Time==12\n");
     426:	85 e2       	ldi	r24, 0x25	; 37
     428:	90 e2       	ldi	r25, 0x20	; 32
     42a:	0e 94 68 10 	call	0x20d0	; 0x20d0 <puts>
	}
	
	if (Sen_Int >= 12){
     42e:	80 91 d8 20 	lds	r24, 0x20D8	; 0x8020d8 <Sen_Int>
     432:	8c 30       	cpi	r24, 0x0C	; 12
     434:	40 f1       	brcs	.+80     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
		++Sen_Time;
     436:	80 91 d7 20 	lds	r24, 0x20D7	; 0x8020d7 <Sen_Time>
     43a:	8f 5f       	subi	r24, 0xFF	; 255
     43c:	80 93 d7 20 	sts	0x20D7, r24	; 0x8020d7 <Sen_Time>
		printf("Scanning current situation\n");
     440:	83 e4       	ldi	r24, 0x43	; 67
     442:	90 e2       	ldi	r25, 0x20	; 32
     444:	0e 94 68 10 	call	0x20d0	; 0x20d0 <puts>
		
		if (PORTD.IN & PIN3_bm){
     448:	80 91 68 06 	lds	r24, 0x0668	; 0x800668 <__TEXT_REGION_LENGTH__+0x7be668>
     44c:	83 ff       	sbrs	r24, 3
     44e:	09 c0       	rjmp	.+18     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
			Sen_Time = 0;
     450:	10 92 d7 20 	sts	0x20D7, r1	; 0x8020d7 <Sen_Time>
			Sen_Int = 1;
     454:	81 e0       	ldi	r24, 0x01	; 1
     456:	80 93 d8 20 	sts	0x20D8, r24	; 0x8020d8 <Sen_Int>
			printf("Light Stays on\n");
     45a:	8e e5       	ldi	r24, 0x5E	; 94
     45c:	90 e2       	ldi	r25, 0x20	; 32
     45e:	0e 94 68 10 	call	0x20d0	; 0x20d0 <puts>
		}
		
		if ( (Sen_Time >= 6) && ( ! (PORTD.IN & PIN3_bm)) ){
     462:	80 91 d7 20 	lds	r24, 0x20D7	; 0x8020d7 <Sen_Time>
     466:	86 30       	cpi	r24, 0x06	; 6
     468:	70 f0       	brcs	.+28     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
     46a:	80 91 68 06 	lds	r24, 0x0668	; 0x800668 <__TEXT_REGION_LENGTH__+0x7be668>
     46e:	83 fd       	sbrc	r24, 3
     470:	0a c0       	rjmp	.+20     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
			Sen_Prog = 0;
     472:	10 92 d6 20 	sts	0x20D6, r1	; 0x8020d6 <__data_end>
			Sen_Time = 0;
     476:	10 92 d7 20 	sts	0x20D7, r1	; 0x8020d7 <Sen_Time>
			Sen_Int = 0;
     47a:	10 92 d8 20 	sts	0x20D8, r1	; 0x8020d8 <Sen_Int>
			printf("Light's turned off\n");
     47e:	8d e6       	ldi	r24, 0x6D	; 109
     480:	90 e2       	ldi	r25, 0x20	; 32
     482:	0e 94 68 10 	call	0x20d0	; 0x20d0 <puts>
		}
	}
	if(Sen_Prog == 1) {
     486:	80 91 d6 20 	lds	r24, 0x20D6	; 0x8020d6 <__data_end>
     48a:	81 30       	cpi	r24, 0x01	; 1
     48c:	c1 f4       	brne	.+48     	; 0x4be <__LOCK_REGION_LENGTH__+0xbe>
		printf("Voltage: %5.3lf V \n", Vinp);
     48e:	80 91 b2 21 	lds	r24, 0x21B2	; 0x8021b2 <Vinp+0x3>
     492:	8f 93       	push	r24
     494:	80 91 b1 21 	lds	r24, 0x21B1	; 0x8021b1 <Vinp+0x2>
     498:	8f 93       	push	r24
     49a:	80 91 b0 21 	lds	r24, 0x21B0	; 0x8021b0 <Vinp+0x1>
     49e:	8f 93       	push	r24
     4a0:	80 91 af 21 	lds	r24, 0x21AF	; 0x8021af <Vinp>
     4a4:	8f 93       	push	r24
     4a6:	80 e8       	ldi	r24, 0x80	; 128
     4a8:	90 e2       	ldi	r25, 0x20	; 32
     4aa:	9f 93       	push	r25
     4ac:	8f 93       	push	r24
     4ae:	0e 94 54 10 	call	0x20a8	; 0x20a8 <printf>
     4b2:	0f 90       	pop	r0
     4b4:	0f 90       	pop	r0
     4b6:	0f 90       	pop	r0
     4b8:	0f 90       	pop	r0
     4ba:	0f 90       	pop	r0
     4bc:	0f 90       	pop	r0
	}
	++Dim_Time;
     4be:	80 91 05 20 	lds	r24, 0x2005	; 0x802005 <Dim_Time>
     4c2:	8f 5f       	subi	r24, 0xFF	; 255
     4c4:	80 93 05 20 	sts	0x2005, r24	; 0x802005 <Dim_Time>
}
     4c8:	ff 91       	pop	r31
     4ca:	ef 91       	pop	r30
     4cc:	bf 91       	pop	r27
     4ce:	af 91       	pop	r26
     4d0:	9f 91       	pop	r25
     4d2:	8f 91       	pop	r24
     4d4:	7f 91       	pop	r23
     4d6:	6f 91       	pop	r22
     4d8:	5f 91       	pop	r21
     4da:	4f 91       	pop	r20
     4dc:	3f 91       	pop	r19
     4de:	2f 91       	pop	r18
     4e0:	0f 90       	pop	r0
     4e2:	0b be       	out	0x3b, r0	; 59
     4e4:	0f 90       	pop	r0
     4e6:	0f be       	out	0x3f, r0	; 63
     4e8:	0f 90       	pop	r0
     4ea:	1f 90       	pop	r1
     4ec:	18 95       	reti

000004ee <__vector_104>:

ISR(PORTF_INT0_vect)
{
     4ee:	1f 92       	push	r1
     4f0:	0f 92       	push	r0
     4f2:	0f b6       	in	r0, 0x3f	; 63
     4f4:	0f 92       	push	r0
     4f6:	11 24       	eor	r1, r1
     4f8:	0b b6       	in	r0, 0x3b	; 59
     4fa:	0f 92       	push	r0
     4fc:	1f 93       	push	r17
     4fe:	2f 93       	push	r18
     500:	3f 93       	push	r19
     502:	4f 93       	push	r20
     504:	5f 93       	push	r21
     506:	6f 93       	push	r22
     508:	7f 93       	push	r23
     50a:	8f 93       	push	r24
     50c:	9f 93       	push	r25
     50e:	af 93       	push	r26
     510:	bf 93       	push	r27
     512:	ef 93       	push	r30
     514:	ff 93       	push	r31
     516:	cf 93       	push	r28
     518:	df 93       	push	r29
     51a:	00 d0       	rcall	.+0      	; 0x51c <__vector_104+0x2e>
     51c:	cd b7       	in	r28, 0x3d	; 61
     51e:	de b7       	in	r29, 0x3e	; 62
	uint8_t  packet_length;
	uint8_t tx_ds, max_rt, rx_dr;
	nrfWhatHappened(&tx_ds, &max_rt, &rx_dr);
     520:	ae 01       	movw	r20, r28
     522:	4d 5f       	subi	r20, 0xFD	; 253
     524:	5f 4f       	sbci	r21, 0xFF	; 255
     526:	be 01       	movw	r22, r28
     528:	6e 5f       	subi	r22, 0xFE	; 254
     52a:	7f 4f       	sbci	r23, 0xFF	; 255
     52c:	ce 01       	movw	r24, r28
     52e:	01 96       	adiw	r24, 0x01	; 1
     530:	0e 94 b1 05 	call	0xb62	; 0xb62 <nrfWhatHappened>
	
	if (rx_dr) {
     534:	8b 81       	ldd	r24, Y+3	; 0x03
     536:	88 23       	and	r24, r24
     538:	69 f0       	breq	.+26     	; 0x554 <__vector_104+0x66>
		packet_length =  nrfGetDynamicPayloadSize();
     53a:	0e 94 4a 06 	call	0xc94	; 0xc94 <nrfGetDynamicPayloadSize>
     53e:	18 2f       	mov	r17, r24
		nrfRead( Rx_packet, packet_length );
     540:	68 2f       	mov	r22, r24
     542:	84 eb       	ldi	r24, 0xB4	; 180
     544:	91 e2       	ldi	r25, 0x21	; 33
     546:	0e 94 57 05 	call	0xaae	; 0xaae <nrfRead>
		Rx_packet[packet_length] = '\0';
     54a:	e1 2f       	mov	r30, r17
     54c:	f0 e0       	ldi	r31, 0x00	; 0
     54e:	ec 54       	subi	r30, 0x4C	; 76
     550:	fe 4d       	sbci	r31, 0xDE	; 222
     552:	10 82       	st	Z, r1
	}
	
	flag = 1;
     554:	81 e0       	ldi	r24, 0x01	; 1
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	80 93 d9 20 	sts	0x20D9, r24	; 0x8020d9 <flag>
     55c:	90 93 da 20 	sts	0x20DA, r25	; 0x8020da <flag+0x1>
}
     560:	23 96       	adiw	r28, 0x03	; 3
     562:	cd bf       	out	0x3d, r28	; 61
     564:	de bf       	out	0x3e, r29	; 62
     566:	df 91       	pop	r29
     568:	cf 91       	pop	r28
     56a:	ff 91       	pop	r31
     56c:	ef 91       	pop	r30
     56e:	bf 91       	pop	r27
     570:	af 91       	pop	r26
     572:	9f 91       	pop	r25
     574:	8f 91       	pop	r24
     576:	7f 91       	pop	r23
     578:	6f 91       	pop	r22
     57a:	5f 91       	pop	r21
     57c:	4f 91       	pop	r20
     57e:	3f 91       	pop	r19
     580:	2f 91       	pop	r18
     582:	1f 91       	pop	r17
     584:	0f 90       	pop	r0
     586:	0b be       	out	0x3b, r0	; 59
     588:	0f 90       	pop	r0
     58a:	0f be       	out	0x3f, r0	; 63
     58c:	0f 90       	pop	r0
     58e:	1f 90       	pop	r1
     590:	18 95       	reti

00000592 <init_timer>:

void init_timer(void)
{
	TCE1.PER      = 31249;     // Tper =  8 * (31249 +1) / 2M = 0.125 s
     592:	e0 e4       	ldi	r30, 0x40	; 64
     594:	fa e0       	ldi	r31, 0x0A	; 10
     596:	81 e1       	ldi	r24, 0x11	; 17
     598:	9a e7       	ldi	r25, 0x7A	; 122
     59a:	86 a3       	std	Z+38, r24	; 0x26
     59c:	97 a3       	std	Z+39, r25	; 0x27
	TCE1.CTRLA    = TC_CLKSEL_DIV8_gc;          // Prescaling 8
     59e:	84 e0       	ldi	r24, 0x04	; 4
     5a0:	80 83       	st	Z, r24
	TCE1.CTRLB    = TC_WGMODE_NORMAL_gc;        // Normal mode
     5a2:	11 82       	std	Z+1, r1	; 0x01
	TCE1.INTCTRLA = TC_OVFINTLVL_OFF_gc;        // Interrupt overflow off
     5a4:	16 82       	std	Z+6, r1	; 0x06
     5a6:	08 95       	ret

000005a8 <Init_Counter_Timer>:
}

void Init_Counter_Timer(void)
{
	TCD0.CTRLB     = TC0_CCCEN_bm | TC_WGMODE_SINGLESLOPE_gc;
     5a8:	e0 e0       	ldi	r30, 0x00	; 0
     5aa:	f9 e0       	ldi	r31, 0x09	; 9
     5ac:	83 e4       	ldi	r24, 0x43	; 67
     5ae:	81 83       	std	Z+1, r24	; 0x01
	TCD0.CTRLA     = TC_CLKSEL_DIV4_gc;
     5b0:	83 e0       	ldi	r24, 0x03	; 3
     5b2:	80 83       	st	Z, r24
	TCD0.PER       = 9999;
     5b4:	8f e0       	ldi	r24, 0x0F	; 15
     5b6:	97 e2       	ldi	r25, 0x27	; 39
     5b8:	86 a3       	std	Z+38, r24	; 0x26
     5ba:	97 a3       	std	Z+39, r25	; 0x27
	TCE0.CTRLB     = TC_WGMODE_NORMAL_gc;  // Normal mode
     5bc:	e0 e0       	ldi	r30, 0x00	; 0
     5be:	fa e0       	ldi	r31, 0x0A	; 10
     5c0:	11 82       	std	Z+1, r1	; 0x01
	TCE0.CTRLA     = TC_CLKSEL_DIV64_gc;   // prescaling 64
     5c2:	85 e0       	ldi	r24, 0x05	; 5
     5c4:	80 83       	st	Z, r24
	TCE0.INTCTRLA  = TC_OVFINTLVL_LO_gc;   // enable overflow interrupt low level
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	86 83       	std	Z+6, r24	; 0x06
	TCE0.PER       = 31249;                // t = N*(PER+1)/FCPU = 64*31250/2000000 = 1 sec
     5ca:	81 e1       	ldi	r24, 0x11	; 17
     5cc:	9a e7       	ldi	r25, 0x7A	; 122
     5ce:	86 a3       	std	Z+38, r24	; 0x26
     5d0:	97 a3       	std	Z+39, r25	; 0x27
     5d2:	08 95       	ret

000005d4 <init_nrf>:
}

void init_nrf(void)
{
	nrfspiInit();                                        // Starts SPI
     5d4:	0e 94 da 06 	call	0xdb4	; 0xdb4 <nrfspiInit>
	nrfBegin();                                          // Starts radio module
     5d8:	0e 94 b1 06 	call	0xd62	; 0xd62 <nrfBegin>

	nrfSetRetries(NRF_SETUP_ARD_1500US_gc,               // Delay between connection retries: 1500 us
     5dc:	6f e0       	ldi	r22, 0x0F	; 15
     5de:	80 e5       	ldi	r24, 0x50	; 80
     5e0:	0e 94 a7 06 	call	0xd4e	; 0xd4e <nrfSetRetries>
	NRF_SETUP_ARC_15RETRANSMIT_gc);						 // Number of connection retries: 15 retries
	nrfSetPALevel(NRF_RF_SETUP_PWR_6DBM_gc);             // Power Level: -6 dBm
     5e4:	84 e0       	ldi	r24, 0x04	; 4
     5e6:	0e 94 74 06 	call	0xce8	; 0xce8 <nrfSetPALevel>
	nrfSetDataRate(NRF_RF_SETUP_RF_DR_250K_gc);          // NRF Data Send Speed 250 Kbps
     5ea:	80 e2       	ldi	r24, 0x20	; 32
     5ec:	0e 94 82 06 	call	0xd04	; 0xd04 <nrfSetDataRate>
	nrfSetCRCLength(NRF_CONFIG_CRC_16_gc);               // CRC Length
     5f0:	8c e0       	ldi	r24, 0x0C	; 12
     5f2:	0e 94 99 06 	call	0xd32	; 0xd32 <nrfSetCRCLength>
	nrfSetChannel(125);                                  // Communication Channel: 125
     5f6:	8d e7       	ldi	r24, 0x7D	; 125
     5f8:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <nrfSetChannel>
	nrfSetAutoAck(1);                                    // Auto Acknowledge 1 == on
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	0e 94 68 06 	call	0xcd0	; 0xcd0 <nrfSetAutoAck>
	nrfEnableDynamicPayloads();                          // Enable Dynamic Payloads
     602:	0e 94 27 06 	call	0xc4e	; 0xc4e <nrfEnableDynamicPayloads>

	nrfClearInterruptBits();                             // Clears interrupt bits
     606:	0e 94 ac 06 	call	0xd58	; 0xd58 <nrfClearInterruptBits>
	nrfFlushRx();                                        // Flush Receive
     60a:	0e 94 5e 05 	call	0xabc	; 0xabc <nrfFlushRx>
	nrfFlushTx();                                        // Flush Transmission
     60e:	0e 94 6d 05 	call	0xada	; 0xada <nrfFlushTx>

	// Interrupt section for NRF
	PORTF.INT0MASK |= PIN6_bm;
     612:	e0 ea       	ldi	r30, 0xA0	; 160
     614:	f6 e0       	ldi	r31, 0x06	; 6
     616:	82 85       	ldd	r24, Z+10	; 0x0a
     618:	80 64       	ori	r24, 0x40	; 64
     61a:	82 87       	std	Z+10, r24	; 0x0a
	PORTF.PIN6CTRL  = PORT_ISC_FALLING_gc;
     61c:	82 e0       	ldi	r24, 0x02	; 2
     61e:	86 8b       	std	Z+22, r24	; 0x16
	PORTF.INTCTRL   = (PORTF.INTCTRL & ~PORT_INT0LVL_gm) |
     620:	81 85       	ldd	r24, Z+9	; 0x09
     622:	8c 7f       	andi	r24, 0xFC	; 252
     624:	81 60       	ori	r24, 0x01	; 1
     626:	81 87       	std	Z+9, r24	; 0x09
	                  PORT_INT0LVL_LO_gc ;

	PORTF.OUTSET = PIN0_bm;
     628:	81 e0       	ldi	r24, 0x01	; 1
     62a:	85 83       	std	Z+5, r24	; 0x05
	nrfOpenReadingPipe(0, pipe);                         // Pipe for Receiving
     62c:	60 e0       	ldi	r22, 0x00	; 0
     62e:	70 e2       	ldi	r23, 0x20	; 32
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	0e 94 cf 05 	call	0xb9e	; 0xb9e <nrfOpenReadingPipe>
	nrfStartListening();								 // Starts To Listen To The NRF Read And Write Channels
     636:	0e 94 7c 05 	call	0xaf8	; 0xaf8 <nrfStartListening>
     63a:	08 95       	ret

0000063c <main>:
	uint8_t Light_LVL;
	uint8_t Out_LVL;
	uint8_t Ins_LVL;
	uint8_t Ins_Per;
	
	PORTD.DIRSET   = PIN2_bm;			   // input pin ADC
     63c:	e0 e6       	ldi	r30, 0x60	; 96
     63e:	f6 e0       	ldi	r31, 0x06	; 6
     640:	84 e0       	ldi	r24, 0x04	; 4
     642:	81 83       	std	Z+1, r24	; 0x01
	PORTD.DIRCLR   = PIN3_bm;              // input pin PIR Motion Sensor
     644:	88 e0       	ldi	r24, 0x08	; 8
     646:	82 83       	std	Z+2, r24	; 0x02
	
	init_adc();								// initialize adc function
     648:	0e 94 c4 01 	call	0x388	; 0x388 <init_adc>
	init_timer();                           // initialize timer function
     64c:	0e 94 c9 02 	call	0x592	; 0x592 <init_timer>
	Init_Counter_Timer();                   // initialize timer of the sensor counter function
     650:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <Init_Counter_Timer>
	init_nrf();								// initialize nrf function
     654:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <init_nrf>
	init_stream(F_CPU);
     658:	60 e8       	ldi	r22, 0x80	; 128
     65a:	74 e8       	ldi	r23, 0x84	; 132
     65c:	8e e1       	ldi	r24, 0x1E	; 30
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	0e 94 4e 08 	call	0x109c	; 0x109c <init_stream>

	PMIC.CTRL     |= PMIC_LOLVLEN_bm;      // set low level interrupts
     664:	e0 ea       	ldi	r30, 0xA0	; 160
     666:	f0 e0       	ldi	r31, 0x00	; 0
     668:	82 81       	ldd	r24, Z+2	; 0x02
     66a:	81 60       	ori	r24, 0x01	; 1
     66c:	82 83       	std	Z+2, r24	; 0x02
	sei();                                 // enable interrupts
     66e:	78 94       	sei
	
	clear_screen();
     670:	84 e9       	ldi	r24, 0x94	; 148
     672:	90 e2       	ldi	r25, 0x20	; 32
     674:	9f 93       	push	r25
     676:	8f 93       	push	r24
     678:	0e 94 54 10 	call	0x20a8	; 0x20a8 <printf>
     67c:	0f 90       	pop	r0
     67e:	0f 90       	pop	r0
     680:	6e c1       	rjmp	.+732    	; 0x95e <main+0x322>
	
	while(1){
		
		while (Sen_Prog == 1) {
			
			if (0 > read_adc()){
     682:	0e 94 d5 01 	call	0x3aa	; 0x3aa <read_adc>
     686:	99 23       	and	r25, r25
     688:	24 f4       	brge	.+8      	; 0x692 <main+0x56>
				Raw_Value = 0;
     68a:	10 92 ad 21 	sts	0x21AD, r1	; 0x8021ad <Raw_Value>
     68e:	10 92 ae 21 	sts	0x21AE, r1	; 0x8021ae <Raw_Value+0x1>
			}
			
			if (read_adc() >= 0){
     692:	0e 94 d5 01 	call	0x3aa	; 0x3aa <read_adc>
     696:	99 23       	and	r25, r25
     698:	34 f0       	brlt	.+12     	; 0x6a6 <main+0x6a>
				Raw_Value = read_adc();
     69a:	0e 94 d5 01 	call	0x3aa	; 0x3aa <read_adc>
     69e:	80 93 ad 21 	sts	0x21AD, r24	; 0x8021ad <Raw_Value>
     6a2:	90 93 ae 21 	sts	0x21AE, r25	; 0x8021ae <Raw_Value+0x1>
			}
			
			Vinp = (double) Raw_Value * VREF / (MAX_VALUE + 1);
     6a6:	60 91 ad 21 	lds	r22, 0x21AD	; 0x8021ad <Raw_Value>
     6aa:	70 91 ae 21 	lds	r23, 0x21AE	; 0x8021ae <Raw_Value+0x1>
     6ae:	07 2e       	mov	r0, r23
     6b0:	00 0c       	add	r0, r0
     6b2:	88 0b       	sbc	r24, r24
     6b4:	99 0b       	sbc	r25, r25
     6b6:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__floatsisf>
     6ba:	20 e0       	ldi	r18, 0x00	; 0
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	44 e0       	ldi	r20, 0x04	; 4
     6c0:	50 e4       	ldi	r21, 0x40	; 64
     6c2:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     6c6:	20 e0       	ldi	r18, 0x00	; 0
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	40 e0       	ldi	r20, 0x00	; 0
     6cc:	5a e3       	ldi	r21, 0x3A	; 58
     6ce:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     6d2:	60 93 af 21 	sts	0x21AF, r22	; 0x8021af <Vinp>
     6d6:	70 93 b0 21 	sts	0x21B0, r23	; 0x8021b0 <Vinp+0x1>
     6da:	80 93 b1 21 	sts	0x21B1, r24	; 0x8021b1 <Vinp+0x2>
     6de:	90 93 b2 21 	sts	0x21B2, r25	; 0x8021b2 <Vinp+0x3>
			
			if (flag == 1) {
     6e2:	80 91 d9 20 	lds	r24, 0x20D9	; 0x8020d9 <flag>
     6e6:	90 91 da 20 	lds	r25, 0x20DA	; 0x8020da <flag+0x1>
     6ea:	01 97       	sbiw	r24, 0x01	; 1
     6ec:	e1 f4       	brne	.+56     	; 0x726 <main+0xea>
				Rx_Value = atof(Rx_packet);
     6ee:	84 eb       	ldi	r24, 0xB4	; 180
     6f0:	91 e2       	ldi	r25, 0x21	; 33
     6f2:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <atof>
     6f6:	c6 2f       	mov	r28, r22
     6f8:	d7 2f       	mov	r29, r23
     6fa:	18 2f       	mov	r17, r24
     6fc:	09 2f       	mov	r16, r25
				printf("%5.3lf Remote Value\n" , Rx_Value);
     6fe:	9f 93       	push	r25
     700:	8f 93       	push	r24
     702:	7f 93       	push	r23
     704:	6f 93       	push	r22
     706:	80 ea       	ldi	r24, 0xA0	; 160
     708:	90 e2       	ldi	r25, 0x20	; 32
     70a:	9f 93       	push	r25
     70c:	8f 93       	push	r24
     70e:	0e 94 54 10 	call	0x20a8	; 0x20a8 <printf>
				flag = 0;
     712:	10 92 d9 20 	sts	0x20D9, r1	; 0x8020d9 <flag>
     716:	10 92 da 20 	sts	0x20DA, r1	; 0x8020da <flag+0x1>
     71a:	0f 90       	pop	r0
     71c:	0f 90       	pop	r0
     71e:	0f 90       	pop	r0
     720:	0f 90       	pop	r0
     722:	0f 90       	pop	r0
     724:	0f 90       	pop	r0
			}
			
			if(Dim_Time >= 15){				// Changes Light Value every 15 sec
     726:	80 91 05 20 	lds	r24, 0x2005	; 0x802005 <Dim_Time>
     72a:	8f 30       	cpi	r24, 0x0F	; 15
     72c:	08 f4       	brcc	.+2      	; 0x730 <main+0xf4>
     72e:	17 c1       	rjmp	.+558    	; 0x95e <main+0x322>
				if (2.061 <= Rx_Value){
     730:	2d e6       	ldi	r18, 0x6D	; 109
     732:	37 ee       	ldi	r19, 0xE7	; 231
     734:	43 e0       	ldi	r20, 0x03	; 3
     736:	50 e4       	ldi	r21, 0x40	; 64
     738:	6c 2f       	mov	r22, r28
     73a:	7d 2f       	mov	r23, r29
     73c:	81 2f       	mov	r24, r17
     73e:	90 2f       	mov	r25, r16
     740:	0e 94 af 0a 	call	0x155e	; 0x155e <__gesf2>
     744:	88 23       	and	r24, r24
     746:	24 f0       	brlt	.+8      	; 0x750 <main+0x114>
					TCD0.CCC = 0;
     748:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <__TEXT_REGION_LENGTH__+0x7be92c>
     74c:	10 92 2d 09 	sts	0x092D, r1	; 0x80092d <__TEXT_REGION_LENGTH__+0x7be92d>
				}
				
				if ((2.061 >= Rx_Value) && (0.01 <= Rx_Value)){
     750:	2d e6       	ldi	r18, 0x6D	; 109
     752:	37 ee       	ldi	r19, 0xE7	; 231
     754:	43 e0       	ldi	r20, 0x03	; 3
     756:	50 e4       	ldi	r21, 0x40	; 64
     758:	6c 2f       	mov	r22, r28
     75a:	7d 2f       	mov	r23, r29
     75c:	81 2f       	mov	r24, r17
     75e:	90 2f       	mov	r25, r16
     760:	0e 94 57 09 	call	0x12ae	; 0x12ae <__cmpsf2>
     764:	18 16       	cp	r1, r24
     766:	0c f4       	brge	.+2      	; 0x76a <main+0x12e>
     768:	e6 c0       	rjmp	.+460    	; 0x936 <main+0x2fa>
     76a:	2a e0       	ldi	r18, 0x0A	; 10
     76c:	37 ed       	ldi	r19, 0xD7	; 215
     76e:	43 e2       	ldi	r20, 0x23	; 35
     770:	5c e3       	ldi	r21, 0x3C	; 60
     772:	6c 2f       	mov	r22, r28
     774:	7d 2f       	mov	r23, r29
     776:	81 2f       	mov	r24, r17
     778:	90 2f       	mov	r25, r16
     77a:	0e 94 af 0a 	call	0x155e	; 0x155e <__gesf2>
     77e:	88 23       	and	r24, r24
     780:	0c f4       	brge	.+2      	; 0x784 <main+0x148>
     782:	d9 c0       	rjmp	.+434    	; 0x936 <main+0x2fa>
					Out_LVL=100-((100/2.061)*Rx_Value);
     784:	2e e9       	ldi	r18, 0x9E	; 158
     786:	34 e1       	ldi	r19, 0x14	; 20
     788:	42 e4       	ldi	r20, 0x42	; 66
     78a:	52 e4       	ldi	r21, 0x42	; 66
     78c:	6c 2f       	mov	r22, r28
     78e:	7d 2f       	mov	r23, r29
     790:	81 2f       	mov	r24, r17
     792:	90 2f       	mov	r25, r16
     794:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     798:	9b 01       	movw	r18, r22
     79a:	ac 01       	movw	r20, r24
     79c:	60 e0       	ldi	r22, 0x00	; 0
     79e:	70 e0       	ldi	r23, 0x00	; 0
     7a0:	88 ec       	ldi	r24, 0xC8	; 200
     7a2:	92 e4       	ldi	r25, 0x42	; 66
     7a4:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__subsf3>
     7a8:	0e 94 ce 09 	call	0x139c	; 0x139c <__fixunssfsi>
     7ac:	e6 2e       	mov	r14, r22
					
					printf("%d Out Level\n" , Out_LVL);
     7ae:	1f 92       	push	r1
     7b0:	6f 93       	push	r22
     7b2:	0f 2e       	mov	r0, r31
     7b4:	f5 eb       	ldi	r31, 0xB5	; 181
     7b6:	cf 2e       	mov	r12, r31
     7b8:	f0 e2       	ldi	r31, 0x20	; 32
     7ba:	df 2e       	mov	r13, r31
     7bc:	f0 2d       	mov	r31, r0
     7be:	df 92       	push	r13
     7c0:	cf 92       	push	r12
     7c2:	0e 94 54 10 	call	0x20a8	; 0x20a8 <printf>
					printf("%d Out Level\n" , Ins_LVL);
     7c6:	1f 92       	push	r1
     7c8:	ff 92       	push	r15
     7ca:	df 92       	push	r13
     7cc:	cf 92       	push	r12
     7ce:	0e 94 54 10 	call	0x20a8	; 0x20a8 <printf>
					if(Vinp>0.240){
     7d2:	80 90 af 21 	lds	r8, 0x21AF	; 0x8021af <Vinp>
     7d6:	90 90 b0 21 	lds	r9, 0x21B0	; 0x8021b0 <Vinp+0x1>
     7da:	a0 90 b1 21 	lds	r10, 0x21B1	; 0x8021b1 <Vinp+0x2>
     7de:	b0 90 b2 21 	lds	r11, 0x21B2	; 0x8021b2 <Vinp+0x3>
     7e2:	8d b7       	in	r24, 0x3d	; 61
     7e4:	9e b7       	in	r25, 0x3e	; 62
     7e6:	08 96       	adiw	r24, 0x08	; 8
     7e8:	8d bf       	out	0x3d, r24	; 61
     7ea:	9e bf       	out	0x3e, r25	; 62
     7ec:	2f e8       	ldi	r18, 0x8F	; 143
     7ee:	32 ec       	ldi	r19, 0xC2	; 194
     7f0:	45 e7       	ldi	r20, 0x75	; 117
     7f2:	5e e3       	ldi	r21, 0x3E	; 62
     7f4:	c5 01       	movw	r24, r10
     7f6:	b4 01       	movw	r22, r8
     7f8:	0e 94 af 0a 	call	0x155e	; 0x155e <__gesf2>
     7fc:	18 16       	cp	r1, r24
     7fe:	24 f4       	brge	.+8      	; 0x808 <main+0x1cc>
						Ins_LVL=100;
     800:	0f 2e       	mov	r0, r31
     802:	f4 e6       	ldi	r31, 0x64	; 100
     804:	ff 2e       	mov	r15, r31
     806:	f0 2d       	mov	r31, r0
					}
					
					if(0.240>=Vinp){
     808:	2f e8       	ldi	r18, 0x8F	; 143
     80a:	32 ec       	ldi	r19, 0xC2	; 194
     80c:	45 e7       	ldi	r20, 0x75	; 117
     80e:	5e e3       	ldi	r21, 0x3E	; 62
     810:	c5 01       	movw	r24, r10
     812:	b4 01       	movw	r22, r8
     814:	0e 94 57 09 	call	0x12ae	; 0x12ae <__cmpsf2>
     818:	18 16       	cp	r1, r24
     81a:	5c f0       	brlt	.+22     	; 0x832 <main+0x1f6>
						Ins_LVL=(100/0.240)*Vinp;
     81c:	26 e5       	ldi	r18, 0x56	; 86
     81e:	35 e5       	ldi	r19, 0x55	; 85
     820:	40 ed       	ldi	r20, 0xD0	; 208
     822:	53 e4       	ldi	r21, 0x43	; 67
     824:	c5 01       	movw	r24, r10
     826:	b4 01       	movw	r22, r8
     828:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     82c:	0e 94 ce 09 	call	0x139c	; 0x139c <__fixunssfsi>
     830:	f6 2e       	mov	r15, r22
					}
					
					Ins_Per=Out_LVL+Ins_LVL;
     832:	df 2c       	mov	r13, r15
     834:	de 0c       	add	r13, r14
					
					if (Out_LVL>=Ins_LVL && Ins_Per>=100 ){
     836:	ef 14       	cp	r14, r15
     838:	f8 f0       	brcs	.+62     	; 0x878 <main+0x23c>
     83a:	93 e6       	ldi	r25, 0x63	; 99
     83c:	9d 15       	cp	r25, r13
     83e:	e0 f4       	brcc	.+56     	; 0x878 <main+0x23c>
						Light_LVL=99.99*(Ins_LVL-(Ins_Per-100));
     840:	8d 2d       	mov	r24, r13
     842:	90 e0       	ldi	r25, 0x00	; 0
     844:	84 56       	subi	r24, 0x64	; 100
     846:	91 09       	sbc	r25, r1
     848:	6f 2d       	mov	r22, r15
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	68 1b       	sub	r22, r24
     84e:	79 0b       	sbc	r23, r25
     850:	07 2e       	mov	r0, r23
     852:	00 0c       	add	r0, r0
     854:	88 0b       	sbc	r24, r24
     856:	99 0b       	sbc	r25, r25
     858:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__floatsisf>
     85c:	21 ee       	ldi	r18, 0xE1	; 225
     85e:	3a ef       	ldi	r19, 0xFA	; 250
     860:	47 ec       	ldi	r20, 0xC7	; 199
     862:	52 e4       	ldi	r21, 0x42	; 66
     864:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     868:	0e 94 ce 09 	call	0x139c	; 0x139c <__fixunssfsi>
						TCD0.CCC = Light_LVL;
     86c:	86 2f       	mov	r24, r22
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <__TEXT_REGION_LENGTH__+0x7be92c>
     874:	90 93 2d 09 	sts	0x092D, r25	; 0x80092d <__TEXT_REGION_LENGTH__+0x7be92d>
					}
					
					if (Out_LVL>=Ins_LVL && Ins_Per<=100 ){
     878:	ef 14       	cp	r14, r15
     87a:	e8 f0       	brcs	.+58     	; 0x8b6 <main+0x27a>
     87c:	84 e6       	ldi	r24, 0x64	; 100
     87e:	8d 15       	cp	r24, r13
     880:	d0 f0       	brcs	.+52     	; 0x8b6 <main+0x27a>
						Light_LVL=99.99*(Ins_LVL+(100+Ins_Per));
     882:	6d 2d       	mov	r22, r13
     884:	70 e0       	ldi	r23, 0x00	; 0
     886:	6c 59       	subi	r22, 0x9C	; 156
     888:	7f 4f       	sbci	r23, 0xFF	; 255
     88a:	6f 0d       	add	r22, r15
     88c:	71 1d       	adc	r23, r1
     88e:	07 2e       	mov	r0, r23
     890:	00 0c       	add	r0, r0
     892:	88 0b       	sbc	r24, r24
     894:	99 0b       	sbc	r25, r25
     896:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__floatsisf>
     89a:	21 ee       	ldi	r18, 0xE1	; 225
     89c:	3a ef       	ldi	r19, 0xFA	; 250
     89e:	47 ec       	ldi	r20, 0xC7	; 199
     8a0:	52 e4       	ldi	r21, 0x42	; 66
     8a2:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     8a6:	0e 94 ce 09 	call	0x139c	; 0x139c <__fixunssfsi>
						TCD0.CCC = Light_LVL;
     8aa:	86 2f       	mov	r24, r22
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <__TEXT_REGION_LENGTH__+0x7be92c>
     8b2:	90 93 2d 09 	sts	0x092D, r25	; 0x80092d <__TEXT_REGION_LENGTH__+0x7be92d>
					}
					
					if (Out_LVL<=Ins_LVL && Ins_Per>=100 ){
     8b6:	fe 14       	cp	r15, r14
     8b8:	f8 f0       	brcs	.+62     	; 0x8f8 <main+0x2bc>
     8ba:	93 e6       	ldi	r25, 0x63	; 99
     8bc:	9d 15       	cp	r25, r13
     8be:	e0 f4       	brcc	.+56     	; 0x8f8 <main+0x2bc>
						Light_LVL=99.99*(Ins_LVL-(Ins_Per-100));
     8c0:	8d 2d       	mov	r24, r13
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	84 56       	subi	r24, 0x64	; 100
     8c6:	91 09       	sbc	r25, r1
     8c8:	6f 2d       	mov	r22, r15
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	68 1b       	sub	r22, r24
     8ce:	79 0b       	sbc	r23, r25
     8d0:	07 2e       	mov	r0, r23
     8d2:	00 0c       	add	r0, r0
     8d4:	88 0b       	sbc	r24, r24
     8d6:	99 0b       	sbc	r25, r25
     8d8:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__floatsisf>
     8dc:	21 ee       	ldi	r18, 0xE1	; 225
     8de:	3a ef       	ldi	r19, 0xFA	; 250
     8e0:	47 ec       	ldi	r20, 0xC7	; 199
     8e2:	52 e4       	ldi	r21, 0x42	; 66
     8e4:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     8e8:	0e 94 ce 09 	call	0x139c	; 0x139c <__fixunssfsi>
						TCD0.CCC = Light_LVL;
     8ec:	86 2f       	mov	r24, r22
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <__TEXT_REGION_LENGTH__+0x7be92c>
     8f4:	90 93 2d 09 	sts	0x092D, r25	; 0x80092d <__TEXT_REGION_LENGTH__+0x7be92d>
					}
					
					if (Out_LVL<=Ins_LVL && Ins_Per<=100 ){
     8f8:	fe 14       	cp	r15, r14
     8fa:	e8 f0       	brcs	.+58     	; 0x936 <main+0x2fa>
     8fc:	84 e6       	ldi	r24, 0x64	; 100
     8fe:	8d 15       	cp	r24, r13
     900:	d0 f0       	brcs	.+52     	; 0x936 <main+0x2fa>
						Light_LVL=99.99*(Ins_LVL+(100+Ins_Per));
     902:	6d 2d       	mov	r22, r13
     904:	70 e0       	ldi	r23, 0x00	; 0
     906:	6c 59       	subi	r22, 0x9C	; 156
     908:	7f 4f       	sbci	r23, 0xFF	; 255
     90a:	6f 0d       	add	r22, r15
     90c:	71 1d       	adc	r23, r1
     90e:	07 2e       	mov	r0, r23
     910:	00 0c       	add	r0, r0
     912:	88 0b       	sbc	r24, r24
     914:	99 0b       	sbc	r25, r25
     916:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__floatsisf>
     91a:	21 ee       	ldi	r18, 0xE1	; 225
     91c:	3a ef       	ldi	r19, 0xFA	; 250
     91e:	47 ec       	ldi	r20, 0xC7	; 199
     920:	52 e4       	ldi	r21, 0x42	; 66
     922:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     926:	0e 94 ce 09 	call	0x139c	; 0x139c <__fixunssfsi>
						TCD0.CCC = Light_LVL;
     92a:	86 2f       	mov	r24, r22
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <__TEXT_REGION_LENGTH__+0x7be92c>
     932:	90 93 2d 09 	sts	0x092D, r25	; 0x80092d <__TEXT_REGION_LENGTH__+0x7be92d>
					}
				}
				
				if (0.02 >= Rx_Value){
     936:	2a e0       	ldi	r18, 0x0A	; 10
     938:	37 ed       	ldi	r19, 0xD7	; 215
     93a:	43 ea       	ldi	r20, 0xA3	; 163
     93c:	5c e3       	ldi	r21, 0x3C	; 60
     93e:	6c 2f       	mov	r22, r28
     940:	7d 2f       	mov	r23, r29
     942:	81 2f       	mov	r24, r17
     944:	90 2f       	mov	r25, r16
     946:	0e 94 57 09 	call	0x12ae	; 0x12ae <__cmpsf2>
     94a:	18 16       	cp	r1, r24
     94c:	34 f0       	brlt	.+12     	; 0x95a <main+0x31e>
					TCD0.CCC = 9999;
     94e:	8f e0       	ldi	r24, 0x0F	; 15
     950:	97 e2       	ldi	r25, 0x27	; 39
     952:	80 93 2c 09 	sts	0x092C, r24	; 0x80092c <__TEXT_REGION_LENGTH__+0x7be92c>
     956:	90 93 2d 09 	sts	0x092D, r25	; 0x80092d <__TEXT_REGION_LENGTH__+0x7be92d>
				}
				Dim_Time = 0;
     95a:	10 92 05 20 	sts	0x2005, r1	; 0x802005 <Dim_Time>
	
	clear_screen();
	
	while(1){
		
		while (Sen_Prog == 1) {
     95e:	80 91 d6 20 	lds	r24, 0x20D6	; 0x8020d6 <__data_end>
     962:	81 30       	cpi	r24, 0x01	; 1
     964:	09 f4       	brne	.+2      	; 0x968 <main+0x32c>
     966:	8d ce       	rjmp	.-742    	; 0x682 <main+0x46>
					TCD0.CCC = 9999;
				}
				Dim_Time = 0;
			}
		}
		if (Sen_Prog == 0){
     968:	81 11       	cpse	r24, r1
     96a:	f9 cf       	rjmp	.-14     	; 0x95e <main+0x322>
			TCD0.CCC = 0;
     96c:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <__TEXT_REGION_LENGTH__+0x7be92c>
     970:	10 92 2d 09 	sts	0x092D, r1	; 0x80092d <__TEXT_REGION_LENGTH__+0x7be92d>
     974:	f4 cf       	rjmp	.-24     	; 0x95e <main+0x322>

00000976 <nrfReadRegister>:
  nrfStartWrite(buf, len, NRF_W_TX_PAYLOAD);

  iReturn = nrfWaitForAck();  // Wait until packet ACK is received or timed out

  return(iReturn);            // Returns 32 on ACK received, 0 on time out
}
     976:	1f 93       	push	r17
     978:	cf 93       	push	r28
     97a:	df 93       	push	r29
     97c:	c0 ea       	ldi	r28, 0xA0	; 160
     97e:	d6 e0       	ldi	r29, 0x06	; 6
     980:	10 e2       	ldi	r17, 0x20	; 32
     982:	1e 83       	std	Y+6, r17	; 0x06
     984:	8f 71       	andi	r24, 0x1F	; 31
     986:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     98a:	8f ef       	ldi	r24, 0xFF	; 255
     98c:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     990:	1d 83       	std	Y+5, r17	; 0x05
     992:	df 91       	pop	r29
     994:	cf 91       	pop	r28
     996:	1f 91       	pop	r17
     998:	08 95       	ret

0000099a <nrfWriteRegisterMulti>:
     99a:	df 92       	push	r13
     99c:	ef 92       	push	r14
     99e:	ff 92       	push	r15
     9a0:	0f 93       	push	r16
     9a2:	1f 93       	push	r17
     9a4:	cf 93       	push	r28
     9a6:	df 93       	push	r29
     9a8:	8b 01       	movw	r16, r22
     9aa:	c4 2f       	mov	r28, r20
     9ac:	90 e2       	ldi	r25, 0x20	; 32
     9ae:	90 93 a6 06 	sts	0x06A6, r25	; 0x8006a6 <__TEXT_REGION_LENGTH__+0x7be6a6>
     9b2:	8f 71       	andi	r24, 0x1F	; 31
     9b4:	80 62       	ori	r24, 0x20	; 32
     9b6:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     9ba:	d8 2e       	mov	r13, r24
     9bc:	0a c0       	rjmp	.+20     	; 0x9d2 <nrfWriteRegisterMulti+0x38>
     9be:	78 01       	movw	r14, r16
     9c0:	8f ef       	ldi	r24, 0xFF	; 255
     9c2:	e8 1a       	sub	r14, r24
     9c4:	f8 0a       	sbc	r15, r24
     9c6:	f8 01       	movw	r30, r16
     9c8:	80 81       	ld	r24, Z
     9ca:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     9ce:	cd 2f       	mov	r28, r29
     9d0:	87 01       	movw	r16, r14
     9d2:	df ef       	ldi	r29, 0xFF	; 255
     9d4:	dc 0f       	add	r29, r28
     9d6:	c1 11       	cpse	r28, r1
     9d8:	f2 cf       	rjmp	.-28     	; 0x9be <nrfWriteRegisterMulti+0x24>
     9da:	80 e2       	ldi	r24, 0x20	; 32
     9dc:	80 93 a5 06 	sts	0x06A5, r24	; 0x8006a5 <__TEXT_REGION_LENGTH__+0x7be6a5>
     9e0:	8d 2d       	mov	r24, r13
     9e2:	df 91       	pop	r29
     9e4:	cf 91       	pop	r28
     9e6:	1f 91       	pop	r17
     9e8:	0f 91       	pop	r16
     9ea:	ff 90       	pop	r15
     9ec:	ef 90       	pop	r14
     9ee:	df 90       	pop	r13
     9f0:	08 95       	ret

000009f2 <nrfWriteRegister>:
     9f2:	ff 92       	push	r15
     9f4:	0f 93       	push	r16
     9f6:	1f 93       	push	r17
     9f8:	cf 93       	push	r28
     9fa:	df 93       	push	r29
     9fc:	f6 2e       	mov	r15, r22
     9fe:	c0 ea       	ldi	r28, 0xA0	; 160
     a00:	d6 e0       	ldi	r29, 0x06	; 6
     a02:	10 e2       	ldi	r17, 0x20	; 32
     a04:	1e 83       	std	Y+6, r17	; 0x06
     a06:	8f 71       	andi	r24, 0x1F	; 31
     a08:	80 62       	ori	r24, 0x20	; 32
     a0a:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     a0e:	08 2f       	mov	r16, r24
     a10:	8f 2d       	mov	r24, r15
     a12:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     a16:	1d 83       	std	Y+5, r17	; 0x05
     a18:	80 2f       	mov	r24, r16
     a1a:	df 91       	pop	r29
     a1c:	cf 91       	pop	r28
     a1e:	1f 91       	pop	r17
     a20:	0f 91       	pop	r16
     a22:	ff 90       	pop	r15
     a24:	08 95       	ret

00000a26 <nrfReadPayload>:
     a26:	cf 92       	push	r12
     a28:	df 92       	push	r13
     a2a:	ef 92       	push	r14
     a2c:	ff 92       	push	r15
     a2e:	0f 93       	push	r16
     a30:	1f 93       	push	r17
     a32:	cf 93       	push	r28
     a34:	df 93       	push	r29
     a36:	8c 01       	movw	r16, r24
     a38:	d6 2f       	mov	r29, r22
     a3a:	c0 91 07 20 	lds	r28, 0x2007	; 0x802007 <fixed_payload_size>
     a3e:	c6 17       	cp	r28, r22
     a40:	08 f4       	brcc	.+2      	; 0xa44 <nrfReadPayload+0x1e>
     a42:	dc 2f       	mov	r29, r28
     a44:	80 91 e0 20 	lds	r24, 0x20E0	; 0x8020e0 <dynamic_payloads_enabled>
     a48:	81 11       	cpse	r24, r1
     a4a:	02 c0       	rjmp	.+4      	; 0xa50 <nrfReadPayload+0x2a>
     a4c:	cd 1b       	sub	r28, r29
     a4e:	01 c0       	rjmp	.+2      	; 0xa52 <nrfReadPayload+0x2c>
     a50:	c0 e0       	ldi	r28, 0x00	; 0
     a52:	80 e2       	ldi	r24, 0x20	; 32
     a54:	80 93 a6 06 	sts	0x06A6, r24	; 0x8006a6 <__TEXT_REGION_LENGTH__+0x7be6a6>
     a58:	81 e6       	ldi	r24, 0x61	; 97
     a5a:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     a5e:	e8 2e       	mov	r14, r24
     a60:	0b c0       	rjmp	.+22     	; 0xa78 <nrfReadPayload+0x52>
     a62:	68 01       	movw	r12, r16
     a64:	8f ef       	ldi	r24, 0xFF	; 255
     a66:	c8 1a       	sub	r12, r24
     a68:	d8 0a       	sbc	r13, r24
     a6a:	8f ef       	ldi	r24, 0xFF	; 255
     a6c:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     a70:	f8 01       	movw	r30, r16
     a72:	80 83       	st	Z, r24
     a74:	df 2d       	mov	r29, r15
     a76:	86 01       	movw	r16, r12
     a78:	ff 24       	eor	r15, r15
     a7a:	fa 94       	dec	r15
     a7c:	fd 0e       	add	r15, r29
     a7e:	d1 11       	cpse	r29, r1
     a80:	f0 cf       	rjmp	.-32     	; 0xa62 <nrfReadPayload+0x3c>
     a82:	04 c0       	rjmp	.+8      	; 0xa8c <nrfReadPayload+0x66>
     a84:	8f ef       	ldi	r24, 0xFF	; 255
     a86:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     a8a:	cd 2f       	mov	r28, r29
     a8c:	df ef       	ldi	r29, 0xFF	; 255
     a8e:	dc 0f       	add	r29, r28
     a90:	c1 11       	cpse	r28, r1
     a92:	f8 cf       	rjmp	.-16     	; 0xa84 <nrfReadPayload+0x5e>
     a94:	80 e2       	ldi	r24, 0x20	; 32
     a96:	80 93 a5 06 	sts	0x06A5, r24	; 0x8006a5 <__TEXT_REGION_LENGTH__+0x7be6a5>
     a9a:	8e 2d       	mov	r24, r14
     a9c:	df 91       	pop	r29
     a9e:	cf 91       	pop	r28
     aa0:	1f 91       	pop	r17
     aa2:	0f 91       	pop	r16
     aa4:	ff 90       	pop	r15
     aa6:	ef 90       	pop	r14
     aa8:	df 90       	pop	r13
     aaa:	cf 90       	pop	r12
     aac:	08 95       	ret

00000aae <nrfRead>:
     aae:	0e 94 13 05 	call	0xa26	; 0xa26 <nrfReadPayload>
     ab2:	87 e1       	ldi	r24, 0x17	; 23
     ab4:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     ab8:	81 70       	andi	r24, 0x01	; 1
     aba:	08 95       	ret

00000abc <nrfFlushRx>:
     abc:	1f 93       	push	r17
     abe:	cf 93       	push	r28
     ac0:	df 93       	push	r29
     ac2:	c0 ea       	ldi	r28, 0xA0	; 160
     ac4:	d6 e0       	ldi	r29, 0x06	; 6
     ac6:	10 e2       	ldi	r17, 0x20	; 32
     ac8:	1e 83       	std	Y+6, r17	; 0x06
     aca:	82 ee       	ldi	r24, 0xE2	; 226
     acc:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     ad0:	1d 83       	std	Y+5, r17	; 0x05
     ad2:	df 91       	pop	r29
     ad4:	cf 91       	pop	r28
     ad6:	1f 91       	pop	r17
     ad8:	08 95       	ret

00000ada <nrfFlushTx>:
     ada:	1f 93       	push	r17
     adc:	cf 93       	push	r28
     ade:	df 93       	push	r29
     ae0:	c0 ea       	ldi	r28, 0xA0	; 160
     ae2:	d6 e0       	ldi	r29, 0x06	; 6
     ae4:	10 e2       	ldi	r17, 0x20	; 32
     ae6:	1e 83       	std	Y+6, r17	; 0x06
     ae8:	81 ee       	ldi	r24, 0xE1	; 225
     aea:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     aee:	1d 83       	std	Y+5, r17	; 0x05
     af0:	df 91       	pop	r29
     af2:	cf 91       	pop	r28
     af4:	1f 91       	pop	r17
     af6:	08 95       	ret

00000af8 <nrfStartListening>:
     af8:	80 e0       	ldi	r24, 0x00	; 0
     afa:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     afe:	81 fd       	sbrc	r24, 1
     b00:	0c c0       	rjmp	.+24     	; 0xb1a <nrfStartListening+0x22>
     b02:	68 2f       	mov	r22, r24
     b04:	63 60       	ori	r22, 0x03	; 3
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     b0c:	8f e7       	ldi	r24, 0x7F	; 127
     b0e:	9e e3       	ldi	r25, 0x3E	; 62
     b10:	01 97       	sbiw	r24, 0x01	; 1
     b12:	f1 f7       	brne	.-4      	; 0xb10 <nrfStartListening+0x18>
     b14:	00 c0       	rjmp	.+0      	; 0xb16 <nrfStartListening+0x1e>
     b16:	00 00       	nop
     b18:	05 c0       	rjmp	.+10     	; 0xb24 <nrfStartListening+0x2c>
     b1a:	68 2f       	mov	r22, r24
     b1c:	61 60       	ori	r22, 0x01	; 1
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     b24:	8f e0       	ldi	r24, 0x0F	; 15
     b26:	94 e0       	ldi	r25, 0x04	; 4
     b28:	01 97       	sbiw	r24, 0x01	; 1
     b2a:	f1 f7       	brne	.-4      	; 0xb28 <nrfStartListening+0x30>
     b2c:	00 c0       	rjmp	.+0      	; 0xb2e <nrfStartListening+0x36>
     b2e:	00 00       	nop
     b30:	60 e7       	ldi	r22, 0x70	; 112
     b32:	87 e0       	ldi	r24, 0x07	; 7
     b34:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     b38:	40 91 06 20 	lds	r20, 0x2006	; 0x802006 <addr_width>
     b3c:	6b ed       	ldi	r22, 0xDB	; 219
     b3e:	70 e2       	ldi	r23, 0x20	; 32
     b40:	8a e0       	ldi	r24, 0x0A	; 10
     b42:	0e 94 cd 04 	call	0x99a	; 0x99a <nrfWriteRegisterMulti>
     b46:	0e 94 5e 05 	call	0xabc	; 0xabc <nrfFlushRx>
     b4a:	0e 94 6d 05 	call	0xada	; 0xada <nrfFlushTx>
     b4e:	80 e8       	ldi	r24, 0x80	; 128
     b50:	80 93 a5 06 	sts	0x06A5, r24	; 0x8006a5 <__TEXT_REGION_LENGTH__+0x7be6a5>
     b54:	8f e0       	ldi	r24, 0x0F	; 15
     b56:	94 e0       	ldi	r25, 0x04	; 4
     b58:	01 97       	sbiw	r24, 0x01	; 1
     b5a:	f1 f7       	brne	.-4      	; 0xb58 <nrfStartListening+0x60>
     b5c:	00 c0       	rjmp	.+0      	; 0xb5e <nrfStartListening+0x66>
     b5e:	00 00       	nop
     b60:	08 95       	ret

00000b62 <nrfWhatHappened>:
     b62:	ef 92       	push	r14
     b64:	ff 92       	push	r15
     b66:	0f 93       	push	r16
     b68:	1f 93       	push	r17
     b6a:	cf 93       	push	r28
     b6c:	df 93       	push	r29
     b6e:	7c 01       	movw	r14, r24
     b70:	8b 01       	movw	r16, r22
     b72:	ea 01       	movw	r28, r20
     b74:	60 e7       	ldi	r22, 0x70	; 112
     b76:	87 e0       	ldi	r24, 0x07	; 7
     b78:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     b7c:	98 2f       	mov	r25, r24
     b7e:	90 72       	andi	r25, 0x20	; 32
     b80:	f7 01       	movw	r30, r14
     b82:	90 83       	st	Z, r25
     b84:	98 2f       	mov	r25, r24
     b86:	90 71       	andi	r25, 0x10	; 16
     b88:	f8 01       	movw	r30, r16
     b8a:	90 83       	st	Z, r25
     b8c:	80 74       	andi	r24, 0x40	; 64
     b8e:	88 83       	st	Y, r24
     b90:	df 91       	pop	r29
     b92:	cf 91       	pop	r28
     b94:	1f 91       	pop	r17
     b96:	0f 91       	pop	r16
     b98:	ff 90       	pop	r15
     b9a:	ef 90       	pop	r14
     b9c:	08 95       	ret

00000b9e <nrfOpenReadingPipe>:
     b9e:	0f 93       	push	r16
     ba0:	1f 93       	push	r17
     ba2:	cf 93       	push	r28
     ba4:	df 93       	push	r29
     ba6:	c8 2f       	mov	r28, r24
     ba8:	8b 01       	movw	r16, r22
     baa:	81 11       	cpse	r24, r1
     bac:	07 c0       	rjmp	.+14     	; 0xbbc <nrfOpenReadingPipe+0x1e>
     bae:	40 91 06 20 	lds	r20, 0x2006	; 0x802006 <addr_width>
     bb2:	50 e0       	ldi	r21, 0x00	; 0
     bb4:	8b ed       	ldi	r24, 0xDB	; 219
     bb6:	90 e2       	ldi	r25, 0x20	; 32
     bb8:	0e 94 04 10 	call	0x2008	; 0x2008 <memcpy>
     bbc:	c7 30       	cpi	r28, 0x07	; 7
     bbe:	80 f5       	brcc	.+96     	; 0xc20 <nrfOpenReadingPipe+0x82>
     bc0:	c2 30       	cpi	r28, 0x02	; 2
     bc2:	58 f4       	brcc	.+22     	; 0xbda <nrfOpenReadingPipe+0x3c>
     bc4:	ec 2f       	mov	r30, r28
     bc6:	f0 e0       	ldi	r31, 0x00	; 0
     bc8:	e1 53       	subi	r30, 0x31	; 49
     bca:	ff 4d       	sbci	r31, 0xDF	; 223
     bcc:	40 91 06 20 	lds	r20, 0x2006	; 0x802006 <addr_width>
     bd0:	b8 01       	movw	r22, r16
     bd2:	80 81       	ld	r24, Z
     bd4:	0e 94 cd 04 	call	0x99a	; 0x99a <nrfWriteRegisterMulti>
     bd8:	09 c0       	rjmp	.+18     	; 0xbec <nrfOpenReadingPipe+0x4e>
     bda:	ec 2f       	mov	r30, r28
     bdc:	f0 e0       	ldi	r31, 0x00	; 0
     bde:	e1 53       	subi	r30, 0x31	; 49
     be0:	ff 4d       	sbci	r31, 0xDF	; 223
     be2:	41 e0       	ldi	r20, 0x01	; 1
     be4:	b8 01       	movw	r22, r16
     be6:	80 81       	ld	r24, Z
     be8:	0e 94 cd 04 	call	0x99a	; 0x99a <nrfWriteRegisterMulti>
     bec:	d0 e0       	ldi	r29, 0x00	; 0
     bee:	fe 01       	movw	r30, r28
     bf0:	e7 53       	subi	r30, 0x37	; 55
     bf2:	ff 4d       	sbci	r31, 0xDF	; 223
     bf4:	60 91 07 20 	lds	r22, 0x2007	; 0x802007 <fixed_payload_size>
     bf8:	80 81       	ld	r24, Z
     bfa:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     bfe:	82 e0       	ldi	r24, 0x02	; 2
     c00:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     c04:	cd 53       	subi	r28, 0x3D	; 61
     c06:	df 4d       	sbci	r29, 0xDF	; 223
     c08:	61 e0       	ldi	r22, 0x01	; 1
     c0a:	70 e0       	ldi	r23, 0x00	; 0
     c0c:	08 80       	ld	r0, Y
     c0e:	02 c0       	rjmp	.+4      	; 0xc14 <nrfOpenReadingPipe+0x76>
     c10:	66 0f       	add	r22, r22
     c12:	77 1f       	adc	r23, r23
     c14:	0a 94       	dec	r0
     c16:	e2 f7       	brpl	.-8      	; 0xc10 <nrfOpenReadingPipe+0x72>
     c18:	68 2b       	or	r22, r24
     c1a:	82 e0       	ldi	r24, 0x02	; 2
     c1c:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     c20:	df 91       	pop	r29
     c22:	cf 91       	pop	r28
     c24:	1f 91       	pop	r17
     c26:	0f 91       	pop	r16
     c28:	08 95       	ret

00000c2a <nrfToggleFeatures>:
     c2a:	1f 93       	push	r17
     c2c:	cf 93       	push	r28
     c2e:	df 93       	push	r29
     c30:	c0 ea       	ldi	r28, 0xA0	; 160
     c32:	d6 e0       	ldi	r29, 0x06	; 6
     c34:	10 e2       	ldi	r17, 0x20	; 32
     c36:	1e 83       	std	Y+6, r17	; 0x06
     c38:	80 e5       	ldi	r24, 0x50	; 80
     c3a:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     c3e:	83 e7       	ldi	r24, 0x73	; 115
     c40:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     c44:	1d 83       	std	Y+5, r17	; 0x05
     c46:	df 91       	pop	r29
     c48:	cf 91       	pop	r28
     c4a:	1f 91       	pop	r17
     c4c:	08 95       	ret

00000c4e <nrfEnableDynamicPayloads>:
     c4e:	8d e1       	ldi	r24, 0x1D	; 29
     c50:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     c54:	68 2f       	mov	r22, r24
     c56:	64 60       	ori	r22, 0x04	; 4
     c58:	8d e1       	ldi	r24, 0x1D	; 29
     c5a:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     c5e:	8d e1       	ldi	r24, 0x1D	; 29
     c60:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     c64:	81 11       	cpse	r24, r1
     c66:	0a c0       	rjmp	.+20     	; 0xc7c <nrfEnableDynamicPayloads+0x2e>
     c68:	0e 94 15 06 	call	0xc2a	; 0xc2a <nrfToggleFeatures>
     c6c:	8d e1       	ldi	r24, 0x1D	; 29
     c6e:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     c72:	68 2f       	mov	r22, r24
     c74:	64 60       	ori	r22, 0x04	; 4
     c76:	8d e1       	ldi	r24, 0x1D	; 29
     c78:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     c7c:	8c e1       	ldi	r24, 0x1C	; 28
     c7e:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     c82:	68 2f       	mov	r22, r24
     c84:	6f 63       	ori	r22, 0x3F	; 63
     c86:	8c e1       	ldi	r24, 0x1C	; 28
     c88:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     c8c:	81 e0       	ldi	r24, 0x01	; 1
     c8e:	80 93 e0 20 	sts	0x20E0, r24	; 0x8020e0 <dynamic_payloads_enabled>
     c92:	08 95       	ret

00000c94 <nrfGetDynamicPayloadSize>:
     c94:	1f 93       	push	r17
     c96:	cf 93       	push	r28
     c98:	df 93       	push	r29
     c9a:	c0 ea       	ldi	r28, 0xA0	; 160
     c9c:	d6 e0       	ldi	r29, 0x06	; 6
     c9e:	10 e2       	ldi	r17, 0x20	; 32
     ca0:	1e 83       	std	Y+6, r17	; 0x06
     ca2:	80 e6       	ldi	r24, 0x60	; 96
     ca4:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     ca8:	8f ef       	ldi	r24, 0xFF	; 255
     caa:	0e 94 f4 06 	call	0xde8	; 0xde8 <nrfspiTransfer>
     cae:	1d 83       	std	Y+5, r17	; 0x05
     cb0:	df 91       	pop	r29
     cb2:	cf 91       	pop	r28
     cb4:	1f 91       	pop	r17
     cb6:	08 95       	ret

00000cb8 <nrfSetChannel>:
     cb8:	88 23       	and	r24, r24
     cba:	2c f0       	brlt	.+10     	; 0xcc6 <nrfSetChannel+0xe>
     cbc:	68 2f       	mov	r22, r24
     cbe:	85 e0       	ldi	r24, 0x05	; 5
     cc0:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     cc4:	08 95       	ret
     cc6:	6f e7       	ldi	r22, 0x7F	; 127
     cc8:	85 e0       	ldi	r24, 0x05	; 5
     cca:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     cce:	08 95       	ret

00000cd0 <nrfSetAutoAck>:
     cd0:	88 23       	and	r24, r24
     cd2:	29 f0       	breq	.+10     	; 0xcde <nrfSetAutoAck+0xe>
     cd4:	6f e3       	ldi	r22, 0x3F	; 63
     cd6:	81 e0       	ldi	r24, 0x01	; 1
     cd8:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     cdc:	08 95       	ret
     cde:	60 e0       	ldi	r22, 0x00	; 0
     ce0:	81 e0       	ldi	r24, 0x01	; 1
     ce2:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     ce6:	08 95       	ret

00000ce8 <nrfSetPALevel>:
     ce8:	cf 93       	push	r28
     cea:	c8 2f       	mov	r28, r24
     cec:	86 e0       	ldi	r24, 0x06	; 6
     cee:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     cf2:	89 7f       	andi	r24, 0xF9	; 249
     cf4:	c6 70       	andi	r28, 0x06	; 6
     cf6:	68 2f       	mov	r22, r24
     cf8:	6c 2b       	or	r22, r28
     cfa:	86 e0       	ldi	r24, 0x06	; 6
     cfc:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     d00:	cf 91       	pop	r28
     d02:	08 95       	ret

00000d04 <nrfSetDataRate>:
     d04:	cf 93       	push	r28
     d06:	c8 2f       	mov	r28, r24
     d08:	86 e0       	ldi	r24, 0x06	; 6
     d0a:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     d0e:	87 7d       	andi	r24, 0xD7	; 215
     d10:	9c 2f       	mov	r25, r28
     d12:	98 72       	andi	r25, 0x28	; 40
     d14:	68 2f       	mov	r22, r24
     d16:	69 2b       	or	r22, r25
     d18:	86 e0       	ldi	r24, 0x06	; 6
     d1a:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     d1e:	86 e0       	ldi	r24, 0x06	; 6
     d20:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     d24:	c8 13       	cpse	r28, r24
     d26:	02 c0       	rjmp	.+4      	; 0xd2c <nrfSetDataRate+0x28>
     d28:	81 e0       	ldi	r24, 0x01	; 1
     d2a:	01 c0       	rjmp	.+2      	; 0xd2e <nrfSetDataRate+0x2a>
     d2c:	80 e0       	ldi	r24, 0x00	; 0
     d2e:	cf 91       	pop	r28
     d30:	08 95       	ret

00000d32 <nrfSetCRCLength>:
     d32:	cf 93       	push	r28
     d34:	c8 2f       	mov	r28, r24
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	0e 94 bb 04 	call	0x976	; 0x976 <nrfReadRegister>
     d3c:	83 7f       	andi	r24, 0xF3	; 243
     d3e:	cc 70       	andi	r28, 0x0C	; 12
     d40:	68 2f       	mov	r22, r24
     d42:	6c 2b       	or	r22, r28
     d44:	80 e0       	ldi	r24, 0x00	; 0
     d46:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     d4a:	cf 91       	pop	r28
     d4c:	08 95       	ret

00000d4e <nrfSetRetries>:
     d4e:	68 2b       	or	r22, r24
     d50:	84 e0       	ldi	r24, 0x04	; 4
     d52:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     d56:	08 95       	ret

00000d58 <nrfClearInterruptBits>:
 * \brief   Clear Interrupt Bits
 *
 */
void nrfClearInterruptBits(void)
{
  nrfWriteRegister(REG_STATUS, NRF_STATUS_RX_DR_bm | NRF_STATUS_TX_DS_bm | NRF_STATUS_MAX_RT_bm );
     d58:	60 e7       	ldi	r22, 0x70	; 112
     d5a:	87 e0       	ldi	r24, 0x07	; 7
     d5c:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>
     d60:	08 95       	ret

00000d62 <nrfBegin>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d62:	8f e3       	ldi	r24, 0x3F	; 63
     d64:	9c e9       	ldi	r25, 0x9C	; 156
     d66:	01 97       	sbiw	r24, 0x01	; 1
     d68:	f1 f7       	brne	.-4      	; 0xd66 <nrfBegin+0x4>
     d6a:	00 c0       	rjmp	.+0      	; 0xd6c <nrfBegin+0xa>
     d6c:	00 00       	nop

  // Set 1500uS (minimum for 32B payload in ESB@250KBPS) timeouts, to make testing a little easier
  // WARNING: If this is ever lowered, either 250KBS mode with AA is broken or maximum packet
  // sizes must never be used. See documentation for a more complete explanation.
  //  nrfWriteRegister(REG_SETUP_RETR, NRF_SETUP_ARD_1500US_gc | NRF_SETUP_ARC_15RETRANSMIT_gc );
  nrfSetRetries(NRF_SETUP_ARD_1500US_gc, NRF_SETUP_ARC_15RETRANSMIT_gc);
     d6e:	6f e0       	ldi	r22, 0x0F	; 15
     d70:	80 e5       	ldi	r24, 0x50	; 80
     d72:	0e 94 a7 06 	call	0xd4e	; 0xd4e <nrfSetRetries>

  // Restore our default PA level
  nrfSetPALevel( NRF_RF_SETUP_PWR_0DBM_gc ) ;
     d76:	86 e0       	ldi	r24, 0x06	; 6
     d78:	0e 94 74 06 	call	0xce8	; 0xce8 <nrfSetPALevel>

  // Determine if this is a p or non-p RF24 module and then
  // reset our data rate back to default value. This works
  // because a non-P variant won't allow the data rate to
  // be set to 250Kbps.
  if( nrfSetDataRate( NRF_RF_SETUP_RF_DR_250K_gc ) )
     d7c:	80 e2       	ldi	r24, 0x20	; 32
     d7e:	0e 94 82 06 	call	0xd04	; 0xd04 <nrfSetDataRate>
     d82:	88 23       	and	r24, r24
     d84:	19 f0       	breq	.+6      	; 0xd8c <nrfBegin+0x2a>
  {
    p_variant = 1 ;
     d86:	81 e0       	ldi	r24, 0x01	; 1
     d88:	80 93 08 20 	sts	0x2008, r24	; 0x802008 <p_variant>
  }

  // Then set the data rate to the slowest (and most reliable) speed supported by all
  // hardware.
  nrfSetDataRate( NRF_RF_SETUP_RF_DR_1M_gc );
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	0e 94 82 06 	call	0xd04	; 0xd04 <nrfSetDataRate>

  // Initialize CRC and request 2-byte (16bit) CRC
  nrfSetCRCLength( NRF_CONFIG_CRC_16_gc ) ;
     d92:	8c e0       	ldi	r24, 0x0C	; 12
     d94:	0e 94 99 06 	call	0xd32	; 0xd32 <nrfSetCRCLength>

  // Disable dynamic payloads, to match dynamic_payloads_enabled setting
  nrfWriteRegister(REG_DYNPD, 0);
     d98:	60 e0       	ldi	r22, 0x00	; 0
     d9a:	8c e1       	ldi	r24, 0x1C	; 28
     d9c:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <nrfWriteRegister>

  // Set up default configuration.  Callers can always change it later.
  // This channel should be universally safe and not bleed over into adjacent
  // spectrum.
  nrfSetChannel(76);
     da0:	8c e4       	ldi	r24, 0x4C	; 76
     da2:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <nrfSetChannel>

  // Reset current status
  // Notice reset and flush is the last thing we do
  nrfClearInterruptBits();
     da6:	0e 94 ac 06 	call	0xd58	; 0xd58 <nrfClearInterruptBits>
  nrfFlushRx();
     daa:	0e 94 5e 05 	call	0xabc	; 0xabc <nrfFlushRx>
  nrfFlushTx();
     dae:	0e 94 6d 05 	call	0xada	; 0xada <nrfFlushTx>
     db2:	08 95       	ret

00000db4 <nrfspiInit>:
 *  \return void
 */

void nrfspiInit(void)
{
  PORTC.DIRSET = PIN3_bm;  // MOSI
     db4:	e0 e4       	ldi	r30, 0x40	; 64
     db6:	f6 e0       	ldi	r31, 0x06	; 6
     db8:	88 e0       	ldi	r24, 0x08	; 8
     dba:	81 83       	std	Z+1, r24	; 0x01
  PORTC.DIRCLR = PIN2_bm;  // MISO
     dbc:	84 e0       	ldi	r24, 0x04	; 4
     dbe:	82 83       	std	Z+2, r24	; 0x02
  PORTC.DIRSET = PIN1_bm;  // SCK
     dc0:	82 e0       	ldi	r24, 0x02	; 2
     dc2:	81 83       	std	Z+1, r24	; 0x01
  PORTF.DIRSET = PIN5_bm;  // CSN
     dc4:	e0 ea       	ldi	r30, 0xA0	; 160
     dc6:	f6 e0       	ldi	r31, 0x06	; 6
     dc8:	80 e2       	ldi	r24, 0x20	; 32
     dca:	81 83       	std	Z+1, r24	; 0x01
  PORTF.DIRCLR = PIN6_bm;  // IRQ
     dcc:	80 e4       	ldi	r24, 0x40	; 64
     dce:	82 83       	std	Z+2, r24	; 0x02
  PORTF.DIRSET = PIN7_bm;  // CE
     dd0:	80 e8       	ldi	r24, 0x80	; 128
     dd2:	81 83       	std	Z+1, r24	; 0x01

  USARTC0.CTRLB = USART_TXEN_bm | USART_RXEN_bm;
     dd4:	e0 ea       	ldi	r30, 0xA0	; 160
     dd6:	f8 e0       	ldi	r31, 0x08	; 8
     dd8:	88 e1       	ldi	r24, 0x18	; 24
     dda:	84 83       	std	Z+4, r24	; 0x04
  USARTC0.CTRLC = USART_CMODE_MSPI_gc;
     ddc:	80 ec       	ldi	r24, 0xC0	; 192
     dde:	85 83       	std	Z+5, r24	; 0x05

  USARTC0.BAUDCTRLB = 0;
     de0:	17 82       	std	Z+7, r1	; 0x07
  USARTC0.BAUDCTRLA = 1;   // F_CPU/(2*(BSEL+1))  is 8MHz on 32MHz CPU
     de2:	81 e0       	ldi	r24, 0x01	; 1
     de4:	86 83       	std	Z+6, r24	; 0x06
     de6:	08 95       	ret

00000de8 <nrfspiTransfer>:
 *
 *  \return  Data received from slave (status of the nrf24L01p)
 */
uint8_t nrfspiTransfer(uint8_t iData)
{
  USARTC0.DATA = iData;
     de8:	80 93 a0 08 	sts	0x08A0, r24	; 0x8008a0 <__TEXT_REGION_LENGTH__+0x7be8a0>
  while( !(USARTC0.STATUS & USART_TXCIF_bm) );
     dec:	80 91 a1 08 	lds	r24, 0x08A1	; 0x8008a1 <__TEXT_REGION_LENGTH__+0x7be8a1>
     df0:	86 ff       	sbrs	r24, 6
     df2:	fc cf       	rjmp	.-8      	; 0xdec <nrfspiTransfer+0x4>
  USARTC0.STATUS |= USART_TXCIF_bm;
     df4:	e0 ea       	ldi	r30, 0xA0	; 160
     df6:	f8 e0       	ldi	r31, 0x08	; 8
     df8:	81 81       	ldd	r24, Z+1	; 0x01
     dfa:	80 64       	ori	r24, 0x40	; 64
     dfc:	81 83       	std	Z+1, r24	; 0x01

  return USARTC0.DATA;
     dfe:	80 81       	ld	r24, Z
}
     e00:	08 95       	ret

00000e02 <CanRead_F0>:
    }
  }
  *p = '\0';

  return buf;
}
     e02:	80 91 46 21 	lds	r24, 0x2146	; 0x802146 <rx_f0_wridx>
     e06:	90 91 45 21 	lds	r25, 0x2145	; 0x802145 <rx_f0_rdidx>
     e0a:	89 17       	cp	r24, r25
     e0c:	10 f0       	brcs	.+4      	; 0xe12 <CanRead_F0+0x10>
     e0e:	89 1b       	sub	r24, r25
     e10:	08 95       	ret
     e12:	89 1b       	sub	r24, r25
     e14:	8c 59       	subi	r24, 0x9C	; 156
     e16:	08 95       	ret

00000e18 <ReadByte_F0>:
     e18:	cf 93       	push	r28
     e1a:	c0 91 45 21 	lds	r28, 0x2145	; 0x802145 <rx_f0_rdidx>
     e1e:	0e 94 01 07 	call	0xe02	; 0xe02 <CanRead_F0>
     e22:	88 23       	and	r24, r24
     e24:	e1 f3       	breq	.-8      	; 0xe1e <ReadByte_F0+0x6>
     e26:	ec 2f       	mov	r30, r28
     e28:	f0 e0       	ldi	r31, 0x00	; 0
     e2a:	ef 51       	subi	r30, 0x1F	; 31
     e2c:	ff 4d       	sbci	r31, 0xDF	; 223
     e2e:	80 81       	ld	r24, Z
     e30:	91 e0       	ldi	r25, 0x01	; 1
     e32:	9c 0f       	add	r25, r28
     e34:	94 36       	cpi	r25, 0x64	; 100
     e36:	08 f0       	brcs	.+2      	; 0xe3a <ReadByte_F0+0x22>
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	90 93 45 21 	sts	0x2145, r25	; 0x802145 <rx_f0_rdidx>
     e3e:	cf 91       	pop	r28
     e40:	08 95       	ret

00000e42 <uartF0_fgetc>:
     e42:	0e 94 0c 07 	call	0xe18	; 0xe18 <ReadByte_F0>
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	08 95       	ret

00000e4a <CanWrite_F0>:
     e4a:	20 91 ac 21 	lds	r18, 0x21AC	; 0x8021ac <tx_f0_wridx>
     e4e:	91 e0       	ldi	r25, 0x01	; 1
     e50:	92 0f       	add	r25, r18
     e52:	80 91 ab 21 	lds	r24, 0x21AB	; 0x8021ab <tx_f0_rdidx>
     e56:	94 36       	cpi	r25, 0x64	; 100
     e58:	10 f0       	brcs	.+4      	; 0xe5e <CanWrite_F0+0x14>
     e5a:	9d e9       	ldi	r25, 0x9D	; 157
     e5c:	92 0f       	add	r25, r18
     e5e:	89 17       	cp	r24, r25
     e60:	10 f0       	brcs	.+4      	; 0xe66 <CanWrite_F0+0x1c>
     e62:	89 1b       	sub	r24, r25
     e64:	08 95       	ret
     e66:	89 1b       	sub	r24, r25
     e68:	8c 59       	subi	r24, 0x9C	; 156
     e6a:	08 95       	ret

00000e6c <WriteByte_F0>:
     e6c:	cf 93       	push	r28
     e6e:	c8 2f       	mov	r28, r24
     e70:	03 c0       	rjmp	.+6      	; 0xe78 <WriteByte_F0+0xc>
     e72:	81 e2       	ldi	r24, 0x21	; 33
     e74:	80 93 a3 0b 	sts	0x0BA3, r24	; 0x800ba3 <__TEXT_REGION_LENGTH__+0x7beba3>
     e78:	0e 94 25 07 	call	0xe4a	; 0xe4a <CanWrite_F0>
     e7c:	88 23       	and	r24, r24
     e7e:	c9 f3       	breq	.-14     	; 0xe72 <WriteByte_F0+0x6>
     e80:	80 91 ac 21 	lds	r24, 0x21AC	; 0x8021ac <tx_f0_wridx>
     e84:	e8 2f       	mov	r30, r24
     e86:	f0 e0       	ldi	r31, 0x00	; 0
     e88:	e9 5b       	subi	r30, 0xB9	; 185
     e8a:	fe 4d       	sbci	r31, 0xDE	; 222
     e8c:	c0 83       	st	Z, r28
     e8e:	8f 5f       	subi	r24, 0xFF	; 255
     e90:	84 36       	cpi	r24, 0x64	; 100
     e92:	08 f0       	brcs	.+2      	; 0xe96 <WriteByte_F0+0x2a>
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	e0 ea       	ldi	r30, 0xA0	; 160
     e98:	f0 e0       	ldi	r31, 0x00	; 0
     e9a:	92 81       	ldd	r25, Z+2	; 0x02
     e9c:	29 2f       	mov	r18, r25
     e9e:	2e 7f       	andi	r18, 0xFE	; 254
     ea0:	22 83       	std	Z+2, r18	; 0x02
     ea2:	80 93 ac 21 	sts	0x21AC, r24	; 0x8021ac <tx_f0_wridx>
     ea6:	81 e2       	ldi	r24, 0x21	; 33
     ea8:	80 93 a3 0b 	sts	0x0BA3, r24	; 0x800ba3 <__TEXT_REGION_LENGTH__+0x7beba3>
     eac:	92 83       	std	Z+2, r25	; 0x02
     eae:	cf 91       	pop	r28
     eb0:	08 95       	ret

00000eb2 <uartF0_fputc>:
     eb2:	cf 93       	push	r28
     eb4:	df 93       	push	r29
     eb6:	d8 2f       	mov	r29, r24
     eb8:	cf ef       	ldi	r28, 0xFF	; 255
     eba:	03 c0       	rjmp	.+6      	; 0xec2 <uartF0_fputc+0x10>
     ebc:	cc 23       	and	r28, r28
     ebe:	29 f0       	breq	.+10     	; 0xeca <uartF0_fputc+0x18>
     ec0:	c1 50       	subi	r28, 0x01	; 1
     ec2:	0e 94 25 07 	call	0xe4a	; 0xe4a <CanWrite_F0>
     ec6:	88 23       	and	r24, r24
     ec8:	c9 f3       	breq	.-14     	; 0xebc <uartF0_fputc+0xa>
     eca:	cc 23       	and	r28, r28
     ecc:	59 f0       	breq	.+22     	; 0xee4 <uartF0_fputc+0x32>
     ece:	da 30       	cpi	r29, 0x0A	; 10
     ed0:	19 f4       	brne	.+6      	; 0xed8 <uartF0_fputc+0x26>
     ed2:	8d e0       	ldi	r24, 0x0D	; 13
     ed4:	0e 94 36 07 	call	0xe6c	; 0xe6c <WriteByte_F0>
     ed8:	8d 2f       	mov	r24, r29
     eda:	0e 94 36 07 	call	0xe6c	; 0xe6c <WriteByte_F0>
     ede:	80 e0       	ldi	r24, 0x00	; 0
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <uartF0_fputc+0x36>
     ee4:	81 e0       	ldi	r24, 0x01	; 1
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	df 91       	pop	r29
     eea:	cf 91       	pop	r28
     eec:	08 95       	ret

00000eee <calc_bsel>:
     eee:	4f 92       	push	r4
     ef0:	5f 92       	push	r5
     ef2:	6f 92       	push	r6
     ef4:	7f 92       	push	r7
     ef6:	8f 92       	push	r8
     ef8:	9f 92       	push	r9
     efa:	af 92       	push	r10
     efc:	bf 92       	push	r11
     efe:	cf 92       	push	r12
     f00:	df 92       	push	r13
     f02:	ef 92       	push	r14
     f04:	ff 92       	push	r15
     f06:	0f 93       	push	r16
     f08:	1f 93       	push	r17
     f0a:	cf 93       	push	r28
     f0c:	df 93       	push	r29
     f0e:	29 01       	movw	r4, r18
     f10:	3a 01       	movw	r6, r20
     f12:	2e 2d       	mov	r18, r14
     f14:	21 70       	andi	r18, 0x01	; 1
     f16:	c0 e1       	ldi	r28, 0x10	; 16
     f18:	d0 e0       	ldi	r29, 0x00	; 0
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <calc_bsel+0x32>
     f1c:	d5 95       	asr	r29
     f1e:	c7 95       	ror	r28
     f20:	2a 95       	dec	r18
     f22:	e2 f7       	brpl	.-8      	; 0xf1c <calc_bsel+0x2e>
     f24:	00 23       	and	r16, r16
     f26:	f4 f5       	brge	.+124    	; 0xfa4 <calc_bsel+0xb6>
     f28:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__floatunsisf>
     f2c:	6b 01       	movw	r12, r22
     f2e:	7c 01       	movw	r14, r24
     f30:	c3 01       	movw	r24, r6
     f32:	b2 01       	movw	r22, r4
     f34:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__floatunsisf>
     f38:	4b 01       	movw	r8, r22
     f3a:	5c 01       	movw	r10, r24
     f3c:	dd 27       	eor	r29, r29
     f3e:	be 01       	movw	r22, r28
     f40:	dd 0f       	add	r29, r29
     f42:	88 0b       	sbc	r24, r24
     f44:	99 0b       	sbc	r25, r25
     f46:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__floatsisf>
     f4a:	a5 01       	movw	r20, r10
     f4c:	94 01       	movw	r18, r8
     f4e:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     f52:	9b 01       	movw	r18, r22
     f54:	ac 01       	movw	r20, r24
     f56:	c7 01       	movw	r24, r14
     f58:	b6 01       	movw	r22, r12
     f5a:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__divsf3>
     f5e:	20 e0       	ldi	r18, 0x00	; 0
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	40 e8       	ldi	r20, 0x80	; 128
     f64:	5f e3       	ldi	r21, 0x3F	; 63
     f66:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__subsf3>
     f6a:	6b 01       	movw	r12, r22
     f6c:	7c 01       	movw	r14, r24
     f6e:	11 27       	eor	r17, r17
     f70:	01 95       	neg	r16
     f72:	0c f4       	brge	.+2      	; 0xf76 <calc_bsel+0x88>
     f74:	10 95       	com	r17
     f76:	61 e0       	ldi	r22, 0x01	; 1
     f78:	70 e0       	ldi	r23, 0x00	; 0
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <calc_bsel+0x92>
     f7c:	66 0f       	add	r22, r22
     f7e:	77 1f       	adc	r23, r23
     f80:	0a 95       	dec	r16
     f82:	e2 f7       	brpl	.-8      	; 0xf7c <calc_bsel+0x8e>
     f84:	07 2e       	mov	r0, r23
     f86:	00 0c       	add	r0, r0
     f88:	88 0b       	sbc	r24, r24
     f8a:	99 0b       	sbc	r25, r25
     f8c:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__floatsisf>
     f90:	a7 01       	movw	r20, r14
     f92:	96 01       	movw	r18, r12
     f94:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     f98:	0e 94 21 0b 	call	0x1642	; 0x1642 <round>
     f9c:	0e 94 ce 09 	call	0x139c	; 0x139c <__fixunssfsi>
     fa0:	cb 01       	movw	r24, r22
     fa2:	3c c0       	rjmp	.+120    	; 0x101c <__EEPROM_REGION_LENGTH__+0x1c>
     fa4:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__floatunsisf>
     fa8:	4b 01       	movw	r8, r22
     faa:	5c 01       	movw	r10, r24
     fac:	c3 01       	movw	r24, r6
     fae:	b2 01       	movw	r22, r4
     fb0:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__floatunsisf>
     fb4:	6b 01       	movw	r12, r22
     fb6:	7c 01       	movw	r14, r24
     fb8:	be 01       	movw	r22, r28
     fba:	77 27       	eor	r23, r23
     fbc:	07 2e       	mov	r0, r23
     fbe:	00 0c       	add	r0, r0
     fc0:	88 0b       	sbc	r24, r24
     fc2:	99 0b       	sbc	r25, r25
     fc4:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__floatsisf>
     fc8:	a7 01       	movw	r20, r14
     fca:	96 01       	movw	r18, r12
     fcc:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
     fd0:	9b 01       	movw	r18, r22
     fd2:	ac 01       	movw	r20, r24
     fd4:	c5 01       	movw	r24, r10
     fd6:	b4 01       	movw	r22, r8
     fd8:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__divsf3>
     fdc:	6b 01       	movw	r12, r22
     fde:	7c 01       	movw	r14, r24
     fe0:	61 e0       	ldi	r22, 0x01	; 1
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	02 c0       	rjmp	.+4      	; 0xfea <calc_bsel+0xfc>
     fe6:	66 0f       	add	r22, r22
     fe8:	77 1f       	adc	r23, r23
     fea:	0a 95       	dec	r16
     fec:	e2 f7       	brpl	.-8      	; 0xfe6 <calc_bsel+0xf8>
     fee:	07 2e       	mov	r0, r23
     ff0:	00 0c       	add	r0, r0
     ff2:	88 0b       	sbc	r24, r24
     ff4:	99 0b       	sbc	r25, r25
     ff6:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__floatsisf>
     ffa:	9b 01       	movw	r18, r22
     ffc:	ac 01       	movw	r20, r24
     ffe:	c7 01       	movw	r24, r14
    1000:	b6 01       	movw	r22, r12
    1002:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__divsf3>
    1006:	20 e0       	ldi	r18, 0x00	; 0
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	40 e8       	ldi	r20, 0x80	; 128
    100c:	5f e3       	ldi	r21, 0x3F	; 63
    100e:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__subsf3>
    1012:	0e 94 21 0b 	call	0x1642	; 0x1642 <round>
    1016:	0e 94 ce 09 	call	0x139c	; 0x139c <__fixunssfsi>
    101a:	cb 01       	movw	r24, r22
    101c:	df 91       	pop	r29
    101e:	cf 91       	pop	r28
    1020:	1f 91       	pop	r17
    1022:	0f 91       	pop	r16
    1024:	ff 90       	pop	r15
    1026:	ef 90       	pop	r14
    1028:	df 90       	pop	r13
    102a:	cf 90       	pop	r12
    102c:	bf 90       	pop	r11
    102e:	af 90       	pop	r10
    1030:	9f 90       	pop	r9
    1032:	8f 90       	pop	r8
    1034:	7f 90       	pop	r7
    1036:	6f 90       	pop	r6
    1038:	5f 90       	pop	r5
    103a:	4f 90       	pop	r4
    103c:	08 95       	ret

0000103e <calc_bscale>:
    103e:	4f 92       	push	r4
    1040:	5f 92       	push	r5
    1042:	6f 92       	push	r6
    1044:	7f 92       	push	r7
    1046:	8f 92       	push	r8
    1048:	9f 92       	push	r9
    104a:	af 92       	push	r10
    104c:	bf 92       	push	r11
    104e:	ef 92       	push	r14
    1050:	0f 93       	push	r16
    1052:	cf 93       	push	r28
    1054:	df 93       	push	r29
    1056:	2b 01       	movw	r4, r22
    1058:	3c 01       	movw	r6, r24
    105a:	49 01       	movw	r8, r18
    105c:	5a 01       	movw	r10, r20
    105e:	d0 2f       	mov	r29, r16
    1060:	c9 ef       	ldi	r28, 0xF9	; 249
    1062:	0c c0       	rjmp	.+24     	; 0x107c <calc_bscale+0x3e>
    1064:	ed 2e       	mov	r14, r29
    1066:	0c 2f       	mov	r16, r28
    1068:	a5 01       	movw	r20, r10
    106a:	94 01       	movw	r18, r8
    106c:	c3 01       	movw	r24, r6
    106e:	b2 01       	movw	r22, r4
    1070:	0e 94 77 07 	call	0xeee	; 0xeee <calc_bsel>
    1074:	81 15       	cp	r24, r1
    1076:	90 41       	sbci	r25, 0x10	; 16
    1078:	18 f0       	brcs	.+6      	; 0x1080 <calc_bscale+0x42>
    107a:	cf 5f       	subi	r28, 0xFF	; 255
    107c:	c8 30       	cpi	r28, 0x08	; 8
    107e:	94 f3       	brlt	.-28     	; 0x1064 <calc_bscale+0x26>
    1080:	8c 2f       	mov	r24, r28
    1082:	df 91       	pop	r29
    1084:	cf 91       	pop	r28
    1086:	0f 91       	pop	r16
    1088:	ef 90       	pop	r14
    108a:	bf 90       	pop	r11
    108c:	af 90       	pop	r10
    108e:	9f 90       	pop	r9
    1090:	8f 90       	pop	r8
    1092:	7f 90       	pop	r7
    1094:	6f 90       	pop	r6
    1096:	5f 90       	pop	r5
    1098:	4f 90       	pop	r4
    109a:	08 95       	ret

0000109c <init_stream>:
 *           If you want to use another baud rate you can change it in this function.
 *
 *  \return  void
 */
void init_stream(uint32_t f_cpu)
{
    109c:	8f 92       	push	r8
    109e:	9f 92       	push	r9
    10a0:	af 92       	push	r10
    10a2:	bf 92       	push	r11
    10a4:	ef 92       	push	r14
    10a6:	0f 93       	push	r16
    10a8:	cf 93       	push	r28
    10aa:	4b 01       	movw	r8, r22
    10ac:	5c 01       	movw	r10, r24
  uint16_t bsel;
  int8_t bscale;

  bscale = calc_bscale(f_cpu, BAUD_115K2, UART_NO_DOUBLE_CLK);
    10ae:	00 e0       	ldi	r16, 0x00	; 0
    10b0:	20 e0       	ldi	r18, 0x00	; 0
    10b2:	32 ec       	ldi	r19, 0xC2	; 194
    10b4:	41 e0       	ldi	r20, 0x01	; 1
    10b6:	50 e0       	ldi	r21, 0x00	; 0
    10b8:	0e 94 1f 08 	call	0x103e	; 0x103e <calc_bscale>
    10bc:	c8 2f       	mov	r28, r24
  bsel   = calc_bsel(f_cpu, BAUD_115K2, bscale, UART_NO_DOUBLE_CLK);
    10be:	e1 2c       	mov	r14, r1
    10c0:	08 2f       	mov	r16, r24
    10c2:	20 e0       	ldi	r18, 0x00	; 0
    10c4:	32 ec       	ldi	r19, 0xC2	; 194
    10c6:	41 e0       	ldi	r20, 0x01	; 1
    10c8:	50 e0       	ldi	r21, 0x00	; 0
    10ca:	c5 01       	movw	r24, r10
    10cc:	b4 01       	movw	r22, r8
    10ce:	0e 94 77 07 	call	0xeee	; 0xeee <calc_bsel>

	PORTF.PIN2CTRL = PORT_OPC_PULLUP_gc;  // pullup on rx
    10d2:	e0 ea       	ldi	r30, 0xA0	; 160
    10d4:	f6 e0       	ldi	r31, 0x06	; 6
    10d6:	28 e1       	ldi	r18, 0x18	; 24
    10d8:	22 8b       	std	Z+18, r18	; 0x12
	PORTF.OUTSET = PIN3_bm;               // tx high
    10da:	38 e0       	ldi	r19, 0x08	; 8
    10dc:	35 83       	std	Z+5, r19	; 0x05
	PORTF.DIRSET = PIN3_bm;
    10de:	31 83       	std	Z+1, r19	; 0x01
	PORTF.DIRCLR = PIN2_bm;
    10e0:	34 e0       	ldi	r19, 0x04	; 4
    10e2:	32 83       	std	Z+2, r19	; 0x02

	USARTF0.BAUDCTRLA = (bsel & USART_BSEL_gm);
    10e4:	e0 ea       	ldi	r30, 0xA0	; 160
    10e6:	fb e0       	ldi	r31, 0x0B	; 11
    10e8:	86 83       	std	Z+6, r24	; 0x06
	USARTF0.BAUDCTRLB = ((bscale << USART_BSCALE_gp) & USART_BSCALE_gm) |
    10ea:	c2 95       	swap	r28
    10ec:	c0 7f       	andi	r28, 0xF0	; 240
    10ee:	9f 70       	andi	r25, 0x0F	; 15
    10f0:	c9 2b       	or	r28, r25
    10f2:	c7 83       	std	Z+7, r28	; 0x07
                      ((bsel >> 8) & ~USART_BSCALE_gm);
	
 	USARTF0.CTRLB = USART_RXEN_bm | USART_TXEN_bm;
    10f4:	24 83       	std	Z+4, r18	; 0x04

	USARTF0.CTRLA = USART_RXCINTLVL_MED_gc | 
    10f6:	80 e2       	ldi	r24, 0x20	; 32
    10f8:	83 83       	std	Z+3, r24	; 0x03
                  USART_TXCINTLVL_OFF_gc | USART_DREINTLVL_OFF_gc;
	
	PMIC.CTRL |= PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm;
    10fa:	e0 ea       	ldi	r30, 0xA0	; 160
    10fc:	f0 e0       	ldi	r31, 0x00	; 0
    10fe:	82 81       	ldd	r24, Z+2	; 0x02
    1100:	83 60       	ori	r24, 0x03	; 3
    1102:	82 83       	std	Z+2, r24	; 0x02
  stdout = stdin = &uartF0_stdinout;
    1104:	e5 ed       	ldi	r30, 0xD5	; 213
    1106:	f1 e2       	ldi	r31, 0x21	; 33
    1108:	89 e0       	ldi	r24, 0x09	; 9
    110a:	90 e2       	ldi	r25, 0x20	; 32
    110c:	80 83       	st	Z, r24
    110e:	91 83       	std	Z+1, r25	; 0x01
    1110:	82 83       	std	Z+2, r24	; 0x02
    1112:	93 83       	std	Z+3, r25	; 0x03
	
} // init_stream
    1114:	cf 91       	pop	r28
    1116:	0f 91       	pop	r16
    1118:	ef 90       	pop	r14
    111a:	bf 90       	pop	r11
    111c:	af 90       	pop	r10
    111e:	9f 90       	pop	r9
    1120:	8f 90       	pop	r8
    1122:	08 95       	ret

00001124 <__vector_119>:
} // WriteByte_F0 

/*  \brief  ISR for receiving bytes from UARTF0.
 *          It puts the received byte in the RX buffer
 */
ISR(USARTF0_RXC_vect) {
    1124:	1f 92       	push	r1
    1126:	0f 92       	push	r0
    1128:	0f b6       	in	r0, 0x3f	; 63
    112a:	0f 92       	push	r0
    112c:	11 24       	eor	r1, r1
    112e:	0b b6       	in	r0, 0x3b	; 59
    1130:	0f 92       	push	r0
    1132:	8f 93       	push	r24
    1134:	9f 93       	push	r25
    1136:	ef 93       	push	r30
    1138:	ff 93       	push	r31
	
	uint8_t curSlot, nextSlot;
	
	curSlot = rx_f0_wridx;
    113a:	80 91 46 21 	lds	r24, 0x2146	; 0x802146 <rx_f0_wridx>
	rx_f0_buf[curSlot] = USARTF0.DATA;
    113e:	e8 2f       	mov	r30, r24
    1140:	f0 e0       	ldi	r31, 0x00	; 0
    1142:	90 91 a0 0b 	lds	r25, 0x0BA0	; 0x800ba0 <__TEXT_REGION_LENGTH__+0x7beba0>
    1146:	ef 51       	subi	r30, 0x1F	; 31
    1148:	ff 4d       	sbci	r31, 0xDF	; 223
    114a:	90 83       	st	Z, r25
	
	nextSlot = curSlot + 1;
    114c:	8f 5f       	subi	r24, 0xFF	; 255
	if(nextSlot >= RXBUF_DEPTH_F0)
    114e:	84 36       	cpi	r24, 0x64	; 100
    1150:	08 f0       	brcs	.+2      	; 0x1154 <__vector_119+0x30>
	nextSlot = 0;
    1152:	80 e0       	ldi	r24, 0x00	; 0
	
	if(nextSlot != rx_f0_rdidx)
    1154:	90 91 45 21 	lds	r25, 0x2145	; 0x802145 <rx_f0_rdidx>
    1158:	89 13       	cpse	r24, r25
	rx_f0_wridx = nextSlot;
    115a:	80 93 46 21 	sts	0x2146, r24	; 0x802146 <rx_f0_wridx>
	
} // ISR(USARTF0_RXC_vect)
    115e:	ff 91       	pop	r31
    1160:	ef 91       	pop	r30
    1162:	9f 91       	pop	r25
    1164:	8f 91       	pop	r24
    1166:	0f 90       	pop	r0
    1168:	0b be       	out	0x3b, r0	; 59
    116a:	0f 90       	pop	r0
    116c:	0f be       	out	0x3f, r0	; 63
    116e:	0f 90       	pop	r0
    1170:	1f 90       	pop	r1
    1172:	18 95       	reti

00001174 <__vector_120>:


/*  \brief  ISR for transmitting bytes to UARTF0.
 *          If there is a byte to send in the TX buffer, it will be send
 */
ISR(USARTF0_DRE_vect) {
    1174:	1f 92       	push	r1
    1176:	0f 92       	push	r0
    1178:	0f b6       	in	r0, 0x3f	; 63
    117a:	0f 92       	push	r0
    117c:	11 24       	eor	r1, r1
    117e:	0b b6       	in	r0, 0x3b	; 59
    1180:	0f 92       	push	r0
    1182:	2f 93       	push	r18
    1184:	8f 93       	push	r24
    1186:	9f 93       	push	r25
    1188:	ef 93       	push	r30
    118a:	ff 93       	push	r31
	
	uint8_t curSlot, nextSlot, lastSlot;
	
	nextSlot = curSlot = tx_f0_rdidx;
    118c:	80 91 ab 21 	lds	r24, 0x21AB	; 0x8021ab <tx_f0_rdidx>
	lastSlot = tx_f0_wridx;
    1190:	90 91 ac 21 	lds	r25, 0x21AC	; 0x8021ac <tx_f0_wridx>
	
	if(curSlot != lastSlot) {
    1194:	89 17       	cp	r24, r25
    1196:	59 f0       	breq	.+22     	; 0x11ae <__vector_120+0x3a>
		USARTF0.DATA = tx_f0_buf[curSlot];
    1198:	e8 2f       	mov	r30, r24
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	e9 5b       	subi	r30, 0xB9	; 185
    119e:	fe 4d       	sbci	r31, 0xDE	; 222
    11a0:	20 81       	ld	r18, Z
    11a2:	20 93 a0 0b 	sts	0x0BA0, r18	; 0x800ba0 <__TEXT_REGION_LENGTH__+0x7beba0>
		nextSlot = curSlot + 1;
    11a6:	8f 5f       	subi	r24, 0xFF	; 255
		if(nextSlot >= TXBUF_DEPTH_F0)
    11a8:	84 36       	cpi	r24, 0x64	; 100
    11aa:	08 f0       	brcs	.+2      	; 0x11ae <__vector_120+0x3a>
		nextSlot = 0;
    11ac:	80 e0       	ldi	r24, 0x00	; 0
	}
	if(nextSlot == lastSlot)
    11ae:	89 13       	cpse	r24, r25
    11b0:	03 c0       	rjmp	.+6      	; 0x11b8 <__vector_120+0x44>
	USARTF0.CTRLA = USART_RXCINTLVL_MED_gc | USART_TXCINTLVL_OFF_gc | USART_DREINTLVL_OFF_gc;
    11b2:	90 e2       	ldi	r25, 0x20	; 32
    11b4:	90 93 a3 0b 	sts	0x0BA3, r25	; 0x800ba3 <__TEXT_REGION_LENGTH__+0x7beba3>
	
	tx_f0_rdidx = nextSlot;
    11b8:	80 93 ab 21 	sts	0x21AB, r24	; 0x8021ab <tx_f0_rdidx>
	
} // ISR(USARTF0_DRE_vect) 
    11bc:	ff 91       	pop	r31
    11be:	ef 91       	pop	r30
    11c0:	9f 91       	pop	r25
    11c2:	8f 91       	pop	r24
    11c4:	2f 91       	pop	r18
    11c6:	0f 90       	pop	r0
    11c8:	0b be       	out	0x3b, r0	; 59
    11ca:	0f 90       	pop	r0
    11cc:	0f be       	out	0x3f, r0	; 63
    11ce:	0f 90       	pop	r0
    11d0:	1f 90       	pop	r1
    11d2:	18 95       	reti

000011d4 <__subsf3>:
    11d4:	50 58       	subi	r21, 0x80	; 128

000011d6 <__addsf3>:
    11d6:	bb 27       	eor	r27, r27
    11d8:	aa 27       	eor	r26, r26
    11da:	0e 94 02 09 	call	0x1204	; 0x1204 <__addsf3x>
    11de:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__fp_round>
    11e2:	0e 94 67 0a 	call	0x14ce	; 0x14ce <__fp_pscA>
    11e6:	38 f0       	brcs	.+14     	; 0x11f6 <__addsf3+0x20>
    11e8:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__fp_pscB>
    11ec:	20 f0       	brcs	.+8      	; 0x11f6 <__addsf3+0x20>
    11ee:	39 f4       	brne	.+14     	; 0x11fe <__addsf3+0x28>
    11f0:	9f 3f       	cpi	r25, 0xFF	; 255
    11f2:	19 f4       	brne	.+6      	; 0x11fa <__addsf3+0x24>
    11f4:	26 f4       	brtc	.+8      	; 0x11fe <__addsf3+0x28>
    11f6:	0c 94 64 0a 	jmp	0x14c8	; 0x14c8 <__fp_nan>
    11fa:	0e f4       	brtc	.+2      	; 0x11fe <__addsf3+0x28>
    11fc:	e0 95       	com	r30
    11fe:	e7 fb       	bst	r30, 7
    1200:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__fp_inf>

00001204 <__addsf3x>:
    1204:	e9 2f       	mov	r30, r25
    1206:	0e 94 86 0a 	call	0x150c	; 0x150c <__fp_split3>
    120a:	58 f3       	brcs	.-42     	; 0x11e2 <__addsf3+0xc>
    120c:	ba 17       	cp	r27, r26
    120e:	62 07       	cpc	r22, r18
    1210:	73 07       	cpc	r23, r19
    1212:	84 07       	cpc	r24, r20
    1214:	95 07       	cpc	r25, r21
    1216:	20 f0       	brcs	.+8      	; 0x1220 <__addsf3x+0x1c>
    1218:	79 f4       	brne	.+30     	; 0x1238 <__addsf3x+0x34>
    121a:	a6 f5       	brtc	.+104    	; 0x1284 <__addsf3x+0x80>
    121c:	0c 94 a8 0a 	jmp	0x1550	; 0x1550 <__fp_zero>
    1220:	0e f4       	brtc	.+2      	; 0x1224 <__addsf3x+0x20>
    1222:	e0 95       	com	r30
    1224:	0b 2e       	mov	r0, r27
    1226:	ba 2f       	mov	r27, r26
    1228:	a0 2d       	mov	r26, r0
    122a:	0b 01       	movw	r0, r22
    122c:	b9 01       	movw	r22, r18
    122e:	90 01       	movw	r18, r0
    1230:	0c 01       	movw	r0, r24
    1232:	ca 01       	movw	r24, r20
    1234:	a0 01       	movw	r20, r0
    1236:	11 24       	eor	r1, r1
    1238:	ff 27       	eor	r31, r31
    123a:	59 1b       	sub	r21, r25
    123c:	99 f0       	breq	.+38     	; 0x1264 <__addsf3x+0x60>
    123e:	59 3f       	cpi	r21, 0xF9	; 249
    1240:	50 f4       	brcc	.+20     	; 0x1256 <__addsf3x+0x52>
    1242:	50 3e       	cpi	r21, 0xE0	; 224
    1244:	68 f1       	brcs	.+90     	; 0x12a0 <__addsf3x+0x9c>
    1246:	1a 16       	cp	r1, r26
    1248:	f0 40       	sbci	r31, 0x00	; 0
    124a:	a2 2f       	mov	r26, r18
    124c:	23 2f       	mov	r18, r19
    124e:	34 2f       	mov	r19, r20
    1250:	44 27       	eor	r20, r20
    1252:	58 5f       	subi	r21, 0xF8	; 248
    1254:	f3 cf       	rjmp	.-26     	; 0x123c <__addsf3x+0x38>
    1256:	46 95       	lsr	r20
    1258:	37 95       	ror	r19
    125a:	27 95       	ror	r18
    125c:	a7 95       	ror	r26
    125e:	f0 40       	sbci	r31, 0x00	; 0
    1260:	53 95       	inc	r21
    1262:	c9 f7       	brne	.-14     	; 0x1256 <__addsf3x+0x52>
    1264:	7e f4       	brtc	.+30     	; 0x1284 <__addsf3x+0x80>
    1266:	1f 16       	cp	r1, r31
    1268:	ba 0b       	sbc	r27, r26
    126a:	62 0b       	sbc	r22, r18
    126c:	73 0b       	sbc	r23, r19
    126e:	84 0b       	sbc	r24, r20
    1270:	ba f0       	brmi	.+46     	; 0x12a0 <__addsf3x+0x9c>
    1272:	91 50       	subi	r25, 0x01	; 1
    1274:	a1 f0       	breq	.+40     	; 0x129e <__addsf3x+0x9a>
    1276:	ff 0f       	add	r31, r31
    1278:	bb 1f       	adc	r27, r27
    127a:	66 1f       	adc	r22, r22
    127c:	77 1f       	adc	r23, r23
    127e:	88 1f       	adc	r24, r24
    1280:	c2 f7       	brpl	.-16     	; 0x1272 <__addsf3x+0x6e>
    1282:	0e c0       	rjmp	.+28     	; 0x12a0 <__addsf3x+0x9c>
    1284:	ba 0f       	add	r27, r26
    1286:	62 1f       	adc	r22, r18
    1288:	73 1f       	adc	r23, r19
    128a:	84 1f       	adc	r24, r20
    128c:	48 f4       	brcc	.+18     	; 0x12a0 <__addsf3x+0x9c>
    128e:	87 95       	ror	r24
    1290:	77 95       	ror	r23
    1292:	67 95       	ror	r22
    1294:	b7 95       	ror	r27
    1296:	f7 95       	ror	r31
    1298:	9e 3f       	cpi	r25, 0xFE	; 254
    129a:	08 f0       	brcs	.+2      	; 0x129e <__addsf3x+0x9a>
    129c:	b0 cf       	rjmp	.-160    	; 0x11fe <__addsf3+0x28>
    129e:	93 95       	inc	r25
    12a0:	88 0f       	add	r24, r24
    12a2:	08 f0       	brcs	.+2      	; 0x12a6 <__addsf3x+0xa2>
    12a4:	99 27       	eor	r25, r25
    12a6:	ee 0f       	add	r30, r30
    12a8:	97 95       	ror	r25
    12aa:	87 95       	ror	r24
    12ac:	08 95       	ret

000012ae <__cmpsf2>:
    12ae:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__fp_cmp>
    12b2:	08 f4       	brcc	.+2      	; 0x12b6 <__cmpsf2+0x8>
    12b4:	81 e0       	ldi	r24, 0x01	; 1
    12b6:	08 95       	ret

000012b8 <__divsf3>:
    12b8:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__divsf3x>
    12bc:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__fp_round>
    12c0:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__fp_pscB>
    12c4:	58 f0       	brcs	.+22     	; 0x12dc <__divsf3+0x24>
    12c6:	0e 94 67 0a 	call	0x14ce	; 0x14ce <__fp_pscA>
    12ca:	40 f0       	brcs	.+16     	; 0x12dc <__divsf3+0x24>
    12cc:	29 f4       	brne	.+10     	; 0x12d8 <__divsf3+0x20>
    12ce:	5f 3f       	cpi	r21, 0xFF	; 255
    12d0:	29 f0       	breq	.+10     	; 0x12dc <__divsf3+0x24>
    12d2:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__fp_inf>
    12d6:	51 11       	cpse	r21, r1
    12d8:	0c 94 a9 0a 	jmp	0x1552	; 0x1552 <__fp_szero>
    12dc:	0c 94 64 0a 	jmp	0x14c8	; 0x14c8 <__fp_nan>

000012e0 <__divsf3x>:
    12e0:	0e 94 86 0a 	call	0x150c	; 0x150c <__fp_split3>
    12e4:	68 f3       	brcs	.-38     	; 0x12c0 <__divsf3+0x8>

000012e6 <__divsf3_pse>:
    12e6:	99 23       	and	r25, r25
    12e8:	b1 f3       	breq	.-20     	; 0x12d6 <__divsf3+0x1e>
    12ea:	55 23       	and	r21, r21
    12ec:	91 f3       	breq	.-28     	; 0x12d2 <__divsf3+0x1a>
    12ee:	95 1b       	sub	r25, r21
    12f0:	55 0b       	sbc	r21, r21
    12f2:	bb 27       	eor	r27, r27
    12f4:	aa 27       	eor	r26, r26
    12f6:	62 17       	cp	r22, r18
    12f8:	73 07       	cpc	r23, r19
    12fa:	84 07       	cpc	r24, r20
    12fc:	38 f0       	brcs	.+14     	; 0x130c <__divsf3_pse+0x26>
    12fe:	9f 5f       	subi	r25, 0xFF	; 255
    1300:	5f 4f       	sbci	r21, 0xFF	; 255
    1302:	22 0f       	add	r18, r18
    1304:	33 1f       	adc	r19, r19
    1306:	44 1f       	adc	r20, r20
    1308:	aa 1f       	adc	r26, r26
    130a:	a9 f3       	breq	.-22     	; 0x12f6 <__divsf3_pse+0x10>
    130c:	35 d0       	rcall	.+106    	; 0x1378 <__divsf3_pse+0x92>
    130e:	0e 2e       	mov	r0, r30
    1310:	3a f0       	brmi	.+14     	; 0x1320 <__divsf3_pse+0x3a>
    1312:	e0 e8       	ldi	r30, 0x80	; 128
    1314:	32 d0       	rcall	.+100    	; 0x137a <__divsf3_pse+0x94>
    1316:	91 50       	subi	r25, 0x01	; 1
    1318:	50 40       	sbci	r21, 0x00	; 0
    131a:	e6 95       	lsr	r30
    131c:	00 1c       	adc	r0, r0
    131e:	ca f7       	brpl	.-14     	; 0x1312 <__divsf3_pse+0x2c>
    1320:	2b d0       	rcall	.+86     	; 0x1378 <__divsf3_pse+0x92>
    1322:	fe 2f       	mov	r31, r30
    1324:	29 d0       	rcall	.+82     	; 0x1378 <__divsf3_pse+0x92>
    1326:	66 0f       	add	r22, r22
    1328:	77 1f       	adc	r23, r23
    132a:	88 1f       	adc	r24, r24
    132c:	bb 1f       	adc	r27, r27
    132e:	26 17       	cp	r18, r22
    1330:	37 07       	cpc	r19, r23
    1332:	48 07       	cpc	r20, r24
    1334:	ab 07       	cpc	r26, r27
    1336:	b0 e8       	ldi	r27, 0x80	; 128
    1338:	09 f0       	breq	.+2      	; 0x133c <__divsf3_pse+0x56>
    133a:	bb 0b       	sbc	r27, r27
    133c:	80 2d       	mov	r24, r0
    133e:	bf 01       	movw	r22, r30
    1340:	ff 27       	eor	r31, r31
    1342:	93 58       	subi	r25, 0x83	; 131
    1344:	5f 4f       	sbci	r21, 0xFF	; 255
    1346:	3a f0       	brmi	.+14     	; 0x1356 <__divsf3_pse+0x70>
    1348:	9e 3f       	cpi	r25, 0xFE	; 254
    134a:	51 05       	cpc	r21, r1
    134c:	78 f0       	brcs	.+30     	; 0x136c <__divsf3_pse+0x86>
    134e:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__fp_inf>
    1352:	0c 94 a9 0a 	jmp	0x1552	; 0x1552 <__fp_szero>
    1356:	5f 3f       	cpi	r21, 0xFF	; 255
    1358:	e4 f3       	brlt	.-8      	; 0x1352 <__divsf3_pse+0x6c>
    135a:	98 3e       	cpi	r25, 0xE8	; 232
    135c:	d4 f3       	brlt	.-12     	; 0x1352 <__divsf3_pse+0x6c>
    135e:	86 95       	lsr	r24
    1360:	77 95       	ror	r23
    1362:	67 95       	ror	r22
    1364:	b7 95       	ror	r27
    1366:	f7 95       	ror	r31
    1368:	9f 5f       	subi	r25, 0xFF	; 255
    136a:	c9 f7       	brne	.-14     	; 0x135e <__divsf3_pse+0x78>
    136c:	88 0f       	add	r24, r24
    136e:	91 1d       	adc	r25, r1
    1370:	96 95       	lsr	r25
    1372:	87 95       	ror	r24
    1374:	97 f9       	bld	r25, 7
    1376:	08 95       	ret
    1378:	e1 e0       	ldi	r30, 0x01	; 1
    137a:	66 0f       	add	r22, r22
    137c:	77 1f       	adc	r23, r23
    137e:	88 1f       	adc	r24, r24
    1380:	bb 1f       	adc	r27, r27
    1382:	62 17       	cp	r22, r18
    1384:	73 07       	cpc	r23, r19
    1386:	84 07       	cpc	r24, r20
    1388:	ba 07       	cpc	r27, r26
    138a:	20 f0       	brcs	.+8      	; 0x1394 <__divsf3_pse+0xae>
    138c:	62 1b       	sub	r22, r18
    138e:	73 0b       	sbc	r23, r19
    1390:	84 0b       	sbc	r24, r20
    1392:	ba 0b       	sbc	r27, r26
    1394:	ee 1f       	adc	r30, r30
    1396:	88 f7       	brcc	.-30     	; 0x137a <__divsf3_pse+0x94>
    1398:	e0 95       	com	r30
    139a:	08 95       	ret

0000139c <__fixunssfsi>:
    139c:	0e 94 8e 0a 	call	0x151c	; 0x151c <__fp_splitA>
    13a0:	88 f0       	brcs	.+34     	; 0x13c4 <__fixunssfsi+0x28>
    13a2:	9f 57       	subi	r25, 0x7F	; 127
    13a4:	98 f0       	brcs	.+38     	; 0x13cc <__fixunssfsi+0x30>
    13a6:	b9 2f       	mov	r27, r25
    13a8:	99 27       	eor	r25, r25
    13aa:	b7 51       	subi	r27, 0x17	; 23
    13ac:	b0 f0       	brcs	.+44     	; 0x13da <__fixunssfsi+0x3e>
    13ae:	e1 f0       	breq	.+56     	; 0x13e8 <__fixunssfsi+0x4c>
    13b0:	66 0f       	add	r22, r22
    13b2:	77 1f       	adc	r23, r23
    13b4:	88 1f       	adc	r24, r24
    13b6:	99 1f       	adc	r25, r25
    13b8:	1a f0       	brmi	.+6      	; 0x13c0 <__fixunssfsi+0x24>
    13ba:	ba 95       	dec	r27
    13bc:	c9 f7       	brne	.-14     	; 0x13b0 <__fixunssfsi+0x14>
    13be:	14 c0       	rjmp	.+40     	; 0x13e8 <__fixunssfsi+0x4c>
    13c0:	b1 30       	cpi	r27, 0x01	; 1
    13c2:	91 f0       	breq	.+36     	; 0x13e8 <__fixunssfsi+0x4c>
    13c4:	0e 94 a8 0a 	call	0x1550	; 0x1550 <__fp_zero>
    13c8:	b1 e0       	ldi	r27, 0x01	; 1
    13ca:	08 95       	ret
    13cc:	0c 94 a8 0a 	jmp	0x1550	; 0x1550 <__fp_zero>
    13d0:	67 2f       	mov	r22, r23
    13d2:	78 2f       	mov	r23, r24
    13d4:	88 27       	eor	r24, r24
    13d6:	b8 5f       	subi	r27, 0xF8	; 248
    13d8:	39 f0       	breq	.+14     	; 0x13e8 <__fixunssfsi+0x4c>
    13da:	b9 3f       	cpi	r27, 0xF9	; 249
    13dc:	cc f3       	brlt	.-14     	; 0x13d0 <__fixunssfsi+0x34>
    13de:	86 95       	lsr	r24
    13e0:	77 95       	ror	r23
    13e2:	67 95       	ror	r22
    13e4:	b3 95       	inc	r27
    13e6:	d9 f7       	brne	.-10     	; 0x13de <__fixunssfsi+0x42>
    13e8:	3e f4       	brtc	.+14     	; 0x13f8 <__fixunssfsi+0x5c>
    13ea:	90 95       	com	r25
    13ec:	80 95       	com	r24
    13ee:	70 95       	com	r23
    13f0:	61 95       	neg	r22
    13f2:	7f 4f       	sbci	r23, 0xFF	; 255
    13f4:	8f 4f       	sbci	r24, 0xFF	; 255
    13f6:	9f 4f       	sbci	r25, 0xFF	; 255
    13f8:	08 95       	ret

000013fa <__floatunsisf>:
    13fa:	e8 94       	clt
    13fc:	09 c0       	rjmp	.+18     	; 0x1410 <__floatsisf+0x12>

000013fe <__floatsisf>:
    13fe:	97 fb       	bst	r25, 7
    1400:	3e f4       	brtc	.+14     	; 0x1410 <__floatsisf+0x12>
    1402:	90 95       	com	r25
    1404:	80 95       	com	r24
    1406:	70 95       	com	r23
    1408:	61 95       	neg	r22
    140a:	7f 4f       	sbci	r23, 0xFF	; 255
    140c:	8f 4f       	sbci	r24, 0xFF	; 255
    140e:	9f 4f       	sbci	r25, 0xFF	; 255
    1410:	99 23       	and	r25, r25
    1412:	a9 f0       	breq	.+42     	; 0x143e <__floatsisf+0x40>
    1414:	f9 2f       	mov	r31, r25
    1416:	96 e9       	ldi	r25, 0x96	; 150
    1418:	bb 27       	eor	r27, r27
    141a:	93 95       	inc	r25
    141c:	f6 95       	lsr	r31
    141e:	87 95       	ror	r24
    1420:	77 95       	ror	r23
    1422:	67 95       	ror	r22
    1424:	b7 95       	ror	r27
    1426:	f1 11       	cpse	r31, r1
    1428:	f8 cf       	rjmp	.-16     	; 0x141a <__floatsisf+0x1c>
    142a:	fa f4       	brpl	.+62     	; 0x146a <__floatsisf+0x6c>
    142c:	bb 0f       	add	r27, r27
    142e:	11 f4       	brne	.+4      	; 0x1434 <__floatsisf+0x36>
    1430:	60 ff       	sbrs	r22, 0
    1432:	1b c0       	rjmp	.+54     	; 0x146a <__floatsisf+0x6c>
    1434:	6f 5f       	subi	r22, 0xFF	; 255
    1436:	7f 4f       	sbci	r23, 0xFF	; 255
    1438:	8f 4f       	sbci	r24, 0xFF	; 255
    143a:	9f 4f       	sbci	r25, 0xFF	; 255
    143c:	16 c0       	rjmp	.+44     	; 0x146a <__floatsisf+0x6c>
    143e:	88 23       	and	r24, r24
    1440:	11 f0       	breq	.+4      	; 0x1446 <__floatsisf+0x48>
    1442:	96 e9       	ldi	r25, 0x96	; 150
    1444:	11 c0       	rjmp	.+34     	; 0x1468 <__floatsisf+0x6a>
    1446:	77 23       	and	r23, r23
    1448:	21 f0       	breq	.+8      	; 0x1452 <__floatsisf+0x54>
    144a:	9e e8       	ldi	r25, 0x8E	; 142
    144c:	87 2f       	mov	r24, r23
    144e:	76 2f       	mov	r23, r22
    1450:	05 c0       	rjmp	.+10     	; 0x145c <__floatsisf+0x5e>
    1452:	66 23       	and	r22, r22
    1454:	71 f0       	breq	.+28     	; 0x1472 <__floatsisf+0x74>
    1456:	96 e8       	ldi	r25, 0x86	; 134
    1458:	86 2f       	mov	r24, r22
    145a:	70 e0       	ldi	r23, 0x00	; 0
    145c:	60 e0       	ldi	r22, 0x00	; 0
    145e:	2a f0       	brmi	.+10     	; 0x146a <__floatsisf+0x6c>
    1460:	9a 95       	dec	r25
    1462:	66 0f       	add	r22, r22
    1464:	77 1f       	adc	r23, r23
    1466:	88 1f       	adc	r24, r24
    1468:	da f7       	brpl	.-10     	; 0x1460 <__floatsisf+0x62>
    146a:	88 0f       	add	r24, r24
    146c:	96 95       	lsr	r25
    146e:	87 95       	ror	r24
    1470:	97 f9       	bld	r25, 7
    1472:	08 95       	ret

00001474 <__fp_cmp>:
    1474:	99 0f       	add	r25, r25
    1476:	00 08       	sbc	r0, r0
    1478:	55 0f       	add	r21, r21
    147a:	aa 0b       	sbc	r26, r26
    147c:	e0 e8       	ldi	r30, 0x80	; 128
    147e:	fe ef       	ldi	r31, 0xFE	; 254
    1480:	16 16       	cp	r1, r22
    1482:	17 06       	cpc	r1, r23
    1484:	e8 07       	cpc	r30, r24
    1486:	f9 07       	cpc	r31, r25
    1488:	c0 f0       	brcs	.+48     	; 0x14ba <__fp_cmp+0x46>
    148a:	12 16       	cp	r1, r18
    148c:	13 06       	cpc	r1, r19
    148e:	e4 07       	cpc	r30, r20
    1490:	f5 07       	cpc	r31, r21
    1492:	98 f0       	brcs	.+38     	; 0x14ba <__fp_cmp+0x46>
    1494:	62 1b       	sub	r22, r18
    1496:	73 0b       	sbc	r23, r19
    1498:	84 0b       	sbc	r24, r20
    149a:	95 0b       	sbc	r25, r21
    149c:	39 f4       	brne	.+14     	; 0x14ac <__fp_cmp+0x38>
    149e:	0a 26       	eor	r0, r26
    14a0:	61 f0       	breq	.+24     	; 0x14ba <__fp_cmp+0x46>
    14a2:	23 2b       	or	r18, r19
    14a4:	24 2b       	or	r18, r20
    14a6:	25 2b       	or	r18, r21
    14a8:	21 f4       	brne	.+8      	; 0x14b2 <__fp_cmp+0x3e>
    14aa:	08 95       	ret
    14ac:	0a 26       	eor	r0, r26
    14ae:	09 f4       	brne	.+2      	; 0x14b2 <__fp_cmp+0x3e>
    14b0:	a1 40       	sbci	r26, 0x01	; 1
    14b2:	a6 95       	lsr	r26
    14b4:	8f ef       	ldi	r24, 0xFF	; 255
    14b6:	81 1d       	adc	r24, r1
    14b8:	81 1d       	adc	r24, r1
    14ba:	08 95       	ret

000014bc <__fp_inf>:
    14bc:	97 f9       	bld	r25, 7
    14be:	9f 67       	ori	r25, 0x7F	; 127
    14c0:	80 e8       	ldi	r24, 0x80	; 128
    14c2:	70 e0       	ldi	r23, 0x00	; 0
    14c4:	60 e0       	ldi	r22, 0x00	; 0
    14c6:	08 95       	ret

000014c8 <__fp_nan>:
    14c8:	9f ef       	ldi	r25, 0xFF	; 255
    14ca:	80 ec       	ldi	r24, 0xC0	; 192
    14cc:	08 95       	ret

000014ce <__fp_pscA>:
    14ce:	00 24       	eor	r0, r0
    14d0:	0a 94       	dec	r0
    14d2:	16 16       	cp	r1, r22
    14d4:	17 06       	cpc	r1, r23
    14d6:	18 06       	cpc	r1, r24
    14d8:	09 06       	cpc	r0, r25
    14da:	08 95       	ret

000014dc <__fp_pscB>:
    14dc:	00 24       	eor	r0, r0
    14de:	0a 94       	dec	r0
    14e0:	12 16       	cp	r1, r18
    14e2:	13 06       	cpc	r1, r19
    14e4:	14 06       	cpc	r1, r20
    14e6:	05 06       	cpc	r0, r21
    14e8:	08 95       	ret

000014ea <__fp_round>:
    14ea:	09 2e       	mov	r0, r25
    14ec:	03 94       	inc	r0
    14ee:	00 0c       	add	r0, r0
    14f0:	11 f4       	brne	.+4      	; 0x14f6 <__fp_round+0xc>
    14f2:	88 23       	and	r24, r24
    14f4:	52 f0       	brmi	.+20     	; 0x150a <__fp_round+0x20>
    14f6:	bb 0f       	add	r27, r27
    14f8:	40 f4       	brcc	.+16     	; 0x150a <__fp_round+0x20>
    14fa:	bf 2b       	or	r27, r31
    14fc:	11 f4       	brne	.+4      	; 0x1502 <__fp_round+0x18>
    14fe:	60 ff       	sbrs	r22, 0
    1500:	04 c0       	rjmp	.+8      	; 0x150a <__fp_round+0x20>
    1502:	6f 5f       	subi	r22, 0xFF	; 255
    1504:	7f 4f       	sbci	r23, 0xFF	; 255
    1506:	8f 4f       	sbci	r24, 0xFF	; 255
    1508:	9f 4f       	sbci	r25, 0xFF	; 255
    150a:	08 95       	ret

0000150c <__fp_split3>:
    150c:	57 fd       	sbrc	r21, 7
    150e:	90 58       	subi	r25, 0x80	; 128
    1510:	44 0f       	add	r20, r20
    1512:	55 1f       	adc	r21, r21
    1514:	59 f0       	breq	.+22     	; 0x152c <__fp_splitA+0x10>
    1516:	5f 3f       	cpi	r21, 0xFF	; 255
    1518:	71 f0       	breq	.+28     	; 0x1536 <__fp_splitA+0x1a>
    151a:	47 95       	ror	r20

0000151c <__fp_splitA>:
    151c:	88 0f       	add	r24, r24
    151e:	97 fb       	bst	r25, 7
    1520:	99 1f       	adc	r25, r25
    1522:	61 f0       	breq	.+24     	; 0x153c <__fp_splitA+0x20>
    1524:	9f 3f       	cpi	r25, 0xFF	; 255
    1526:	79 f0       	breq	.+30     	; 0x1546 <__fp_splitA+0x2a>
    1528:	87 95       	ror	r24
    152a:	08 95       	ret
    152c:	12 16       	cp	r1, r18
    152e:	13 06       	cpc	r1, r19
    1530:	14 06       	cpc	r1, r20
    1532:	55 1f       	adc	r21, r21
    1534:	f2 cf       	rjmp	.-28     	; 0x151a <__fp_split3+0xe>
    1536:	46 95       	lsr	r20
    1538:	f1 df       	rcall	.-30     	; 0x151c <__fp_splitA>
    153a:	08 c0       	rjmp	.+16     	; 0x154c <__fp_splitA+0x30>
    153c:	16 16       	cp	r1, r22
    153e:	17 06       	cpc	r1, r23
    1540:	18 06       	cpc	r1, r24
    1542:	99 1f       	adc	r25, r25
    1544:	f1 cf       	rjmp	.-30     	; 0x1528 <__fp_splitA+0xc>
    1546:	86 95       	lsr	r24
    1548:	71 05       	cpc	r23, r1
    154a:	61 05       	cpc	r22, r1
    154c:	08 94       	sec
    154e:	08 95       	ret

00001550 <__fp_zero>:
    1550:	e8 94       	clt

00001552 <__fp_szero>:
    1552:	bb 27       	eor	r27, r27
    1554:	66 27       	eor	r22, r22
    1556:	77 27       	eor	r23, r23
    1558:	cb 01       	movw	r24, r22
    155a:	97 f9       	bld	r25, 7
    155c:	08 95       	ret

0000155e <__gesf2>:
    155e:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__fp_cmp>
    1562:	08 f4       	brcc	.+2      	; 0x1566 <__gesf2+0x8>
    1564:	8f ef       	ldi	r24, 0xFF	; 255
    1566:	08 95       	ret

00001568 <__mulsf3>:
    1568:	0e 94 c7 0a 	call	0x158e	; 0x158e <__mulsf3x>
    156c:	0c 94 75 0a 	jmp	0x14ea	; 0x14ea <__fp_round>
    1570:	0e 94 67 0a 	call	0x14ce	; 0x14ce <__fp_pscA>
    1574:	38 f0       	brcs	.+14     	; 0x1584 <__mulsf3+0x1c>
    1576:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__fp_pscB>
    157a:	20 f0       	brcs	.+8      	; 0x1584 <__mulsf3+0x1c>
    157c:	95 23       	and	r25, r21
    157e:	11 f0       	breq	.+4      	; 0x1584 <__mulsf3+0x1c>
    1580:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__fp_inf>
    1584:	0c 94 64 0a 	jmp	0x14c8	; 0x14c8 <__fp_nan>
    1588:	11 24       	eor	r1, r1
    158a:	0c 94 a9 0a 	jmp	0x1552	; 0x1552 <__fp_szero>

0000158e <__mulsf3x>:
    158e:	0e 94 86 0a 	call	0x150c	; 0x150c <__fp_split3>
    1592:	70 f3       	brcs	.-36     	; 0x1570 <__mulsf3+0x8>

00001594 <__mulsf3_pse>:
    1594:	95 9f       	mul	r25, r21
    1596:	c1 f3       	breq	.-16     	; 0x1588 <__mulsf3+0x20>
    1598:	95 0f       	add	r25, r21
    159a:	50 e0       	ldi	r21, 0x00	; 0
    159c:	55 1f       	adc	r21, r21
    159e:	62 9f       	mul	r22, r18
    15a0:	f0 01       	movw	r30, r0
    15a2:	72 9f       	mul	r23, r18
    15a4:	bb 27       	eor	r27, r27
    15a6:	f0 0d       	add	r31, r0
    15a8:	b1 1d       	adc	r27, r1
    15aa:	63 9f       	mul	r22, r19
    15ac:	aa 27       	eor	r26, r26
    15ae:	f0 0d       	add	r31, r0
    15b0:	b1 1d       	adc	r27, r1
    15b2:	aa 1f       	adc	r26, r26
    15b4:	64 9f       	mul	r22, r20
    15b6:	66 27       	eor	r22, r22
    15b8:	b0 0d       	add	r27, r0
    15ba:	a1 1d       	adc	r26, r1
    15bc:	66 1f       	adc	r22, r22
    15be:	82 9f       	mul	r24, r18
    15c0:	22 27       	eor	r18, r18
    15c2:	b0 0d       	add	r27, r0
    15c4:	a1 1d       	adc	r26, r1
    15c6:	62 1f       	adc	r22, r18
    15c8:	73 9f       	mul	r23, r19
    15ca:	b0 0d       	add	r27, r0
    15cc:	a1 1d       	adc	r26, r1
    15ce:	62 1f       	adc	r22, r18
    15d0:	83 9f       	mul	r24, r19
    15d2:	a0 0d       	add	r26, r0
    15d4:	61 1d       	adc	r22, r1
    15d6:	22 1f       	adc	r18, r18
    15d8:	74 9f       	mul	r23, r20
    15da:	33 27       	eor	r19, r19
    15dc:	a0 0d       	add	r26, r0
    15de:	61 1d       	adc	r22, r1
    15e0:	23 1f       	adc	r18, r19
    15e2:	84 9f       	mul	r24, r20
    15e4:	60 0d       	add	r22, r0
    15e6:	21 1d       	adc	r18, r1
    15e8:	82 2f       	mov	r24, r18
    15ea:	76 2f       	mov	r23, r22
    15ec:	6a 2f       	mov	r22, r26
    15ee:	11 24       	eor	r1, r1
    15f0:	9f 57       	subi	r25, 0x7F	; 127
    15f2:	50 40       	sbci	r21, 0x00	; 0
    15f4:	9a f0       	brmi	.+38     	; 0x161c <__mulsf3_pse+0x88>
    15f6:	f1 f0       	breq	.+60     	; 0x1634 <__mulsf3_pse+0xa0>
    15f8:	88 23       	and	r24, r24
    15fa:	4a f0       	brmi	.+18     	; 0x160e <__mulsf3_pse+0x7a>
    15fc:	ee 0f       	add	r30, r30
    15fe:	ff 1f       	adc	r31, r31
    1600:	bb 1f       	adc	r27, r27
    1602:	66 1f       	adc	r22, r22
    1604:	77 1f       	adc	r23, r23
    1606:	88 1f       	adc	r24, r24
    1608:	91 50       	subi	r25, 0x01	; 1
    160a:	50 40       	sbci	r21, 0x00	; 0
    160c:	a9 f7       	brne	.-22     	; 0x15f8 <__mulsf3_pse+0x64>
    160e:	9e 3f       	cpi	r25, 0xFE	; 254
    1610:	51 05       	cpc	r21, r1
    1612:	80 f0       	brcs	.+32     	; 0x1634 <__mulsf3_pse+0xa0>
    1614:	0c 94 5e 0a 	jmp	0x14bc	; 0x14bc <__fp_inf>
    1618:	0c 94 a9 0a 	jmp	0x1552	; 0x1552 <__fp_szero>
    161c:	5f 3f       	cpi	r21, 0xFF	; 255
    161e:	e4 f3       	brlt	.-8      	; 0x1618 <__mulsf3_pse+0x84>
    1620:	98 3e       	cpi	r25, 0xE8	; 232
    1622:	d4 f3       	brlt	.-12     	; 0x1618 <__mulsf3_pse+0x84>
    1624:	86 95       	lsr	r24
    1626:	77 95       	ror	r23
    1628:	67 95       	ror	r22
    162a:	b7 95       	ror	r27
    162c:	f7 95       	ror	r31
    162e:	e7 95       	ror	r30
    1630:	9f 5f       	subi	r25, 0xFF	; 255
    1632:	c1 f7       	brne	.-16     	; 0x1624 <__mulsf3_pse+0x90>
    1634:	fe 2b       	or	r31, r30
    1636:	88 0f       	add	r24, r24
    1638:	91 1d       	adc	r25, r1
    163a:	96 95       	lsr	r25
    163c:	87 95       	ror	r24
    163e:	97 f9       	bld	r25, 7
    1640:	08 95       	ret

00001642 <round>:
    1642:	0e 94 8e 0a 	call	0x151c	; 0x151c <__fp_splitA>
    1646:	e8 f0       	brcs	.+58     	; 0x1682 <round+0x40>
    1648:	9e 37       	cpi	r25, 0x7E	; 126
    164a:	e8 f0       	brcs	.+58     	; 0x1686 <round+0x44>
    164c:	96 39       	cpi	r25, 0x96	; 150
    164e:	b8 f4       	brcc	.+46     	; 0x167e <round+0x3c>
    1650:	9e 38       	cpi	r25, 0x8E	; 142
    1652:	48 f4       	brcc	.+18     	; 0x1666 <round+0x24>
    1654:	67 2f       	mov	r22, r23
    1656:	78 2f       	mov	r23, r24
    1658:	88 27       	eor	r24, r24
    165a:	98 5f       	subi	r25, 0xF8	; 248
    165c:	f9 cf       	rjmp	.-14     	; 0x1650 <round+0xe>
    165e:	86 95       	lsr	r24
    1660:	77 95       	ror	r23
    1662:	67 95       	ror	r22
    1664:	93 95       	inc	r25
    1666:	95 39       	cpi	r25, 0x95	; 149
    1668:	d0 f3       	brcs	.-12     	; 0x165e <round+0x1c>
    166a:	b6 2f       	mov	r27, r22
    166c:	b1 70       	andi	r27, 0x01	; 1
    166e:	6b 0f       	add	r22, r27
    1670:	71 1d       	adc	r23, r1
    1672:	81 1d       	adc	r24, r1
    1674:	20 f4       	brcc	.+8      	; 0x167e <round+0x3c>
    1676:	87 95       	ror	r24
    1678:	77 95       	ror	r23
    167a:	67 95       	ror	r22
    167c:	93 95       	inc	r25
    167e:	0c 94 45 0b 	jmp	0x168a	; 0x168a <__fp_mintl>
    1682:	0c 94 60 0b 	jmp	0x16c0	; 0x16c0 <__fp_mpack>
    1686:	0c 94 a9 0a 	jmp	0x1552	; 0x1552 <__fp_szero>

0000168a <__fp_mintl>:
    168a:	88 23       	and	r24, r24
    168c:	71 f4       	brne	.+28     	; 0x16aa <__fp_mintl+0x20>
    168e:	77 23       	and	r23, r23
    1690:	21 f0       	breq	.+8      	; 0x169a <__fp_mintl+0x10>
    1692:	98 50       	subi	r25, 0x08	; 8
    1694:	87 2b       	or	r24, r23
    1696:	76 2f       	mov	r23, r22
    1698:	07 c0       	rjmp	.+14     	; 0x16a8 <__fp_mintl+0x1e>
    169a:	66 23       	and	r22, r22
    169c:	11 f4       	brne	.+4      	; 0x16a2 <__fp_mintl+0x18>
    169e:	99 27       	eor	r25, r25
    16a0:	0d c0       	rjmp	.+26     	; 0x16bc <__fp_mintl+0x32>
    16a2:	90 51       	subi	r25, 0x10	; 16
    16a4:	86 2b       	or	r24, r22
    16a6:	70 e0       	ldi	r23, 0x00	; 0
    16a8:	60 e0       	ldi	r22, 0x00	; 0
    16aa:	2a f0       	brmi	.+10     	; 0x16b6 <__fp_mintl+0x2c>
    16ac:	9a 95       	dec	r25
    16ae:	66 0f       	add	r22, r22
    16b0:	77 1f       	adc	r23, r23
    16b2:	88 1f       	adc	r24, r24
    16b4:	da f7       	brpl	.-10     	; 0x16ac <__fp_mintl+0x22>
    16b6:	88 0f       	add	r24, r24
    16b8:	96 95       	lsr	r25
    16ba:	87 95       	ror	r24
    16bc:	97 f9       	bld	r25, 7
    16be:	08 95       	ret

000016c0 <__fp_mpack>:
    16c0:	9f 3f       	cpi	r25, 0xFF	; 255
    16c2:	31 f0       	breq	.+12     	; 0x16d0 <__fp_mpack_finite+0xc>

000016c4 <__fp_mpack_finite>:
    16c4:	91 50       	subi	r25, 0x01	; 1
    16c6:	20 f4       	brcc	.+8      	; 0x16d0 <__fp_mpack_finite+0xc>
    16c8:	87 95       	ror	r24
    16ca:	77 95       	ror	r23
    16cc:	67 95       	ror	r22
    16ce:	b7 95       	ror	r27
    16d0:	88 0f       	add	r24, r24
    16d2:	91 1d       	adc	r25, r1
    16d4:	96 95       	lsr	r25
    16d6:	87 95       	ror	r24
    16d8:	97 f9       	bld	r25, 7
    16da:	08 95       	ret

000016dc <vfprintf>:
    16dc:	2f 92       	push	r2
    16de:	3f 92       	push	r3
    16e0:	4f 92       	push	r4
    16e2:	5f 92       	push	r5
    16e4:	6f 92       	push	r6
    16e6:	7f 92       	push	r7
    16e8:	8f 92       	push	r8
    16ea:	9f 92       	push	r9
    16ec:	af 92       	push	r10
    16ee:	bf 92       	push	r11
    16f0:	cf 92       	push	r12
    16f2:	df 92       	push	r13
    16f4:	ef 92       	push	r14
    16f6:	ff 92       	push	r15
    16f8:	0f 93       	push	r16
    16fa:	1f 93       	push	r17
    16fc:	cf 93       	push	r28
    16fe:	df 93       	push	r29
    1700:	cd b7       	in	r28, 0x3d	; 61
    1702:	de b7       	in	r29, 0x3e	; 62
    1704:	60 97       	sbiw	r28, 0x10	; 16
    1706:	cd bf       	out	0x3d, r28	; 61
    1708:	de bf       	out	0x3e, r29	; 62
    170a:	7c 01       	movw	r14, r24
    170c:	1b 01       	movw	r2, r22
    170e:	6a 01       	movw	r12, r20
    1710:	fc 01       	movw	r30, r24
    1712:	16 82       	std	Z+6, r1	; 0x06
    1714:	17 82       	std	Z+7, r1	; 0x07
    1716:	83 81       	ldd	r24, Z+3	; 0x03
    1718:	81 ff       	sbrs	r24, 1
    171a:	44 c3       	rjmp	.+1672   	; 0x1da4 <vfprintf+0x6c8>
    171c:	9e 01       	movw	r18, r28
    171e:	2f 5f       	subi	r18, 0xFF	; 255
    1720:	3f 4f       	sbci	r19, 0xFF	; 255
    1722:	39 01       	movw	r6, r18
    1724:	f7 01       	movw	r30, r14
    1726:	93 81       	ldd	r25, Z+3	; 0x03
    1728:	f1 01       	movw	r30, r2
    172a:	93 fd       	sbrc	r25, 3
    172c:	85 91       	lpm	r24, Z+
    172e:	93 ff       	sbrs	r25, 3
    1730:	81 91       	ld	r24, Z+
    1732:	1f 01       	movw	r2, r30
    1734:	88 23       	and	r24, r24
    1736:	09 f4       	brne	.+2      	; 0x173a <vfprintf+0x5e>
    1738:	31 c3       	rjmp	.+1634   	; 0x1d9c <vfprintf+0x6c0>
    173a:	85 32       	cpi	r24, 0x25	; 37
    173c:	39 f4       	brne	.+14     	; 0x174c <vfprintf+0x70>
    173e:	93 fd       	sbrc	r25, 3
    1740:	85 91       	lpm	r24, Z+
    1742:	93 ff       	sbrs	r25, 3
    1744:	81 91       	ld	r24, Z+
    1746:	1f 01       	movw	r2, r30
    1748:	85 32       	cpi	r24, 0x25	; 37
    174a:	39 f4       	brne	.+14     	; 0x175a <vfprintf+0x7e>
    174c:	b7 01       	movw	r22, r14
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1754:	56 01       	movw	r10, r12
    1756:	65 01       	movw	r12, r10
    1758:	e5 cf       	rjmp	.-54     	; 0x1724 <vfprintf+0x48>
    175a:	10 e0       	ldi	r17, 0x00	; 0
    175c:	51 2c       	mov	r5, r1
    175e:	91 2c       	mov	r9, r1
    1760:	ff e1       	ldi	r31, 0x1F	; 31
    1762:	f9 15       	cp	r31, r9
    1764:	d8 f0       	brcs	.+54     	; 0x179c <vfprintf+0xc0>
    1766:	8b 32       	cpi	r24, 0x2B	; 43
    1768:	79 f0       	breq	.+30     	; 0x1788 <vfprintf+0xac>
    176a:	38 f4       	brcc	.+14     	; 0x177a <vfprintf+0x9e>
    176c:	80 32       	cpi	r24, 0x20	; 32
    176e:	79 f0       	breq	.+30     	; 0x178e <vfprintf+0xb2>
    1770:	83 32       	cpi	r24, 0x23	; 35
    1772:	a1 f4       	brne	.+40     	; 0x179c <vfprintf+0xc0>
    1774:	f9 2d       	mov	r31, r9
    1776:	f0 61       	ori	r31, 0x10	; 16
    1778:	2e c0       	rjmp	.+92     	; 0x17d6 <vfprintf+0xfa>
    177a:	8d 32       	cpi	r24, 0x2D	; 45
    177c:	61 f0       	breq	.+24     	; 0x1796 <vfprintf+0xba>
    177e:	80 33       	cpi	r24, 0x30	; 48
    1780:	69 f4       	brne	.+26     	; 0x179c <vfprintf+0xc0>
    1782:	29 2d       	mov	r18, r9
    1784:	21 60       	ori	r18, 0x01	; 1
    1786:	2d c0       	rjmp	.+90     	; 0x17e2 <vfprintf+0x106>
    1788:	39 2d       	mov	r19, r9
    178a:	32 60       	ori	r19, 0x02	; 2
    178c:	93 2e       	mov	r9, r19
    178e:	89 2d       	mov	r24, r9
    1790:	84 60       	ori	r24, 0x04	; 4
    1792:	98 2e       	mov	r9, r24
    1794:	2a c0       	rjmp	.+84     	; 0x17ea <vfprintf+0x10e>
    1796:	e9 2d       	mov	r30, r9
    1798:	e8 60       	ori	r30, 0x08	; 8
    179a:	15 c0       	rjmp	.+42     	; 0x17c6 <vfprintf+0xea>
    179c:	97 fc       	sbrc	r9, 7
    179e:	2d c0       	rjmp	.+90     	; 0x17fa <vfprintf+0x11e>
    17a0:	20 ed       	ldi	r18, 0xD0	; 208
    17a2:	28 0f       	add	r18, r24
    17a4:	2a 30       	cpi	r18, 0x0A	; 10
    17a6:	88 f4       	brcc	.+34     	; 0x17ca <vfprintf+0xee>
    17a8:	96 fe       	sbrs	r9, 6
    17aa:	06 c0       	rjmp	.+12     	; 0x17b8 <vfprintf+0xdc>
    17ac:	3a e0       	ldi	r19, 0x0A	; 10
    17ae:	13 9f       	mul	r17, r19
    17b0:	20 0d       	add	r18, r0
    17b2:	11 24       	eor	r1, r1
    17b4:	12 2f       	mov	r17, r18
    17b6:	19 c0       	rjmp	.+50     	; 0x17ea <vfprintf+0x10e>
    17b8:	8a e0       	ldi	r24, 0x0A	; 10
    17ba:	58 9e       	mul	r5, r24
    17bc:	20 0d       	add	r18, r0
    17be:	11 24       	eor	r1, r1
    17c0:	52 2e       	mov	r5, r18
    17c2:	e9 2d       	mov	r30, r9
    17c4:	e0 62       	ori	r30, 0x20	; 32
    17c6:	9e 2e       	mov	r9, r30
    17c8:	10 c0       	rjmp	.+32     	; 0x17ea <vfprintf+0x10e>
    17ca:	8e 32       	cpi	r24, 0x2E	; 46
    17cc:	31 f4       	brne	.+12     	; 0x17da <vfprintf+0xfe>
    17ce:	96 fc       	sbrc	r9, 6
    17d0:	e5 c2       	rjmp	.+1482   	; 0x1d9c <vfprintf+0x6c0>
    17d2:	f9 2d       	mov	r31, r9
    17d4:	f0 64       	ori	r31, 0x40	; 64
    17d6:	9f 2e       	mov	r9, r31
    17d8:	08 c0       	rjmp	.+16     	; 0x17ea <vfprintf+0x10e>
    17da:	8c 36       	cpi	r24, 0x6C	; 108
    17dc:	21 f4       	brne	.+8      	; 0x17e6 <vfprintf+0x10a>
    17de:	29 2d       	mov	r18, r9
    17e0:	20 68       	ori	r18, 0x80	; 128
    17e2:	92 2e       	mov	r9, r18
    17e4:	02 c0       	rjmp	.+4      	; 0x17ea <vfprintf+0x10e>
    17e6:	88 36       	cpi	r24, 0x68	; 104
    17e8:	41 f4       	brne	.+16     	; 0x17fa <vfprintf+0x11e>
    17ea:	f1 01       	movw	r30, r2
    17ec:	93 fd       	sbrc	r25, 3
    17ee:	85 91       	lpm	r24, Z+
    17f0:	93 ff       	sbrs	r25, 3
    17f2:	81 91       	ld	r24, Z+
    17f4:	1f 01       	movw	r2, r30
    17f6:	81 11       	cpse	r24, r1
    17f8:	b3 cf       	rjmp	.-154    	; 0x1760 <vfprintf+0x84>
    17fa:	9b eb       	ldi	r25, 0xBB	; 187
    17fc:	98 0f       	add	r25, r24
    17fe:	93 30       	cpi	r25, 0x03	; 3
    1800:	20 f4       	brcc	.+8      	; 0x180a <vfprintf+0x12e>
    1802:	99 2d       	mov	r25, r9
    1804:	90 61       	ori	r25, 0x10	; 16
    1806:	80 5e       	subi	r24, 0xE0	; 224
    1808:	07 c0       	rjmp	.+14     	; 0x1818 <vfprintf+0x13c>
    180a:	9b e9       	ldi	r25, 0x9B	; 155
    180c:	98 0f       	add	r25, r24
    180e:	93 30       	cpi	r25, 0x03	; 3
    1810:	08 f0       	brcs	.+2      	; 0x1814 <vfprintf+0x138>
    1812:	66 c1       	rjmp	.+716    	; 0x1ae0 <vfprintf+0x404>
    1814:	99 2d       	mov	r25, r9
    1816:	9f 7e       	andi	r25, 0xEF	; 239
    1818:	96 ff       	sbrs	r25, 6
    181a:	16 e0       	ldi	r17, 0x06	; 6
    181c:	9f 73       	andi	r25, 0x3F	; 63
    181e:	99 2e       	mov	r9, r25
    1820:	85 36       	cpi	r24, 0x65	; 101
    1822:	19 f4       	brne	.+6      	; 0x182a <vfprintf+0x14e>
    1824:	90 64       	ori	r25, 0x40	; 64
    1826:	99 2e       	mov	r9, r25
    1828:	08 c0       	rjmp	.+16     	; 0x183a <vfprintf+0x15e>
    182a:	86 36       	cpi	r24, 0x66	; 102
    182c:	21 f4       	brne	.+8      	; 0x1836 <vfprintf+0x15a>
    182e:	39 2f       	mov	r19, r25
    1830:	30 68       	ori	r19, 0x80	; 128
    1832:	93 2e       	mov	r9, r19
    1834:	02 c0       	rjmp	.+4      	; 0x183a <vfprintf+0x15e>
    1836:	11 11       	cpse	r17, r1
    1838:	11 50       	subi	r17, 0x01	; 1
    183a:	97 fe       	sbrs	r9, 7
    183c:	07 c0       	rjmp	.+14     	; 0x184c <vfprintf+0x170>
    183e:	1c 33       	cpi	r17, 0x3C	; 60
    1840:	50 f4       	brcc	.+20     	; 0x1856 <vfprintf+0x17a>
    1842:	44 24       	eor	r4, r4
    1844:	43 94       	inc	r4
    1846:	41 0e       	add	r4, r17
    1848:	27 e0       	ldi	r18, 0x07	; 7
    184a:	0b c0       	rjmp	.+22     	; 0x1862 <vfprintf+0x186>
    184c:	18 30       	cpi	r17, 0x08	; 8
    184e:	38 f0       	brcs	.+14     	; 0x185e <vfprintf+0x182>
    1850:	27 e0       	ldi	r18, 0x07	; 7
    1852:	17 e0       	ldi	r17, 0x07	; 7
    1854:	05 c0       	rjmp	.+10     	; 0x1860 <vfprintf+0x184>
    1856:	27 e0       	ldi	r18, 0x07	; 7
    1858:	9c e3       	ldi	r25, 0x3C	; 60
    185a:	49 2e       	mov	r4, r25
    185c:	02 c0       	rjmp	.+4      	; 0x1862 <vfprintf+0x186>
    185e:	21 2f       	mov	r18, r17
    1860:	41 2c       	mov	r4, r1
    1862:	56 01       	movw	r10, r12
    1864:	84 e0       	ldi	r24, 0x04	; 4
    1866:	a8 0e       	add	r10, r24
    1868:	b1 1c       	adc	r11, r1
    186a:	f6 01       	movw	r30, r12
    186c:	60 81       	ld	r22, Z
    186e:	71 81       	ldd	r23, Z+1	; 0x01
    1870:	82 81       	ldd	r24, Z+2	; 0x02
    1872:	93 81       	ldd	r25, Z+3	; 0x03
    1874:	04 2d       	mov	r16, r4
    1876:	a3 01       	movw	r20, r6
    1878:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <__ftoa_engine>
    187c:	6c 01       	movw	r12, r24
    187e:	f9 81       	ldd	r31, Y+1	; 0x01
    1880:	fc 87       	std	Y+12, r31	; 0x0c
    1882:	f0 ff       	sbrs	r31, 0
    1884:	02 c0       	rjmp	.+4      	; 0x188a <vfprintf+0x1ae>
    1886:	f3 ff       	sbrs	r31, 3
    1888:	06 c0       	rjmp	.+12     	; 0x1896 <vfprintf+0x1ba>
    188a:	91 fc       	sbrc	r9, 1
    188c:	06 c0       	rjmp	.+12     	; 0x189a <vfprintf+0x1be>
    188e:	92 fe       	sbrs	r9, 2
    1890:	06 c0       	rjmp	.+12     	; 0x189e <vfprintf+0x1c2>
    1892:	00 e2       	ldi	r16, 0x20	; 32
    1894:	05 c0       	rjmp	.+10     	; 0x18a0 <vfprintf+0x1c4>
    1896:	0d e2       	ldi	r16, 0x2D	; 45
    1898:	03 c0       	rjmp	.+6      	; 0x18a0 <vfprintf+0x1c4>
    189a:	0b e2       	ldi	r16, 0x2B	; 43
    189c:	01 c0       	rjmp	.+2      	; 0x18a0 <vfprintf+0x1c4>
    189e:	00 e0       	ldi	r16, 0x00	; 0
    18a0:	8c 85       	ldd	r24, Y+12	; 0x0c
    18a2:	8c 70       	andi	r24, 0x0C	; 12
    18a4:	19 f0       	breq	.+6      	; 0x18ac <vfprintf+0x1d0>
    18a6:	01 11       	cpse	r16, r1
    18a8:	5a c2       	rjmp	.+1204   	; 0x1d5e <vfprintf+0x682>
    18aa:	9b c2       	rjmp	.+1334   	; 0x1de2 <vfprintf+0x706>
    18ac:	97 fe       	sbrs	r9, 7
    18ae:	10 c0       	rjmp	.+32     	; 0x18d0 <vfprintf+0x1f4>
    18b0:	4c 0c       	add	r4, r12
    18b2:	fc 85       	ldd	r31, Y+12	; 0x0c
    18b4:	f4 ff       	sbrs	r31, 4
    18b6:	04 c0       	rjmp	.+8      	; 0x18c0 <vfprintf+0x1e4>
    18b8:	8a 81       	ldd	r24, Y+2	; 0x02
    18ba:	81 33       	cpi	r24, 0x31	; 49
    18bc:	09 f4       	brne	.+2      	; 0x18c0 <vfprintf+0x1e4>
    18be:	4a 94       	dec	r4
    18c0:	14 14       	cp	r1, r4
    18c2:	74 f5       	brge	.+92     	; 0x1920 <vfprintf+0x244>
    18c4:	28 e0       	ldi	r18, 0x08	; 8
    18c6:	24 15       	cp	r18, r4
    18c8:	78 f5       	brcc	.+94     	; 0x1928 <vfprintf+0x24c>
    18ca:	88 e0       	ldi	r24, 0x08	; 8
    18cc:	48 2e       	mov	r4, r24
    18ce:	2c c0       	rjmp	.+88     	; 0x1928 <vfprintf+0x24c>
    18d0:	96 fc       	sbrc	r9, 6
    18d2:	2a c0       	rjmp	.+84     	; 0x1928 <vfprintf+0x24c>
    18d4:	81 2f       	mov	r24, r17
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	8c 15       	cp	r24, r12
    18da:	9d 05       	cpc	r25, r13
    18dc:	9c f0       	brlt	.+38     	; 0x1904 <vfprintf+0x228>
    18de:	3c ef       	ldi	r19, 0xFC	; 252
    18e0:	c3 16       	cp	r12, r19
    18e2:	3f ef       	ldi	r19, 0xFF	; 255
    18e4:	d3 06       	cpc	r13, r19
    18e6:	74 f0       	brlt	.+28     	; 0x1904 <vfprintf+0x228>
    18e8:	89 2d       	mov	r24, r9
    18ea:	80 68       	ori	r24, 0x80	; 128
    18ec:	98 2e       	mov	r9, r24
    18ee:	0a c0       	rjmp	.+20     	; 0x1904 <vfprintf+0x228>
    18f0:	e2 e0       	ldi	r30, 0x02	; 2
    18f2:	f0 e0       	ldi	r31, 0x00	; 0
    18f4:	ec 0f       	add	r30, r28
    18f6:	fd 1f       	adc	r31, r29
    18f8:	e1 0f       	add	r30, r17
    18fa:	f1 1d       	adc	r31, r1
    18fc:	80 81       	ld	r24, Z
    18fe:	80 33       	cpi	r24, 0x30	; 48
    1900:	19 f4       	brne	.+6      	; 0x1908 <vfprintf+0x22c>
    1902:	11 50       	subi	r17, 0x01	; 1
    1904:	11 11       	cpse	r17, r1
    1906:	f4 cf       	rjmp	.-24     	; 0x18f0 <vfprintf+0x214>
    1908:	97 fe       	sbrs	r9, 7
    190a:	0e c0       	rjmp	.+28     	; 0x1928 <vfprintf+0x24c>
    190c:	44 24       	eor	r4, r4
    190e:	43 94       	inc	r4
    1910:	41 0e       	add	r4, r17
    1912:	81 2f       	mov	r24, r17
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	c8 16       	cp	r12, r24
    1918:	d9 06       	cpc	r13, r25
    191a:	2c f4       	brge	.+10     	; 0x1926 <vfprintf+0x24a>
    191c:	1c 19       	sub	r17, r12
    191e:	04 c0       	rjmp	.+8      	; 0x1928 <vfprintf+0x24c>
    1920:	44 24       	eor	r4, r4
    1922:	43 94       	inc	r4
    1924:	01 c0       	rjmp	.+2      	; 0x1928 <vfprintf+0x24c>
    1926:	10 e0       	ldi	r17, 0x00	; 0
    1928:	97 fe       	sbrs	r9, 7
    192a:	06 c0       	rjmp	.+12     	; 0x1938 <vfprintf+0x25c>
    192c:	1c 14       	cp	r1, r12
    192e:	1d 04       	cpc	r1, r13
    1930:	34 f4       	brge	.+12     	; 0x193e <vfprintf+0x262>
    1932:	c6 01       	movw	r24, r12
    1934:	01 96       	adiw	r24, 0x01	; 1
    1936:	05 c0       	rjmp	.+10     	; 0x1942 <vfprintf+0x266>
    1938:	85 e0       	ldi	r24, 0x05	; 5
    193a:	90 e0       	ldi	r25, 0x00	; 0
    193c:	02 c0       	rjmp	.+4      	; 0x1942 <vfprintf+0x266>
    193e:	81 e0       	ldi	r24, 0x01	; 1
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	01 11       	cpse	r16, r1
    1944:	01 96       	adiw	r24, 0x01	; 1
    1946:	11 23       	and	r17, r17
    1948:	31 f0       	breq	.+12     	; 0x1956 <vfprintf+0x27a>
    194a:	21 2f       	mov	r18, r17
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	2f 5f       	subi	r18, 0xFF	; 255
    1950:	3f 4f       	sbci	r19, 0xFF	; 255
    1952:	82 0f       	add	r24, r18
    1954:	93 1f       	adc	r25, r19
    1956:	25 2d       	mov	r18, r5
    1958:	30 e0       	ldi	r19, 0x00	; 0
    195a:	82 17       	cp	r24, r18
    195c:	93 07       	cpc	r25, r19
    195e:	14 f4       	brge	.+4      	; 0x1964 <vfprintf+0x288>
    1960:	58 1a       	sub	r5, r24
    1962:	01 c0       	rjmp	.+2      	; 0x1966 <vfprintf+0x28a>
    1964:	51 2c       	mov	r5, r1
    1966:	89 2d       	mov	r24, r9
    1968:	89 70       	andi	r24, 0x09	; 9
    196a:	49 f4       	brne	.+18     	; 0x197e <vfprintf+0x2a2>
    196c:	55 20       	and	r5, r5
    196e:	39 f0       	breq	.+14     	; 0x197e <vfprintf+0x2a2>
    1970:	b7 01       	movw	r22, r14
    1972:	80 e2       	ldi	r24, 0x20	; 32
    1974:	90 e0       	ldi	r25, 0x00	; 0
    1976:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    197a:	5a 94       	dec	r5
    197c:	f7 cf       	rjmp	.-18     	; 0x196c <vfprintf+0x290>
    197e:	00 23       	and	r16, r16
    1980:	29 f0       	breq	.+10     	; 0x198c <vfprintf+0x2b0>
    1982:	b7 01       	movw	r22, r14
    1984:	80 2f       	mov	r24, r16
    1986:	90 e0       	ldi	r25, 0x00	; 0
    1988:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    198c:	93 fc       	sbrc	r9, 3
    198e:	09 c0       	rjmp	.+18     	; 0x19a2 <vfprintf+0x2c6>
    1990:	55 20       	and	r5, r5
    1992:	39 f0       	breq	.+14     	; 0x19a2 <vfprintf+0x2c6>
    1994:	b7 01       	movw	r22, r14
    1996:	80 e3       	ldi	r24, 0x30	; 48
    1998:	90 e0       	ldi	r25, 0x00	; 0
    199a:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    199e:	5a 94       	dec	r5
    19a0:	f7 cf       	rjmp	.-18     	; 0x1990 <vfprintf+0x2b4>
    19a2:	97 fe       	sbrs	r9, 7
    19a4:	4c c0       	rjmp	.+152    	; 0x1a3e <vfprintf+0x362>
    19a6:	46 01       	movw	r8, r12
    19a8:	d7 fe       	sbrs	r13, 7
    19aa:	02 c0       	rjmp	.+4      	; 0x19b0 <vfprintf+0x2d4>
    19ac:	81 2c       	mov	r8, r1
    19ae:	91 2c       	mov	r9, r1
    19b0:	c6 01       	movw	r24, r12
    19b2:	88 19       	sub	r24, r8
    19b4:	99 09       	sbc	r25, r9
    19b6:	f3 01       	movw	r30, r6
    19b8:	e8 0f       	add	r30, r24
    19ba:	f9 1f       	adc	r31, r25
    19bc:	ed 87       	std	Y+13, r30	; 0x0d
    19be:	fe 87       	std	Y+14, r31	; 0x0e
    19c0:	96 01       	movw	r18, r12
    19c2:	24 19       	sub	r18, r4
    19c4:	31 09       	sbc	r19, r1
    19c6:	2f 87       	std	Y+15, r18	; 0x0f
    19c8:	38 8b       	std	Y+16, r19	; 0x10
    19ca:	01 2f       	mov	r16, r17
    19cc:	10 e0       	ldi	r17, 0x00	; 0
    19ce:	11 95       	neg	r17
    19d0:	01 95       	neg	r16
    19d2:	11 09       	sbc	r17, r1
    19d4:	3f ef       	ldi	r19, 0xFF	; 255
    19d6:	83 16       	cp	r8, r19
    19d8:	93 06       	cpc	r9, r19
    19da:	29 f4       	brne	.+10     	; 0x19e6 <vfprintf+0x30a>
    19dc:	b7 01       	movw	r22, r14
    19de:	8e e2       	ldi	r24, 0x2E	; 46
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    19e6:	c8 14       	cp	r12, r8
    19e8:	d9 04       	cpc	r13, r9
    19ea:	4c f0       	brlt	.+18     	; 0x19fe <vfprintf+0x322>
    19ec:	8f 85       	ldd	r24, Y+15	; 0x0f
    19ee:	98 89       	ldd	r25, Y+16	; 0x10
    19f0:	88 15       	cp	r24, r8
    19f2:	99 05       	cpc	r25, r9
    19f4:	24 f4       	brge	.+8      	; 0x19fe <vfprintf+0x322>
    19f6:	ed 85       	ldd	r30, Y+13	; 0x0d
    19f8:	fe 85       	ldd	r31, Y+14	; 0x0e
    19fa:	81 81       	ldd	r24, Z+1	; 0x01
    19fc:	01 c0       	rjmp	.+2      	; 0x1a00 <vfprintf+0x324>
    19fe:	80 e3       	ldi	r24, 0x30	; 48
    1a00:	f1 e0       	ldi	r31, 0x01	; 1
    1a02:	8f 1a       	sub	r8, r31
    1a04:	91 08       	sbc	r9, r1
    1a06:	2d 85       	ldd	r18, Y+13	; 0x0d
    1a08:	3e 85       	ldd	r19, Y+14	; 0x0e
    1a0a:	2f 5f       	subi	r18, 0xFF	; 255
    1a0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a0e:	2d 87       	std	Y+13, r18	; 0x0d
    1a10:	3e 87       	std	Y+14, r19	; 0x0e
    1a12:	80 16       	cp	r8, r16
    1a14:	91 06       	cpc	r9, r17
    1a16:	2c f0       	brlt	.+10     	; 0x1a22 <vfprintf+0x346>
    1a18:	b7 01       	movw	r22, r14
    1a1a:	90 e0       	ldi	r25, 0x00	; 0
    1a1c:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1a20:	d9 cf       	rjmp	.-78     	; 0x19d4 <vfprintf+0x2f8>
    1a22:	c8 14       	cp	r12, r8
    1a24:	d9 04       	cpc	r13, r9
    1a26:	41 f4       	brne	.+16     	; 0x1a38 <vfprintf+0x35c>
    1a28:	9a 81       	ldd	r25, Y+2	; 0x02
    1a2a:	96 33       	cpi	r25, 0x36	; 54
    1a2c:	20 f4       	brcc	.+8      	; 0x1a36 <vfprintf+0x35a>
    1a2e:	95 33       	cpi	r25, 0x35	; 53
    1a30:	19 f4       	brne	.+6      	; 0x1a38 <vfprintf+0x35c>
    1a32:	3c 85       	ldd	r19, Y+12	; 0x0c
    1a34:	34 ff       	sbrs	r19, 4
    1a36:	81 e3       	ldi	r24, 0x31	; 49
    1a38:	b7 01       	movw	r22, r14
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	4e c0       	rjmp	.+156    	; 0x1ada <vfprintf+0x3fe>
    1a3e:	8a 81       	ldd	r24, Y+2	; 0x02
    1a40:	81 33       	cpi	r24, 0x31	; 49
    1a42:	19 f0       	breq	.+6      	; 0x1a4a <vfprintf+0x36e>
    1a44:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a46:	9f 7e       	andi	r25, 0xEF	; 239
    1a48:	9c 87       	std	Y+12, r25	; 0x0c
    1a4a:	b7 01       	movw	r22, r14
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1a52:	11 11       	cpse	r17, r1
    1a54:	05 c0       	rjmp	.+10     	; 0x1a60 <vfprintf+0x384>
    1a56:	94 fc       	sbrc	r9, 4
    1a58:	18 c0       	rjmp	.+48     	; 0x1a8a <vfprintf+0x3ae>
    1a5a:	85 e6       	ldi	r24, 0x65	; 101
    1a5c:	90 e0       	ldi	r25, 0x00	; 0
    1a5e:	17 c0       	rjmp	.+46     	; 0x1a8e <vfprintf+0x3b2>
    1a60:	b7 01       	movw	r22, r14
    1a62:	8e e2       	ldi	r24, 0x2E	; 46
    1a64:	90 e0       	ldi	r25, 0x00	; 0
    1a66:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1a6a:	1e 5f       	subi	r17, 0xFE	; 254
    1a6c:	82 e0       	ldi	r24, 0x02	; 2
    1a6e:	01 e0       	ldi	r16, 0x01	; 1
    1a70:	08 0f       	add	r16, r24
    1a72:	f3 01       	movw	r30, r6
    1a74:	e8 0f       	add	r30, r24
    1a76:	f1 1d       	adc	r31, r1
    1a78:	80 81       	ld	r24, Z
    1a7a:	b7 01       	movw	r22, r14
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1a82:	80 2f       	mov	r24, r16
    1a84:	01 13       	cpse	r16, r17
    1a86:	f3 cf       	rjmp	.-26     	; 0x1a6e <vfprintf+0x392>
    1a88:	e6 cf       	rjmp	.-52     	; 0x1a56 <vfprintf+0x37a>
    1a8a:	85 e4       	ldi	r24, 0x45	; 69
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	b7 01       	movw	r22, r14
    1a90:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1a94:	d7 fc       	sbrc	r13, 7
    1a96:	06 c0       	rjmp	.+12     	; 0x1aa4 <vfprintf+0x3c8>
    1a98:	c1 14       	cp	r12, r1
    1a9a:	d1 04       	cpc	r13, r1
    1a9c:	41 f4       	brne	.+16     	; 0x1aae <vfprintf+0x3d2>
    1a9e:	ec 85       	ldd	r30, Y+12	; 0x0c
    1aa0:	e4 ff       	sbrs	r30, 4
    1aa2:	05 c0       	rjmp	.+10     	; 0x1aae <vfprintf+0x3d2>
    1aa4:	d1 94       	neg	r13
    1aa6:	c1 94       	neg	r12
    1aa8:	d1 08       	sbc	r13, r1
    1aaa:	8d e2       	ldi	r24, 0x2D	; 45
    1aac:	01 c0       	rjmp	.+2      	; 0x1ab0 <vfprintf+0x3d4>
    1aae:	8b e2       	ldi	r24, 0x2B	; 43
    1ab0:	b7 01       	movw	r22, r14
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1ab8:	80 e3       	ldi	r24, 0x30	; 48
    1aba:	2a e0       	ldi	r18, 0x0A	; 10
    1abc:	c2 16       	cp	r12, r18
    1abe:	d1 04       	cpc	r13, r1
    1ac0:	2c f0       	brlt	.+10     	; 0x1acc <vfprintf+0x3f0>
    1ac2:	8f 5f       	subi	r24, 0xFF	; 255
    1ac4:	fa e0       	ldi	r31, 0x0A	; 10
    1ac6:	cf 1a       	sub	r12, r31
    1ac8:	d1 08       	sbc	r13, r1
    1aca:	f7 cf       	rjmp	.-18     	; 0x1aba <vfprintf+0x3de>
    1acc:	b7 01       	movw	r22, r14
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1ad4:	b7 01       	movw	r22, r14
    1ad6:	c6 01       	movw	r24, r12
    1ad8:	c0 96       	adiw	r24, 0x30	; 48
    1ada:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1ade:	54 c1       	rjmp	.+680    	; 0x1d88 <vfprintf+0x6ac>
    1ae0:	83 36       	cpi	r24, 0x63	; 99
    1ae2:	31 f0       	breq	.+12     	; 0x1af0 <vfprintf+0x414>
    1ae4:	83 37       	cpi	r24, 0x73	; 115
    1ae6:	79 f0       	breq	.+30     	; 0x1b06 <vfprintf+0x42a>
    1ae8:	83 35       	cpi	r24, 0x53	; 83
    1aea:	09 f0       	breq	.+2      	; 0x1aee <vfprintf+0x412>
    1aec:	56 c0       	rjmp	.+172    	; 0x1b9a <vfprintf+0x4be>
    1aee:	20 c0       	rjmp	.+64     	; 0x1b30 <vfprintf+0x454>
    1af0:	56 01       	movw	r10, r12
    1af2:	32 e0       	ldi	r19, 0x02	; 2
    1af4:	a3 0e       	add	r10, r19
    1af6:	b1 1c       	adc	r11, r1
    1af8:	f6 01       	movw	r30, r12
    1afa:	80 81       	ld	r24, Z
    1afc:	89 83       	std	Y+1, r24	; 0x01
    1afe:	01 e0       	ldi	r16, 0x01	; 1
    1b00:	10 e0       	ldi	r17, 0x00	; 0
    1b02:	63 01       	movw	r12, r6
    1b04:	12 c0       	rjmp	.+36     	; 0x1b2a <vfprintf+0x44e>
    1b06:	56 01       	movw	r10, r12
    1b08:	f2 e0       	ldi	r31, 0x02	; 2
    1b0a:	af 0e       	add	r10, r31
    1b0c:	b1 1c       	adc	r11, r1
    1b0e:	f6 01       	movw	r30, r12
    1b10:	c0 80       	ld	r12, Z
    1b12:	d1 80       	ldd	r13, Z+1	; 0x01
    1b14:	96 fe       	sbrs	r9, 6
    1b16:	03 c0       	rjmp	.+6      	; 0x1b1e <vfprintf+0x442>
    1b18:	61 2f       	mov	r22, r17
    1b1a:	70 e0       	ldi	r23, 0x00	; 0
    1b1c:	02 c0       	rjmp	.+4      	; 0x1b22 <vfprintf+0x446>
    1b1e:	6f ef       	ldi	r22, 0xFF	; 255
    1b20:	7f ef       	ldi	r23, 0xFF	; 255
    1b22:	c6 01       	movw	r24, r12
    1b24:	0e 94 0d 10 	call	0x201a	; 0x201a <strnlen>
    1b28:	8c 01       	movw	r16, r24
    1b2a:	f9 2d       	mov	r31, r9
    1b2c:	ff 77       	andi	r31, 0x7F	; 127
    1b2e:	14 c0       	rjmp	.+40     	; 0x1b58 <vfprintf+0x47c>
    1b30:	56 01       	movw	r10, r12
    1b32:	22 e0       	ldi	r18, 0x02	; 2
    1b34:	a2 0e       	add	r10, r18
    1b36:	b1 1c       	adc	r11, r1
    1b38:	f6 01       	movw	r30, r12
    1b3a:	c0 80       	ld	r12, Z
    1b3c:	d1 80       	ldd	r13, Z+1	; 0x01
    1b3e:	96 fe       	sbrs	r9, 6
    1b40:	03 c0       	rjmp	.+6      	; 0x1b48 <vfprintf+0x46c>
    1b42:	61 2f       	mov	r22, r17
    1b44:	70 e0       	ldi	r23, 0x00	; 0
    1b46:	02 c0       	rjmp	.+4      	; 0x1b4c <vfprintf+0x470>
    1b48:	6f ef       	ldi	r22, 0xFF	; 255
    1b4a:	7f ef       	ldi	r23, 0xFF	; 255
    1b4c:	c6 01       	movw	r24, r12
    1b4e:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <strnlen_P>
    1b52:	8c 01       	movw	r16, r24
    1b54:	f9 2d       	mov	r31, r9
    1b56:	f0 68       	ori	r31, 0x80	; 128
    1b58:	9f 2e       	mov	r9, r31
    1b5a:	f3 fd       	sbrc	r31, 3
    1b5c:	1a c0       	rjmp	.+52     	; 0x1b92 <vfprintf+0x4b6>
    1b5e:	85 2d       	mov	r24, r5
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	08 17       	cp	r16, r24
    1b64:	19 07       	cpc	r17, r25
    1b66:	a8 f4       	brcc	.+42     	; 0x1b92 <vfprintf+0x4b6>
    1b68:	b7 01       	movw	r22, r14
    1b6a:	80 e2       	ldi	r24, 0x20	; 32
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1b72:	5a 94       	dec	r5
    1b74:	f4 cf       	rjmp	.-24     	; 0x1b5e <vfprintf+0x482>
    1b76:	f6 01       	movw	r30, r12
    1b78:	97 fc       	sbrc	r9, 7
    1b7a:	85 91       	lpm	r24, Z+
    1b7c:	97 fe       	sbrs	r9, 7
    1b7e:	81 91       	ld	r24, Z+
    1b80:	6f 01       	movw	r12, r30
    1b82:	b7 01       	movw	r22, r14
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1b8a:	51 10       	cpse	r5, r1
    1b8c:	5a 94       	dec	r5
    1b8e:	01 50       	subi	r16, 0x01	; 1
    1b90:	11 09       	sbc	r17, r1
    1b92:	01 15       	cp	r16, r1
    1b94:	11 05       	cpc	r17, r1
    1b96:	79 f7       	brne	.-34     	; 0x1b76 <vfprintf+0x49a>
    1b98:	f7 c0       	rjmp	.+494    	; 0x1d88 <vfprintf+0x6ac>
    1b9a:	84 36       	cpi	r24, 0x64	; 100
    1b9c:	11 f0       	breq	.+4      	; 0x1ba2 <vfprintf+0x4c6>
    1b9e:	89 36       	cpi	r24, 0x69	; 105
    1ba0:	61 f5       	brne	.+88     	; 0x1bfa <vfprintf+0x51e>
    1ba2:	56 01       	movw	r10, r12
    1ba4:	97 fe       	sbrs	r9, 7
    1ba6:	09 c0       	rjmp	.+18     	; 0x1bba <vfprintf+0x4de>
    1ba8:	24 e0       	ldi	r18, 0x04	; 4
    1baa:	a2 0e       	add	r10, r18
    1bac:	b1 1c       	adc	r11, r1
    1bae:	f6 01       	movw	r30, r12
    1bb0:	60 81       	ld	r22, Z
    1bb2:	71 81       	ldd	r23, Z+1	; 0x01
    1bb4:	82 81       	ldd	r24, Z+2	; 0x02
    1bb6:	93 81       	ldd	r25, Z+3	; 0x03
    1bb8:	0a c0       	rjmp	.+20     	; 0x1bce <vfprintf+0x4f2>
    1bba:	f2 e0       	ldi	r31, 0x02	; 2
    1bbc:	af 0e       	add	r10, r31
    1bbe:	b1 1c       	adc	r11, r1
    1bc0:	f6 01       	movw	r30, r12
    1bc2:	60 81       	ld	r22, Z
    1bc4:	71 81       	ldd	r23, Z+1	; 0x01
    1bc6:	07 2e       	mov	r0, r23
    1bc8:	00 0c       	add	r0, r0
    1bca:	88 0b       	sbc	r24, r24
    1bcc:	99 0b       	sbc	r25, r25
    1bce:	f9 2d       	mov	r31, r9
    1bd0:	ff 76       	andi	r31, 0x6F	; 111
    1bd2:	9f 2e       	mov	r9, r31
    1bd4:	97 ff       	sbrs	r25, 7
    1bd6:	09 c0       	rjmp	.+18     	; 0x1bea <vfprintf+0x50e>
    1bd8:	90 95       	com	r25
    1bda:	80 95       	com	r24
    1bdc:	70 95       	com	r23
    1bde:	61 95       	neg	r22
    1be0:	7f 4f       	sbci	r23, 0xFF	; 255
    1be2:	8f 4f       	sbci	r24, 0xFF	; 255
    1be4:	9f 4f       	sbci	r25, 0xFF	; 255
    1be6:	f0 68       	ori	r31, 0x80	; 128
    1be8:	9f 2e       	mov	r9, r31
    1bea:	2a e0       	ldi	r18, 0x0A	; 10
    1bec:	30 e0       	ldi	r19, 0x00	; 0
    1bee:	a3 01       	movw	r20, r6
    1bf0:	0e 94 98 10 	call	0x2130	; 0x2130 <__ultoa_invert>
    1bf4:	c8 2e       	mov	r12, r24
    1bf6:	c6 18       	sub	r12, r6
    1bf8:	3f c0       	rjmp	.+126    	; 0x1c78 <vfprintf+0x59c>
    1bfa:	09 2d       	mov	r16, r9
    1bfc:	85 37       	cpi	r24, 0x75	; 117
    1bfe:	21 f4       	brne	.+8      	; 0x1c08 <vfprintf+0x52c>
    1c00:	0f 7e       	andi	r16, 0xEF	; 239
    1c02:	2a e0       	ldi	r18, 0x0A	; 10
    1c04:	30 e0       	ldi	r19, 0x00	; 0
    1c06:	1d c0       	rjmp	.+58     	; 0x1c42 <vfprintf+0x566>
    1c08:	09 7f       	andi	r16, 0xF9	; 249
    1c0a:	8f 36       	cpi	r24, 0x6F	; 111
    1c0c:	91 f0       	breq	.+36     	; 0x1c32 <vfprintf+0x556>
    1c0e:	18 f4       	brcc	.+6      	; 0x1c16 <vfprintf+0x53a>
    1c10:	88 35       	cpi	r24, 0x58	; 88
    1c12:	59 f0       	breq	.+22     	; 0x1c2a <vfprintf+0x54e>
    1c14:	c3 c0       	rjmp	.+390    	; 0x1d9c <vfprintf+0x6c0>
    1c16:	80 37       	cpi	r24, 0x70	; 112
    1c18:	19 f0       	breq	.+6      	; 0x1c20 <vfprintf+0x544>
    1c1a:	88 37       	cpi	r24, 0x78	; 120
    1c1c:	11 f0       	breq	.+4      	; 0x1c22 <vfprintf+0x546>
    1c1e:	be c0       	rjmp	.+380    	; 0x1d9c <vfprintf+0x6c0>
    1c20:	00 61       	ori	r16, 0x10	; 16
    1c22:	04 ff       	sbrs	r16, 4
    1c24:	09 c0       	rjmp	.+18     	; 0x1c38 <vfprintf+0x55c>
    1c26:	04 60       	ori	r16, 0x04	; 4
    1c28:	07 c0       	rjmp	.+14     	; 0x1c38 <vfprintf+0x55c>
    1c2a:	94 fe       	sbrs	r9, 4
    1c2c:	08 c0       	rjmp	.+16     	; 0x1c3e <vfprintf+0x562>
    1c2e:	06 60       	ori	r16, 0x06	; 6
    1c30:	06 c0       	rjmp	.+12     	; 0x1c3e <vfprintf+0x562>
    1c32:	28 e0       	ldi	r18, 0x08	; 8
    1c34:	30 e0       	ldi	r19, 0x00	; 0
    1c36:	05 c0       	rjmp	.+10     	; 0x1c42 <vfprintf+0x566>
    1c38:	20 e1       	ldi	r18, 0x10	; 16
    1c3a:	30 e0       	ldi	r19, 0x00	; 0
    1c3c:	02 c0       	rjmp	.+4      	; 0x1c42 <vfprintf+0x566>
    1c3e:	20 e1       	ldi	r18, 0x10	; 16
    1c40:	32 e0       	ldi	r19, 0x02	; 2
    1c42:	56 01       	movw	r10, r12
    1c44:	07 ff       	sbrs	r16, 7
    1c46:	09 c0       	rjmp	.+18     	; 0x1c5a <vfprintf+0x57e>
    1c48:	84 e0       	ldi	r24, 0x04	; 4
    1c4a:	a8 0e       	add	r10, r24
    1c4c:	b1 1c       	adc	r11, r1
    1c4e:	f6 01       	movw	r30, r12
    1c50:	60 81       	ld	r22, Z
    1c52:	71 81       	ldd	r23, Z+1	; 0x01
    1c54:	82 81       	ldd	r24, Z+2	; 0x02
    1c56:	93 81       	ldd	r25, Z+3	; 0x03
    1c58:	08 c0       	rjmp	.+16     	; 0x1c6a <vfprintf+0x58e>
    1c5a:	f2 e0       	ldi	r31, 0x02	; 2
    1c5c:	af 0e       	add	r10, r31
    1c5e:	b1 1c       	adc	r11, r1
    1c60:	f6 01       	movw	r30, r12
    1c62:	60 81       	ld	r22, Z
    1c64:	71 81       	ldd	r23, Z+1	; 0x01
    1c66:	80 e0       	ldi	r24, 0x00	; 0
    1c68:	90 e0       	ldi	r25, 0x00	; 0
    1c6a:	a3 01       	movw	r20, r6
    1c6c:	0e 94 98 10 	call	0x2130	; 0x2130 <__ultoa_invert>
    1c70:	c8 2e       	mov	r12, r24
    1c72:	c6 18       	sub	r12, r6
    1c74:	0f 77       	andi	r16, 0x7F	; 127
    1c76:	90 2e       	mov	r9, r16
    1c78:	96 fe       	sbrs	r9, 6
    1c7a:	0b c0       	rjmp	.+22     	; 0x1c92 <vfprintf+0x5b6>
    1c7c:	09 2d       	mov	r16, r9
    1c7e:	0e 7f       	andi	r16, 0xFE	; 254
    1c80:	c1 16       	cp	r12, r17
    1c82:	50 f4       	brcc	.+20     	; 0x1c98 <vfprintf+0x5bc>
    1c84:	94 fe       	sbrs	r9, 4
    1c86:	0a c0       	rjmp	.+20     	; 0x1c9c <vfprintf+0x5c0>
    1c88:	92 fc       	sbrc	r9, 2
    1c8a:	08 c0       	rjmp	.+16     	; 0x1c9c <vfprintf+0x5c0>
    1c8c:	09 2d       	mov	r16, r9
    1c8e:	0e 7e       	andi	r16, 0xEE	; 238
    1c90:	05 c0       	rjmp	.+10     	; 0x1c9c <vfprintf+0x5c0>
    1c92:	dc 2c       	mov	r13, r12
    1c94:	09 2d       	mov	r16, r9
    1c96:	03 c0       	rjmp	.+6      	; 0x1c9e <vfprintf+0x5c2>
    1c98:	dc 2c       	mov	r13, r12
    1c9a:	01 c0       	rjmp	.+2      	; 0x1c9e <vfprintf+0x5c2>
    1c9c:	d1 2e       	mov	r13, r17
    1c9e:	04 ff       	sbrs	r16, 4
    1ca0:	0d c0       	rjmp	.+26     	; 0x1cbc <vfprintf+0x5e0>
    1ca2:	fe 01       	movw	r30, r28
    1ca4:	ec 0d       	add	r30, r12
    1ca6:	f1 1d       	adc	r31, r1
    1ca8:	80 81       	ld	r24, Z
    1caa:	80 33       	cpi	r24, 0x30	; 48
    1cac:	11 f4       	brne	.+4      	; 0x1cb2 <vfprintf+0x5d6>
    1cae:	09 7e       	andi	r16, 0xE9	; 233
    1cb0:	09 c0       	rjmp	.+18     	; 0x1cc4 <vfprintf+0x5e8>
    1cb2:	02 ff       	sbrs	r16, 2
    1cb4:	06 c0       	rjmp	.+12     	; 0x1cc2 <vfprintf+0x5e6>
    1cb6:	d3 94       	inc	r13
    1cb8:	d3 94       	inc	r13
    1cba:	04 c0       	rjmp	.+8      	; 0x1cc4 <vfprintf+0x5e8>
    1cbc:	80 2f       	mov	r24, r16
    1cbe:	86 78       	andi	r24, 0x86	; 134
    1cc0:	09 f0       	breq	.+2      	; 0x1cc4 <vfprintf+0x5e8>
    1cc2:	d3 94       	inc	r13
    1cc4:	03 fd       	sbrc	r16, 3
    1cc6:	11 c0       	rjmp	.+34     	; 0x1cea <vfprintf+0x60e>
    1cc8:	00 ff       	sbrs	r16, 0
    1cca:	06 c0       	rjmp	.+12     	; 0x1cd8 <vfprintf+0x5fc>
    1ccc:	1c 2d       	mov	r17, r12
    1cce:	d5 14       	cp	r13, r5
    1cd0:	80 f4       	brcc	.+32     	; 0x1cf2 <vfprintf+0x616>
    1cd2:	15 0d       	add	r17, r5
    1cd4:	1d 19       	sub	r17, r13
    1cd6:	0d c0       	rjmp	.+26     	; 0x1cf2 <vfprintf+0x616>
    1cd8:	d5 14       	cp	r13, r5
    1cda:	58 f4       	brcc	.+22     	; 0x1cf2 <vfprintf+0x616>
    1cdc:	b7 01       	movw	r22, r14
    1cde:	80 e2       	ldi	r24, 0x20	; 32
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1ce6:	d3 94       	inc	r13
    1ce8:	f7 cf       	rjmp	.-18     	; 0x1cd8 <vfprintf+0x5fc>
    1cea:	d5 14       	cp	r13, r5
    1cec:	10 f4       	brcc	.+4      	; 0x1cf2 <vfprintf+0x616>
    1cee:	5d 18       	sub	r5, r13
    1cf0:	01 c0       	rjmp	.+2      	; 0x1cf4 <vfprintf+0x618>
    1cf2:	51 2c       	mov	r5, r1
    1cf4:	04 ff       	sbrs	r16, 4
    1cf6:	10 c0       	rjmp	.+32     	; 0x1d18 <vfprintf+0x63c>
    1cf8:	b7 01       	movw	r22, r14
    1cfa:	80 e3       	ldi	r24, 0x30	; 48
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1d02:	02 ff       	sbrs	r16, 2
    1d04:	17 c0       	rjmp	.+46     	; 0x1d34 <vfprintf+0x658>
    1d06:	01 fd       	sbrc	r16, 1
    1d08:	03 c0       	rjmp	.+6      	; 0x1d10 <vfprintf+0x634>
    1d0a:	88 e7       	ldi	r24, 0x78	; 120
    1d0c:	90 e0       	ldi	r25, 0x00	; 0
    1d0e:	02 c0       	rjmp	.+4      	; 0x1d14 <vfprintf+0x638>
    1d10:	88 e5       	ldi	r24, 0x58	; 88
    1d12:	90 e0       	ldi	r25, 0x00	; 0
    1d14:	b7 01       	movw	r22, r14
    1d16:	0c c0       	rjmp	.+24     	; 0x1d30 <vfprintf+0x654>
    1d18:	80 2f       	mov	r24, r16
    1d1a:	86 78       	andi	r24, 0x86	; 134
    1d1c:	59 f0       	breq	.+22     	; 0x1d34 <vfprintf+0x658>
    1d1e:	01 ff       	sbrs	r16, 1
    1d20:	02 c0       	rjmp	.+4      	; 0x1d26 <vfprintf+0x64a>
    1d22:	8b e2       	ldi	r24, 0x2B	; 43
    1d24:	01 c0       	rjmp	.+2      	; 0x1d28 <vfprintf+0x64c>
    1d26:	80 e2       	ldi	r24, 0x20	; 32
    1d28:	07 fd       	sbrc	r16, 7
    1d2a:	8d e2       	ldi	r24, 0x2D	; 45
    1d2c:	b7 01       	movw	r22, r14
    1d2e:	90 e0       	ldi	r25, 0x00	; 0
    1d30:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1d34:	c1 16       	cp	r12, r17
    1d36:	38 f4       	brcc	.+14     	; 0x1d46 <vfprintf+0x66a>
    1d38:	b7 01       	movw	r22, r14
    1d3a:	80 e3       	ldi	r24, 0x30	; 48
    1d3c:	90 e0       	ldi	r25, 0x00	; 0
    1d3e:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1d42:	11 50       	subi	r17, 0x01	; 1
    1d44:	f7 cf       	rjmp	.-18     	; 0x1d34 <vfprintf+0x658>
    1d46:	ca 94       	dec	r12
    1d48:	f3 01       	movw	r30, r6
    1d4a:	ec 0d       	add	r30, r12
    1d4c:	f1 1d       	adc	r31, r1
    1d4e:	80 81       	ld	r24, Z
    1d50:	b7 01       	movw	r22, r14
    1d52:	90 e0       	ldi	r25, 0x00	; 0
    1d54:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1d58:	c1 10       	cpse	r12, r1
    1d5a:	f5 cf       	rjmp	.-22     	; 0x1d46 <vfprintf+0x66a>
    1d5c:	15 c0       	rjmp	.+42     	; 0x1d88 <vfprintf+0x6ac>
    1d5e:	f4 e0       	ldi	r31, 0x04	; 4
    1d60:	f5 15       	cp	r31, r5
    1d62:	60 f5       	brcc	.+88     	; 0x1dbc <vfprintf+0x6e0>
    1d64:	84 e0       	ldi	r24, 0x04	; 4
    1d66:	58 1a       	sub	r5, r24
    1d68:	93 fe       	sbrs	r9, 3
    1d6a:	1f c0       	rjmp	.+62     	; 0x1daa <vfprintf+0x6ce>
    1d6c:	01 11       	cpse	r16, r1
    1d6e:	27 c0       	rjmp	.+78     	; 0x1dbe <vfprintf+0x6e2>
    1d70:	2c 85       	ldd	r18, Y+12	; 0x0c
    1d72:	23 ff       	sbrs	r18, 3
    1d74:	2a c0       	rjmp	.+84     	; 0x1dca <vfprintf+0x6ee>
    1d76:	04 e0       	ldi	r16, 0x04	; 4
    1d78:	12 e0       	ldi	r17, 0x02	; 2
    1d7a:	39 2d       	mov	r19, r9
    1d7c:	30 71       	andi	r19, 0x10	; 16
    1d7e:	93 2e       	mov	r9, r19
    1d80:	f8 01       	movw	r30, r16
    1d82:	84 91       	lpm	r24, Z
    1d84:	81 11       	cpse	r24, r1
    1d86:	24 c0       	rjmp	.+72     	; 0x1dd0 <vfprintf+0x6f4>
    1d88:	55 20       	and	r5, r5
    1d8a:	09 f4       	brne	.+2      	; 0x1d8e <vfprintf+0x6b2>
    1d8c:	e4 cc       	rjmp	.-1592   	; 0x1756 <vfprintf+0x7a>
    1d8e:	b7 01       	movw	r22, r14
    1d90:	80 e2       	ldi	r24, 0x20	; 32
    1d92:	90 e0       	ldi	r25, 0x00	; 0
    1d94:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1d98:	5a 94       	dec	r5
    1d9a:	f6 cf       	rjmp	.-20     	; 0x1d88 <vfprintf+0x6ac>
    1d9c:	f7 01       	movw	r30, r14
    1d9e:	86 81       	ldd	r24, Z+6	; 0x06
    1da0:	97 81       	ldd	r25, Z+7	; 0x07
    1da2:	26 c0       	rjmp	.+76     	; 0x1df0 <vfprintf+0x714>
    1da4:	8f ef       	ldi	r24, 0xFF	; 255
    1da6:	9f ef       	ldi	r25, 0xFF	; 255
    1da8:	23 c0       	rjmp	.+70     	; 0x1df0 <vfprintf+0x714>
    1daa:	b7 01       	movw	r22, r14
    1dac:	80 e2       	ldi	r24, 0x20	; 32
    1dae:	90 e0       	ldi	r25, 0x00	; 0
    1db0:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1db4:	5a 94       	dec	r5
    1db6:	51 10       	cpse	r5, r1
    1db8:	f8 cf       	rjmp	.-16     	; 0x1daa <vfprintf+0x6ce>
    1dba:	d8 cf       	rjmp	.-80     	; 0x1d6c <vfprintf+0x690>
    1dbc:	51 2c       	mov	r5, r1
    1dbe:	b7 01       	movw	r22, r14
    1dc0:	80 2f       	mov	r24, r16
    1dc2:	90 e0       	ldi	r25, 0x00	; 0
    1dc4:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1dc8:	d3 cf       	rjmp	.-90     	; 0x1d70 <vfprintf+0x694>
    1dca:	08 e0       	ldi	r16, 0x08	; 8
    1dcc:	12 e0       	ldi	r17, 0x02	; 2
    1dce:	d5 cf       	rjmp	.-86     	; 0x1d7a <vfprintf+0x69e>
    1dd0:	91 10       	cpse	r9, r1
    1dd2:	80 52       	subi	r24, 0x20	; 32
    1dd4:	b7 01       	movw	r22, r14
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	0e 94 18 10 	call	0x2030	; 0x2030 <fputc>
    1ddc:	0f 5f       	subi	r16, 0xFF	; 255
    1dde:	1f 4f       	sbci	r17, 0xFF	; 255
    1de0:	cf cf       	rjmp	.-98     	; 0x1d80 <vfprintf+0x6a4>
    1de2:	23 e0       	ldi	r18, 0x03	; 3
    1de4:	25 15       	cp	r18, r5
    1de6:	10 f4       	brcc	.+4      	; 0x1dec <vfprintf+0x710>
    1de8:	83 e0       	ldi	r24, 0x03	; 3
    1dea:	bd cf       	rjmp	.-134    	; 0x1d66 <vfprintf+0x68a>
    1dec:	51 2c       	mov	r5, r1
    1dee:	c0 cf       	rjmp	.-128    	; 0x1d70 <vfprintf+0x694>
    1df0:	60 96       	adiw	r28, 0x10	; 16
    1df2:	cd bf       	out	0x3d, r28	; 61
    1df4:	de bf       	out	0x3e, r29	; 62
    1df6:	df 91       	pop	r29
    1df8:	cf 91       	pop	r28
    1dfa:	1f 91       	pop	r17
    1dfc:	0f 91       	pop	r16
    1dfe:	ff 90       	pop	r15
    1e00:	ef 90       	pop	r14
    1e02:	df 90       	pop	r13
    1e04:	cf 90       	pop	r12
    1e06:	bf 90       	pop	r11
    1e08:	af 90       	pop	r10
    1e0a:	9f 90       	pop	r9
    1e0c:	8f 90       	pop	r8
    1e0e:	7f 90       	pop	r7
    1e10:	6f 90       	pop	r6
    1e12:	5f 90       	pop	r5
    1e14:	4f 90       	pop	r4
    1e16:	3f 90       	pop	r3
    1e18:	2f 90       	pop	r2
    1e1a:	08 95       	ret

00001e1c <__umulhisi3>:
    1e1c:	a2 9f       	mul	r26, r18
    1e1e:	b0 01       	movw	r22, r0
    1e20:	b3 9f       	mul	r27, r19
    1e22:	c0 01       	movw	r24, r0
    1e24:	a3 9f       	mul	r26, r19
    1e26:	70 0d       	add	r23, r0
    1e28:	81 1d       	adc	r24, r1
    1e2a:	11 24       	eor	r1, r1
    1e2c:	91 1d       	adc	r25, r1
    1e2e:	b2 9f       	mul	r27, r18
    1e30:	70 0d       	add	r23, r0
    1e32:	81 1d       	adc	r24, r1
    1e34:	11 24       	eor	r1, r1
    1e36:	91 1d       	adc	r25, r1
    1e38:	08 95       	ret

00001e3a <atof>:
    1e3a:	66 27       	eor	r22, r22
    1e3c:	77 27       	eor	r23, r23
    1e3e:	0c 94 f6 10 	jmp	0x21ec	; 0x21ec <strtod>

00001e42 <__ftoa_engine>:
    1e42:	28 30       	cpi	r18, 0x08	; 8
    1e44:	08 f0       	brcs	.+2      	; 0x1e48 <__ftoa_engine+0x6>
    1e46:	27 e0       	ldi	r18, 0x07	; 7
    1e48:	33 27       	eor	r19, r19
    1e4a:	da 01       	movw	r26, r20
    1e4c:	99 0f       	add	r25, r25
    1e4e:	31 1d       	adc	r19, r1
    1e50:	87 fd       	sbrc	r24, 7
    1e52:	91 60       	ori	r25, 0x01	; 1
    1e54:	00 96       	adiw	r24, 0x00	; 0
    1e56:	61 05       	cpc	r22, r1
    1e58:	71 05       	cpc	r23, r1
    1e5a:	39 f4       	brne	.+14     	; 0x1e6a <__ftoa_engine+0x28>
    1e5c:	32 60       	ori	r19, 0x02	; 2
    1e5e:	2e 5f       	subi	r18, 0xFE	; 254
    1e60:	3d 93       	st	X+, r19
    1e62:	30 e3       	ldi	r19, 0x30	; 48
    1e64:	2a 95       	dec	r18
    1e66:	e1 f7       	brne	.-8      	; 0x1e60 <__ftoa_engine+0x1e>
    1e68:	08 95       	ret
    1e6a:	9f 3f       	cpi	r25, 0xFF	; 255
    1e6c:	30 f0       	brcs	.+12     	; 0x1e7a <__ftoa_engine+0x38>
    1e6e:	80 38       	cpi	r24, 0x80	; 128
    1e70:	71 05       	cpc	r23, r1
    1e72:	61 05       	cpc	r22, r1
    1e74:	09 f0       	breq	.+2      	; 0x1e78 <__ftoa_engine+0x36>
    1e76:	3c 5f       	subi	r19, 0xFC	; 252
    1e78:	3c 5f       	subi	r19, 0xFC	; 252
    1e7a:	3d 93       	st	X+, r19
    1e7c:	91 30       	cpi	r25, 0x01	; 1
    1e7e:	08 f0       	brcs	.+2      	; 0x1e82 <__ftoa_engine+0x40>
    1e80:	80 68       	ori	r24, 0x80	; 128
    1e82:	91 1d       	adc	r25, r1
    1e84:	df 93       	push	r29
    1e86:	cf 93       	push	r28
    1e88:	1f 93       	push	r17
    1e8a:	0f 93       	push	r16
    1e8c:	ff 92       	push	r15
    1e8e:	ef 92       	push	r14
    1e90:	19 2f       	mov	r17, r25
    1e92:	98 7f       	andi	r25, 0xF8	; 248
    1e94:	96 95       	lsr	r25
    1e96:	e9 2f       	mov	r30, r25
    1e98:	96 95       	lsr	r25
    1e9a:	96 95       	lsr	r25
    1e9c:	e9 0f       	add	r30, r25
    1e9e:	ff 27       	eor	r31, r31
    1ea0:	ea 59       	subi	r30, 0x9A	; 154
    1ea2:	fd 4f       	sbci	r31, 0xFD	; 253
    1ea4:	99 27       	eor	r25, r25
    1ea6:	33 27       	eor	r19, r19
    1ea8:	ee 24       	eor	r14, r14
    1eaa:	ff 24       	eor	r15, r15
    1eac:	a7 01       	movw	r20, r14
    1eae:	e7 01       	movw	r28, r14
    1eb0:	05 90       	lpm	r0, Z+
    1eb2:	08 94       	sec
    1eb4:	07 94       	ror	r0
    1eb6:	28 f4       	brcc	.+10     	; 0x1ec2 <__ftoa_engine+0x80>
    1eb8:	36 0f       	add	r19, r22
    1eba:	e7 1e       	adc	r14, r23
    1ebc:	f8 1e       	adc	r15, r24
    1ebe:	49 1f       	adc	r20, r25
    1ec0:	51 1d       	adc	r21, r1
    1ec2:	66 0f       	add	r22, r22
    1ec4:	77 1f       	adc	r23, r23
    1ec6:	88 1f       	adc	r24, r24
    1ec8:	99 1f       	adc	r25, r25
    1eca:	06 94       	lsr	r0
    1ecc:	a1 f7       	brne	.-24     	; 0x1eb6 <__ftoa_engine+0x74>
    1ece:	05 90       	lpm	r0, Z+
    1ed0:	07 94       	ror	r0
    1ed2:	28 f4       	brcc	.+10     	; 0x1ede <__ftoa_engine+0x9c>
    1ed4:	e7 0e       	add	r14, r23
    1ed6:	f8 1e       	adc	r15, r24
    1ed8:	49 1f       	adc	r20, r25
    1eda:	56 1f       	adc	r21, r22
    1edc:	c1 1d       	adc	r28, r1
    1ede:	77 0f       	add	r23, r23
    1ee0:	88 1f       	adc	r24, r24
    1ee2:	99 1f       	adc	r25, r25
    1ee4:	66 1f       	adc	r22, r22
    1ee6:	06 94       	lsr	r0
    1ee8:	a1 f7       	brne	.-24     	; 0x1ed2 <__ftoa_engine+0x90>
    1eea:	05 90       	lpm	r0, Z+
    1eec:	07 94       	ror	r0
    1eee:	28 f4       	brcc	.+10     	; 0x1efa <__ftoa_engine+0xb8>
    1ef0:	f8 0e       	add	r15, r24
    1ef2:	49 1f       	adc	r20, r25
    1ef4:	56 1f       	adc	r21, r22
    1ef6:	c7 1f       	adc	r28, r23
    1ef8:	d1 1d       	adc	r29, r1
    1efa:	88 0f       	add	r24, r24
    1efc:	99 1f       	adc	r25, r25
    1efe:	66 1f       	adc	r22, r22
    1f00:	77 1f       	adc	r23, r23
    1f02:	06 94       	lsr	r0
    1f04:	a1 f7       	brne	.-24     	; 0x1eee <__ftoa_engine+0xac>
    1f06:	05 90       	lpm	r0, Z+
    1f08:	07 94       	ror	r0
    1f0a:	20 f4       	brcc	.+8      	; 0x1f14 <__ftoa_engine+0xd2>
    1f0c:	49 0f       	add	r20, r25
    1f0e:	56 1f       	adc	r21, r22
    1f10:	c7 1f       	adc	r28, r23
    1f12:	d8 1f       	adc	r29, r24
    1f14:	99 0f       	add	r25, r25
    1f16:	66 1f       	adc	r22, r22
    1f18:	77 1f       	adc	r23, r23
    1f1a:	88 1f       	adc	r24, r24
    1f1c:	06 94       	lsr	r0
    1f1e:	a9 f7       	brne	.-22     	; 0x1f0a <__ftoa_engine+0xc8>
    1f20:	84 91       	lpm	r24, Z
    1f22:	10 95       	com	r17
    1f24:	17 70       	andi	r17, 0x07	; 7
    1f26:	41 f0       	breq	.+16     	; 0x1f38 <__ftoa_engine+0xf6>
    1f28:	d6 95       	lsr	r29
    1f2a:	c7 95       	ror	r28
    1f2c:	57 95       	ror	r21
    1f2e:	47 95       	ror	r20
    1f30:	f7 94       	ror	r15
    1f32:	e7 94       	ror	r14
    1f34:	1a 95       	dec	r17
    1f36:	c1 f7       	brne	.-16     	; 0x1f28 <__ftoa_engine+0xe6>
    1f38:	ec e0       	ldi	r30, 0x0C	; 12
    1f3a:	f2 e0       	ldi	r31, 0x02	; 2
    1f3c:	68 94       	set
    1f3e:	15 90       	lpm	r1, Z+
    1f40:	15 91       	lpm	r17, Z+
    1f42:	35 91       	lpm	r19, Z+
    1f44:	65 91       	lpm	r22, Z+
    1f46:	95 91       	lpm	r25, Z+
    1f48:	05 90       	lpm	r0, Z+
    1f4a:	7f e2       	ldi	r23, 0x2F	; 47
    1f4c:	73 95       	inc	r23
    1f4e:	e1 18       	sub	r14, r1
    1f50:	f1 0a       	sbc	r15, r17
    1f52:	43 0b       	sbc	r20, r19
    1f54:	56 0b       	sbc	r21, r22
    1f56:	c9 0b       	sbc	r28, r25
    1f58:	d0 09       	sbc	r29, r0
    1f5a:	c0 f7       	brcc	.-16     	; 0x1f4c <__ftoa_engine+0x10a>
    1f5c:	e1 0c       	add	r14, r1
    1f5e:	f1 1e       	adc	r15, r17
    1f60:	43 1f       	adc	r20, r19
    1f62:	56 1f       	adc	r21, r22
    1f64:	c9 1f       	adc	r28, r25
    1f66:	d0 1d       	adc	r29, r0
    1f68:	7e f4       	brtc	.+30     	; 0x1f88 <__ftoa_engine+0x146>
    1f6a:	70 33       	cpi	r23, 0x30	; 48
    1f6c:	11 f4       	brne	.+4      	; 0x1f72 <__ftoa_engine+0x130>
    1f6e:	8a 95       	dec	r24
    1f70:	e6 cf       	rjmp	.-52     	; 0x1f3e <__ftoa_engine+0xfc>
    1f72:	e8 94       	clt
    1f74:	01 50       	subi	r16, 0x01	; 1
    1f76:	30 f0       	brcs	.+12     	; 0x1f84 <__ftoa_engine+0x142>
    1f78:	08 0f       	add	r16, r24
    1f7a:	0a f4       	brpl	.+2      	; 0x1f7e <__ftoa_engine+0x13c>
    1f7c:	00 27       	eor	r16, r16
    1f7e:	02 17       	cp	r16, r18
    1f80:	08 f4       	brcc	.+2      	; 0x1f84 <__ftoa_engine+0x142>
    1f82:	20 2f       	mov	r18, r16
    1f84:	23 95       	inc	r18
    1f86:	02 2f       	mov	r16, r18
    1f88:	7a 33       	cpi	r23, 0x3A	; 58
    1f8a:	28 f0       	brcs	.+10     	; 0x1f96 <__ftoa_engine+0x154>
    1f8c:	79 e3       	ldi	r23, 0x39	; 57
    1f8e:	7d 93       	st	X+, r23
    1f90:	2a 95       	dec	r18
    1f92:	e9 f7       	brne	.-6      	; 0x1f8e <__ftoa_engine+0x14c>
    1f94:	10 c0       	rjmp	.+32     	; 0x1fb6 <__ftoa_engine+0x174>
    1f96:	7d 93       	st	X+, r23
    1f98:	2a 95       	dec	r18
    1f9a:	89 f6       	brne	.-94     	; 0x1f3e <__ftoa_engine+0xfc>
    1f9c:	06 94       	lsr	r0
    1f9e:	97 95       	ror	r25
    1fa0:	67 95       	ror	r22
    1fa2:	37 95       	ror	r19
    1fa4:	17 95       	ror	r17
    1fa6:	17 94       	ror	r1
    1fa8:	e1 18       	sub	r14, r1
    1faa:	f1 0a       	sbc	r15, r17
    1fac:	43 0b       	sbc	r20, r19
    1fae:	56 0b       	sbc	r21, r22
    1fb0:	c9 0b       	sbc	r28, r25
    1fb2:	d0 09       	sbc	r29, r0
    1fb4:	98 f0       	brcs	.+38     	; 0x1fdc <__ftoa_engine+0x19a>
    1fb6:	23 95       	inc	r18
    1fb8:	7e 91       	ld	r23, -X
    1fba:	73 95       	inc	r23
    1fbc:	7a 33       	cpi	r23, 0x3A	; 58
    1fbe:	08 f0       	brcs	.+2      	; 0x1fc2 <__ftoa_engine+0x180>
    1fc0:	70 e3       	ldi	r23, 0x30	; 48
    1fc2:	7c 93       	st	X, r23
    1fc4:	20 13       	cpse	r18, r16
    1fc6:	b8 f7       	brcc	.-18     	; 0x1fb6 <__ftoa_engine+0x174>
    1fc8:	7e 91       	ld	r23, -X
    1fca:	70 61       	ori	r23, 0x10	; 16
    1fcc:	7d 93       	st	X+, r23
    1fce:	30 f0       	brcs	.+12     	; 0x1fdc <__ftoa_engine+0x19a>
    1fd0:	83 95       	inc	r24
    1fd2:	71 e3       	ldi	r23, 0x31	; 49
    1fd4:	7d 93       	st	X+, r23
    1fd6:	70 e3       	ldi	r23, 0x30	; 48
    1fd8:	2a 95       	dec	r18
    1fda:	e1 f7       	brne	.-8      	; 0x1fd4 <__ftoa_engine+0x192>
    1fdc:	11 24       	eor	r1, r1
    1fde:	ef 90       	pop	r14
    1fe0:	ff 90       	pop	r15
    1fe2:	0f 91       	pop	r16
    1fe4:	1f 91       	pop	r17
    1fe6:	cf 91       	pop	r28
    1fe8:	df 91       	pop	r29
    1fea:	99 27       	eor	r25, r25
    1fec:	87 fd       	sbrc	r24, 7
    1fee:	90 95       	com	r25
    1ff0:	08 95       	ret

00001ff2 <strnlen_P>:
    1ff2:	fc 01       	movw	r30, r24
    1ff4:	05 90       	lpm	r0, Z+
    1ff6:	61 50       	subi	r22, 0x01	; 1
    1ff8:	70 40       	sbci	r23, 0x00	; 0
    1ffa:	01 10       	cpse	r0, r1
    1ffc:	d8 f7       	brcc	.-10     	; 0x1ff4 <strnlen_P+0x2>
    1ffe:	80 95       	com	r24
    2000:	90 95       	com	r25
    2002:	8e 0f       	add	r24, r30
    2004:	9f 1f       	adc	r25, r31
    2006:	08 95       	ret

00002008 <memcpy>:
    2008:	fb 01       	movw	r30, r22
    200a:	dc 01       	movw	r26, r24
    200c:	02 c0       	rjmp	.+4      	; 0x2012 <memcpy+0xa>
    200e:	01 90       	ld	r0, Z+
    2010:	0d 92       	st	X+, r0
    2012:	41 50       	subi	r20, 0x01	; 1
    2014:	50 40       	sbci	r21, 0x00	; 0
    2016:	d8 f7       	brcc	.-10     	; 0x200e <memcpy+0x6>
    2018:	08 95       	ret

0000201a <strnlen>:
    201a:	fc 01       	movw	r30, r24
    201c:	61 50       	subi	r22, 0x01	; 1
    201e:	70 40       	sbci	r23, 0x00	; 0
    2020:	01 90       	ld	r0, Z+
    2022:	01 10       	cpse	r0, r1
    2024:	d8 f7       	brcc	.-10     	; 0x201c <strnlen+0x2>
    2026:	80 95       	com	r24
    2028:	90 95       	com	r25
    202a:	8e 0f       	add	r24, r30
    202c:	9f 1f       	adc	r25, r31
    202e:	08 95       	ret

00002030 <fputc>:
    2030:	0f 93       	push	r16
    2032:	1f 93       	push	r17
    2034:	cf 93       	push	r28
    2036:	df 93       	push	r29
    2038:	fb 01       	movw	r30, r22
    203a:	23 81       	ldd	r18, Z+3	; 0x03
    203c:	21 fd       	sbrc	r18, 1
    203e:	03 c0       	rjmp	.+6      	; 0x2046 <fputc+0x16>
    2040:	8f ef       	ldi	r24, 0xFF	; 255
    2042:	9f ef       	ldi	r25, 0xFF	; 255
    2044:	2c c0       	rjmp	.+88     	; 0x209e <fputc+0x6e>
    2046:	22 ff       	sbrs	r18, 2
    2048:	16 c0       	rjmp	.+44     	; 0x2076 <fputc+0x46>
    204a:	46 81       	ldd	r20, Z+6	; 0x06
    204c:	57 81       	ldd	r21, Z+7	; 0x07
    204e:	24 81       	ldd	r18, Z+4	; 0x04
    2050:	35 81       	ldd	r19, Z+5	; 0x05
    2052:	42 17       	cp	r20, r18
    2054:	53 07       	cpc	r21, r19
    2056:	44 f4       	brge	.+16     	; 0x2068 <fputc+0x38>
    2058:	a0 81       	ld	r26, Z
    205a:	b1 81       	ldd	r27, Z+1	; 0x01
    205c:	9d 01       	movw	r18, r26
    205e:	2f 5f       	subi	r18, 0xFF	; 255
    2060:	3f 4f       	sbci	r19, 0xFF	; 255
    2062:	20 83       	st	Z, r18
    2064:	31 83       	std	Z+1, r19	; 0x01
    2066:	8c 93       	st	X, r24
    2068:	26 81       	ldd	r18, Z+6	; 0x06
    206a:	37 81       	ldd	r19, Z+7	; 0x07
    206c:	2f 5f       	subi	r18, 0xFF	; 255
    206e:	3f 4f       	sbci	r19, 0xFF	; 255
    2070:	26 83       	std	Z+6, r18	; 0x06
    2072:	37 83       	std	Z+7, r19	; 0x07
    2074:	14 c0       	rjmp	.+40     	; 0x209e <fputc+0x6e>
    2076:	8b 01       	movw	r16, r22
    2078:	ec 01       	movw	r28, r24
    207a:	fb 01       	movw	r30, r22
    207c:	00 84       	ldd	r0, Z+8	; 0x08
    207e:	f1 85       	ldd	r31, Z+9	; 0x09
    2080:	e0 2d       	mov	r30, r0
    2082:	19 95       	eicall
    2084:	89 2b       	or	r24, r25
    2086:	e1 f6       	brne	.-72     	; 0x2040 <fputc+0x10>
    2088:	d8 01       	movw	r26, r16
    208a:	16 96       	adiw	r26, 0x06	; 6
    208c:	8d 91       	ld	r24, X+
    208e:	9c 91       	ld	r25, X
    2090:	17 97       	sbiw	r26, 0x07	; 7
    2092:	01 96       	adiw	r24, 0x01	; 1
    2094:	16 96       	adiw	r26, 0x06	; 6
    2096:	8d 93       	st	X+, r24
    2098:	9c 93       	st	X, r25
    209a:	17 97       	sbiw	r26, 0x07	; 7
    209c:	ce 01       	movw	r24, r28
    209e:	df 91       	pop	r29
    20a0:	cf 91       	pop	r28
    20a2:	1f 91       	pop	r17
    20a4:	0f 91       	pop	r16
    20a6:	08 95       	ret

000020a8 <printf>:
    20a8:	cf 93       	push	r28
    20aa:	df 93       	push	r29
    20ac:	cd b7       	in	r28, 0x3d	; 61
    20ae:	de b7       	in	r29, 0x3e	; 62
    20b0:	ae 01       	movw	r20, r28
    20b2:	4a 5f       	subi	r20, 0xFA	; 250
    20b4:	5f 4f       	sbci	r21, 0xFF	; 255
    20b6:	fa 01       	movw	r30, r20
    20b8:	61 91       	ld	r22, Z+
    20ba:	71 91       	ld	r23, Z+
    20bc:	af 01       	movw	r20, r30
    20be:	80 91 d7 21 	lds	r24, 0x21D7	; 0x8021d7 <__iob+0x2>
    20c2:	90 91 d8 21 	lds	r25, 0x21D8	; 0x8021d8 <__iob+0x3>
    20c6:	0e 94 6e 0b 	call	0x16dc	; 0x16dc <vfprintf>
    20ca:	df 91       	pop	r29
    20cc:	cf 91       	pop	r28
    20ce:	08 95       	ret

000020d0 <puts>:
    20d0:	0f 93       	push	r16
    20d2:	1f 93       	push	r17
    20d4:	cf 93       	push	r28
    20d6:	df 93       	push	r29
    20d8:	e0 91 d7 21 	lds	r30, 0x21D7	; 0x8021d7 <__iob+0x2>
    20dc:	f0 91 d8 21 	lds	r31, 0x21D8	; 0x8021d8 <__iob+0x3>
    20e0:	23 81       	ldd	r18, Z+3	; 0x03
    20e2:	21 ff       	sbrs	r18, 1
    20e4:	1b c0       	rjmp	.+54     	; 0x211c <puts+0x4c>
    20e6:	8c 01       	movw	r16, r24
    20e8:	d0 e0       	ldi	r29, 0x00	; 0
    20ea:	c0 e0       	ldi	r28, 0x00	; 0
    20ec:	f8 01       	movw	r30, r16
    20ee:	81 91       	ld	r24, Z+
    20f0:	8f 01       	movw	r16, r30
    20f2:	60 91 d7 21 	lds	r22, 0x21D7	; 0x8021d7 <__iob+0x2>
    20f6:	70 91 d8 21 	lds	r23, 0x21D8	; 0x8021d8 <__iob+0x3>
    20fa:	db 01       	movw	r26, r22
    20fc:	18 96       	adiw	r26, 0x08	; 8
    20fe:	ed 91       	ld	r30, X+
    2100:	fc 91       	ld	r31, X
    2102:	19 97       	sbiw	r26, 0x09	; 9
    2104:	88 23       	and	r24, r24
    2106:	31 f0       	breq	.+12     	; 0x2114 <puts+0x44>
    2108:	19 95       	eicall
    210a:	89 2b       	or	r24, r25
    210c:	79 f3       	breq	.-34     	; 0x20ec <puts+0x1c>
    210e:	df ef       	ldi	r29, 0xFF	; 255
    2110:	cf ef       	ldi	r28, 0xFF	; 255
    2112:	ec cf       	rjmp	.-40     	; 0x20ec <puts+0x1c>
    2114:	8a e0       	ldi	r24, 0x0A	; 10
    2116:	19 95       	eicall
    2118:	89 2b       	or	r24, r25
    211a:	19 f0       	breq	.+6      	; 0x2122 <puts+0x52>
    211c:	8f ef       	ldi	r24, 0xFF	; 255
    211e:	9f ef       	ldi	r25, 0xFF	; 255
    2120:	02 c0       	rjmp	.+4      	; 0x2126 <puts+0x56>
    2122:	8d 2f       	mov	r24, r29
    2124:	9c 2f       	mov	r25, r28
    2126:	df 91       	pop	r29
    2128:	cf 91       	pop	r28
    212a:	1f 91       	pop	r17
    212c:	0f 91       	pop	r16
    212e:	08 95       	ret

00002130 <__ultoa_invert>:
    2130:	fa 01       	movw	r30, r20
    2132:	aa 27       	eor	r26, r26
    2134:	28 30       	cpi	r18, 0x08	; 8
    2136:	51 f1       	breq	.+84     	; 0x218c <__ultoa_invert+0x5c>
    2138:	20 31       	cpi	r18, 0x10	; 16
    213a:	81 f1       	breq	.+96     	; 0x219c <__ultoa_invert+0x6c>
    213c:	e8 94       	clt
    213e:	6f 93       	push	r22
    2140:	6e 7f       	andi	r22, 0xFE	; 254
    2142:	6e 5f       	subi	r22, 0xFE	; 254
    2144:	7f 4f       	sbci	r23, 0xFF	; 255
    2146:	8f 4f       	sbci	r24, 0xFF	; 255
    2148:	9f 4f       	sbci	r25, 0xFF	; 255
    214a:	af 4f       	sbci	r26, 0xFF	; 255
    214c:	b1 e0       	ldi	r27, 0x01	; 1
    214e:	3e d0       	rcall	.+124    	; 0x21cc <__ultoa_invert+0x9c>
    2150:	b4 e0       	ldi	r27, 0x04	; 4
    2152:	3c d0       	rcall	.+120    	; 0x21cc <__ultoa_invert+0x9c>
    2154:	67 0f       	add	r22, r23
    2156:	78 1f       	adc	r23, r24
    2158:	89 1f       	adc	r24, r25
    215a:	9a 1f       	adc	r25, r26
    215c:	a1 1d       	adc	r26, r1
    215e:	68 0f       	add	r22, r24
    2160:	79 1f       	adc	r23, r25
    2162:	8a 1f       	adc	r24, r26
    2164:	91 1d       	adc	r25, r1
    2166:	a1 1d       	adc	r26, r1
    2168:	6a 0f       	add	r22, r26
    216a:	71 1d       	adc	r23, r1
    216c:	81 1d       	adc	r24, r1
    216e:	91 1d       	adc	r25, r1
    2170:	a1 1d       	adc	r26, r1
    2172:	20 d0       	rcall	.+64     	; 0x21b4 <__ultoa_invert+0x84>
    2174:	09 f4       	brne	.+2      	; 0x2178 <__ultoa_invert+0x48>
    2176:	68 94       	set
    2178:	3f 91       	pop	r19
    217a:	2a e0       	ldi	r18, 0x0A	; 10
    217c:	26 9f       	mul	r18, r22
    217e:	11 24       	eor	r1, r1
    2180:	30 19       	sub	r19, r0
    2182:	30 5d       	subi	r19, 0xD0	; 208
    2184:	31 93       	st	Z+, r19
    2186:	de f6       	brtc	.-74     	; 0x213e <__ultoa_invert+0xe>
    2188:	cf 01       	movw	r24, r30
    218a:	08 95       	ret
    218c:	46 2f       	mov	r20, r22
    218e:	47 70       	andi	r20, 0x07	; 7
    2190:	40 5d       	subi	r20, 0xD0	; 208
    2192:	41 93       	st	Z+, r20
    2194:	b3 e0       	ldi	r27, 0x03	; 3
    2196:	0f d0       	rcall	.+30     	; 0x21b6 <__ultoa_invert+0x86>
    2198:	c9 f7       	brne	.-14     	; 0x218c <__ultoa_invert+0x5c>
    219a:	f6 cf       	rjmp	.-20     	; 0x2188 <__ultoa_invert+0x58>
    219c:	46 2f       	mov	r20, r22
    219e:	4f 70       	andi	r20, 0x0F	; 15
    21a0:	40 5d       	subi	r20, 0xD0	; 208
    21a2:	4a 33       	cpi	r20, 0x3A	; 58
    21a4:	18 f0       	brcs	.+6      	; 0x21ac <__ultoa_invert+0x7c>
    21a6:	49 5d       	subi	r20, 0xD9	; 217
    21a8:	31 fd       	sbrc	r19, 1
    21aa:	40 52       	subi	r20, 0x20	; 32
    21ac:	41 93       	st	Z+, r20
    21ae:	02 d0       	rcall	.+4      	; 0x21b4 <__ultoa_invert+0x84>
    21b0:	a9 f7       	brne	.-22     	; 0x219c <__ultoa_invert+0x6c>
    21b2:	ea cf       	rjmp	.-44     	; 0x2188 <__ultoa_invert+0x58>
    21b4:	b4 e0       	ldi	r27, 0x04	; 4
    21b6:	a6 95       	lsr	r26
    21b8:	97 95       	ror	r25
    21ba:	87 95       	ror	r24
    21bc:	77 95       	ror	r23
    21be:	67 95       	ror	r22
    21c0:	ba 95       	dec	r27
    21c2:	c9 f7       	brne	.-14     	; 0x21b6 <__ultoa_invert+0x86>
    21c4:	00 97       	sbiw	r24, 0x00	; 0
    21c6:	61 05       	cpc	r22, r1
    21c8:	71 05       	cpc	r23, r1
    21ca:	08 95       	ret
    21cc:	9b 01       	movw	r18, r22
    21ce:	ac 01       	movw	r20, r24
    21d0:	0a 2e       	mov	r0, r26
    21d2:	06 94       	lsr	r0
    21d4:	57 95       	ror	r21
    21d6:	47 95       	ror	r20
    21d8:	37 95       	ror	r19
    21da:	27 95       	ror	r18
    21dc:	ba 95       	dec	r27
    21de:	c9 f7       	brne	.-14     	; 0x21d2 <__ultoa_invert+0xa2>
    21e0:	62 0f       	add	r22, r18
    21e2:	73 1f       	adc	r23, r19
    21e4:	84 1f       	adc	r24, r20
    21e6:	95 1f       	adc	r25, r21
    21e8:	a0 1d       	adc	r26, r0
    21ea:	08 95       	ret

000021ec <strtod>:
    21ec:	8f 92       	push	r8
    21ee:	9f 92       	push	r9
    21f0:	af 92       	push	r10
    21f2:	bf 92       	push	r11
    21f4:	cf 92       	push	r12
    21f6:	df 92       	push	r13
    21f8:	ef 92       	push	r14
    21fa:	ff 92       	push	r15
    21fc:	0f 93       	push	r16
    21fe:	1f 93       	push	r17
    2200:	cf 93       	push	r28
    2202:	df 93       	push	r29
    2204:	ec 01       	movw	r28, r24
    2206:	6b 01       	movw	r12, r22
    2208:	61 15       	cp	r22, r1
    220a:	71 05       	cpc	r23, r1
    220c:	19 f0       	breq	.+6      	; 0x2214 <strtod+0x28>
    220e:	fb 01       	movw	r30, r22
    2210:	80 83       	st	Z, r24
    2212:	91 83       	std	Z+1, r25	; 0x01
    2214:	7e 01       	movw	r14, r28
    2216:	ff ef       	ldi	r31, 0xFF	; 255
    2218:	ef 1a       	sub	r14, r31
    221a:	ff 0a       	sbc	r15, r31
    221c:	08 81       	ld	r16, Y
    221e:	80 2f       	mov	r24, r16
    2220:	90 e0       	ldi	r25, 0x00	; 0
    2222:	0e 94 52 12 	call	0x24a4	; 0x24a4 <isspace>
    2226:	89 2b       	or	r24, r25
    2228:	11 f0       	breq	.+4      	; 0x222e <strtod+0x42>
    222a:	e7 01       	movw	r28, r14
    222c:	f3 cf       	rjmp	.-26     	; 0x2214 <strtod+0x28>
    222e:	0d 32       	cpi	r16, 0x2D	; 45
    2230:	39 f4       	brne	.+14     	; 0x2240 <strtod+0x54>
    2232:	7e 01       	movw	r14, r28
    2234:	82 e0       	ldi	r24, 0x02	; 2
    2236:	e8 0e       	add	r14, r24
    2238:	f1 1c       	adc	r15, r1
    223a:	09 81       	ldd	r16, Y+1	; 0x01
    223c:	11 e0       	ldi	r17, 0x01	; 1
    223e:	08 c0       	rjmp	.+16     	; 0x2250 <strtod+0x64>
    2240:	0b 32       	cpi	r16, 0x2B	; 43
    2242:	29 f4       	brne	.+10     	; 0x224e <strtod+0x62>
    2244:	7e 01       	movw	r14, r28
    2246:	92 e0       	ldi	r25, 0x02	; 2
    2248:	e9 0e       	add	r14, r25
    224a:	f1 1c       	adc	r15, r1
    224c:	09 81       	ldd	r16, Y+1	; 0x01
    224e:	10 e0       	ldi	r17, 0x00	; 0
    2250:	e7 01       	movw	r28, r14
    2252:	21 97       	sbiw	r28, 0x01	; 1
    2254:	43 e0       	ldi	r20, 0x03	; 3
    2256:	50 e0       	ldi	r21, 0x00	; 0
    2258:	6e e0       	ldi	r22, 0x0E	; 14
    225a:	73 e0       	ldi	r23, 0x03	; 3
    225c:	ce 01       	movw	r24, r28
    225e:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <strncasecmp_P>
    2262:	89 2b       	or	r24, r25
    2264:	c1 f4       	brne	.+48     	; 0x2296 <strtod+0xaa>
    2266:	23 96       	adiw	r28, 0x03	; 3
    2268:	45 e0       	ldi	r20, 0x05	; 5
    226a:	50 e0       	ldi	r21, 0x00	; 0
    226c:	69 e0       	ldi	r22, 0x09	; 9
    226e:	73 e0       	ldi	r23, 0x03	; 3
    2270:	ce 01       	movw	r24, r28
    2272:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <strncasecmp_P>
    2276:	89 2b       	or	r24, r25
    2278:	09 f4       	brne	.+2      	; 0x227c <strtod+0x90>
    227a:	25 96       	adiw	r28, 0x05	; 5
    227c:	c1 14       	cp	r12, r1
    227e:	d1 04       	cpc	r13, r1
    2280:	19 f0       	breq	.+6      	; 0x2288 <strtod+0x9c>
    2282:	f6 01       	movw	r30, r12
    2284:	c0 83       	st	Z, r28
    2286:	d1 83       	std	Z+1, r29	; 0x01
    2288:	11 11       	cpse	r17, r1
    228a:	f6 c0       	rjmp	.+492    	; 0x2478 <strtod+0x28c>
    228c:	60 e0       	ldi	r22, 0x00	; 0
    228e:	70 e0       	ldi	r23, 0x00	; 0
    2290:	80 e8       	ldi	r24, 0x80	; 128
    2292:	9f e7       	ldi	r25, 0x7F	; 127
    2294:	fa c0       	rjmp	.+500    	; 0x248a <strtod+0x29e>
    2296:	43 e0       	ldi	r20, 0x03	; 3
    2298:	50 e0       	ldi	r21, 0x00	; 0
    229a:	66 e0       	ldi	r22, 0x06	; 6
    229c:	73 e0       	ldi	r23, 0x03	; 3
    229e:	ce 01       	movw	r24, r28
    22a0:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <strncasecmp_P>
    22a4:	89 2b       	or	r24, r25
    22a6:	59 f4       	brne	.+22     	; 0x22be <strtod+0xd2>
    22a8:	c1 14       	cp	r12, r1
    22aa:	d1 04       	cpc	r13, r1
    22ac:	09 f4       	brne	.+2      	; 0x22b0 <strtod+0xc4>
    22ae:	e9 c0       	rjmp	.+466    	; 0x2482 <strtod+0x296>
    22b0:	f2 e0       	ldi	r31, 0x02	; 2
    22b2:	ef 0e       	add	r14, r31
    22b4:	f1 1c       	adc	r15, r1
    22b6:	f6 01       	movw	r30, r12
    22b8:	e0 82       	st	Z, r14
    22ba:	f1 82       	std	Z+1, r15	; 0x01
    22bc:	e2 c0       	rjmp	.+452    	; 0x2482 <strtod+0x296>
    22be:	20 e0       	ldi	r18, 0x00	; 0
    22c0:	30 e0       	ldi	r19, 0x00	; 0
    22c2:	a9 01       	movw	r20, r18
    22c4:	c0 e0       	ldi	r28, 0x00	; 0
    22c6:	d0 e0       	ldi	r29, 0x00	; 0
    22c8:	f7 01       	movw	r30, r14
    22ca:	60 ed       	ldi	r22, 0xD0	; 208
    22cc:	a6 2e       	mov	r10, r22
    22ce:	a0 0e       	add	r10, r16
    22d0:	89 e0       	ldi	r24, 0x09	; 9
    22d2:	8a 15       	cp	r24, r10
    22d4:	30 f1       	brcs	.+76     	; 0x2322 <strtod+0x136>
    22d6:	91 2f       	mov	r25, r17
    22d8:	92 60       	ori	r25, 0x02	; 2
    22da:	b9 2e       	mov	r11, r25
    22dc:	81 2f       	mov	r24, r17
    22de:	88 70       	andi	r24, 0x08	; 8
    22e0:	12 ff       	sbrs	r17, 2
    22e2:	04 c0       	rjmp	.+8      	; 0x22ec <strtod+0x100>
    22e4:	81 11       	cpse	r24, r1
    22e6:	24 c0       	rjmp	.+72     	; 0x2330 <strtod+0x144>
    22e8:	21 96       	adiw	r28, 0x01	; 1
    22ea:	22 c0       	rjmp	.+68     	; 0x2330 <strtod+0x144>
    22ec:	81 11       	cpse	r24, r1
    22ee:	21 97       	sbiw	r28, 0x01	; 1
    22f0:	a5 e0       	ldi	r26, 0x05	; 5
    22f2:	b0 e0       	ldi	r27, 0x00	; 0
    22f4:	0e 94 76 12 	call	0x24ec	; 0x24ec <__muluhisi3>
    22f8:	dc 01       	movw	r26, r24
    22fa:	cb 01       	movw	r24, r22
    22fc:	88 0f       	add	r24, r24
    22fe:	99 1f       	adc	r25, r25
    2300:	aa 1f       	adc	r26, r26
    2302:	bb 1f       	adc	r27, r27
    2304:	9c 01       	movw	r18, r24
    2306:	ad 01       	movw	r20, r26
    2308:	2a 0d       	add	r18, r10
    230a:	31 1d       	adc	r19, r1
    230c:	41 1d       	adc	r20, r1
    230e:	51 1d       	adc	r21, r1
    2310:	28 39       	cpi	r18, 0x98	; 152
    2312:	89 e9       	ldi	r24, 0x99	; 153
    2314:	38 07       	cpc	r19, r24
    2316:	48 07       	cpc	r20, r24
    2318:	89 e1       	ldi	r24, 0x19	; 25
    231a:	58 07       	cpc	r21, r24
    231c:	48 f0       	brcs	.+18     	; 0x2330 <strtod+0x144>
    231e:	16 60       	ori	r17, 0x06	; 6
    2320:	06 c0       	rjmp	.+12     	; 0x232e <strtod+0x142>
    2322:	9e ef       	ldi	r25, 0xFE	; 254
    2324:	a9 12       	cpse	r10, r25
    2326:	0a c0       	rjmp	.+20     	; 0x233c <strtod+0x150>
    2328:	13 fd       	sbrc	r17, 3
    232a:	40 c0       	rjmp	.+128    	; 0x23ac <strtod+0x1c0>
    232c:	18 60       	ori	r17, 0x08	; 8
    232e:	b1 2e       	mov	r11, r17
    2330:	8f ef       	ldi	r24, 0xFF	; 255
    2332:	e8 1a       	sub	r14, r24
    2334:	f8 0a       	sbc	r15, r24
    2336:	00 81       	ld	r16, Z
    2338:	1b 2d       	mov	r17, r11
    233a:	c6 cf       	rjmp	.-116    	; 0x22c8 <strtod+0xdc>
    233c:	80 2f       	mov	r24, r16
    233e:	8f 7d       	andi	r24, 0xDF	; 223
    2340:	85 34       	cpi	r24, 0x45	; 69
    2342:	a1 f5       	brne	.+104    	; 0x23ac <strtod+0x1c0>
    2344:	80 81       	ld	r24, Z
    2346:	8d 32       	cpi	r24, 0x2D	; 45
    2348:	11 f4       	brne	.+4      	; 0x234e <strtod+0x162>
    234a:	10 61       	ori	r17, 0x10	; 16
    234c:	06 c0       	rjmp	.+12     	; 0x235a <strtod+0x16e>
    234e:	8b 32       	cpi	r24, 0x2B	; 43
    2350:	21 f0       	breq	.+8      	; 0x235a <strtod+0x16e>
    2352:	31 96       	adiw	r30, 0x01	; 1
    2354:	61 e0       	ldi	r22, 0x01	; 1
    2356:	70 e0       	ldi	r23, 0x00	; 0
    2358:	04 c0       	rjmp	.+8      	; 0x2362 <strtod+0x176>
    235a:	81 81       	ldd	r24, Z+1	; 0x01
    235c:	32 96       	adiw	r30, 0x02	; 2
    235e:	62 e0       	ldi	r22, 0x02	; 2
    2360:	70 e0       	ldi	r23, 0x00	; 0
    2362:	80 53       	subi	r24, 0x30	; 48
    2364:	8a 30       	cpi	r24, 0x0A	; 10
    2366:	18 f0       	brcs	.+6      	; 0x236e <strtod+0x182>
    2368:	e6 1b       	sub	r30, r22
    236a:	f7 0b       	sbc	r31, r23
    236c:	1f c0       	rjmp	.+62     	; 0x23ac <strtod+0x1c0>
    236e:	60 e0       	ldi	r22, 0x00	; 0
    2370:	70 e0       	ldi	r23, 0x00	; 0
    2372:	60 38       	cpi	r22, 0x80	; 128
    2374:	9c e0       	ldi	r25, 0x0C	; 12
    2376:	79 07       	cpc	r23, r25
    2378:	5c f4       	brge	.+22     	; 0x2390 <strtod+0x1a4>
    237a:	db 01       	movw	r26, r22
    237c:	aa 0f       	add	r26, r26
    237e:	bb 1f       	adc	r27, r27
    2380:	aa 0f       	add	r26, r26
    2382:	bb 1f       	adc	r27, r27
    2384:	6a 0f       	add	r22, r26
    2386:	7b 1f       	adc	r23, r27
    2388:	66 0f       	add	r22, r22
    238a:	77 1f       	adc	r23, r23
    238c:	68 0f       	add	r22, r24
    238e:	71 1d       	adc	r23, r1
    2390:	31 96       	adiw	r30, 0x01	; 1
    2392:	df 01       	movw	r26, r30
    2394:	11 97       	sbiw	r26, 0x01	; 1
    2396:	8c 91       	ld	r24, X
    2398:	80 53       	subi	r24, 0x30	; 48
    239a:	8a 30       	cpi	r24, 0x0A	; 10
    239c:	50 f3       	brcs	.-44     	; 0x2372 <strtod+0x186>
    239e:	14 ff       	sbrs	r17, 4
    23a0:	03 c0       	rjmp	.+6      	; 0x23a8 <strtod+0x1bc>
    23a2:	71 95       	neg	r23
    23a4:	61 95       	neg	r22
    23a6:	71 09       	sbc	r23, r1
    23a8:	c6 0f       	add	r28, r22
    23aa:	d7 1f       	adc	r29, r23
    23ac:	11 ff       	sbrs	r17, 1
    23ae:	08 c0       	rjmp	.+16     	; 0x23c0 <strtod+0x1d4>
    23b0:	c1 14       	cp	r12, r1
    23b2:	d1 04       	cpc	r13, r1
    23b4:	29 f0       	breq	.+10     	; 0x23c0 <strtod+0x1d4>
    23b6:	cf 01       	movw	r24, r30
    23b8:	01 97       	sbiw	r24, 0x01	; 1
    23ba:	f6 01       	movw	r30, r12
    23bc:	80 83       	st	Z, r24
    23be:	91 83       	std	Z+1, r25	; 0x01
    23c0:	ca 01       	movw	r24, r20
    23c2:	b9 01       	movw	r22, r18
    23c4:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__floatunsisf>
    23c8:	21 2f       	mov	r18, r17
    23ca:	23 70       	andi	r18, 0x03	; 3
    23cc:	23 30       	cpi	r18, 0x03	; 3
    23ce:	19 f0       	breq	.+6      	; 0x23d6 <strtod+0x1ea>
    23d0:	4b 01       	movw	r8, r22
    23d2:	5c 01       	movw	r10, r24
    23d4:	06 c0       	rjmp	.+12     	; 0x23e2 <strtod+0x1f6>
    23d6:	4b 01       	movw	r8, r22
    23d8:	5c 01       	movw	r10, r24
    23da:	b7 fa       	bst	r11, 7
    23dc:	b0 94       	com	r11
    23de:	b7 f8       	bld	r11, 7
    23e0:	b0 94       	com	r11
    23e2:	20 e0       	ldi	r18, 0x00	; 0
    23e4:	30 e0       	ldi	r19, 0x00	; 0
    23e6:	a9 01       	movw	r20, r18
    23e8:	c5 01       	movw	r24, r10
    23ea:	b4 01       	movw	r22, r8
    23ec:	0e 94 57 09 	call	0x12ae	; 0x12ae <__cmpsf2>
    23f0:	88 23       	and	r24, r24
    23f2:	09 f4       	brne	.+2      	; 0x23f6 <strtod+0x20a>
    23f4:	3e c0       	rjmp	.+124    	; 0x2472 <strtod+0x286>
    23f6:	d7 ff       	sbrs	r29, 7
    23f8:	06 c0       	rjmp	.+12     	; 0x2406 <strtod+0x21a>
    23fa:	d1 95       	neg	r29
    23fc:	c1 95       	neg	r28
    23fe:	d1 09       	sbc	r29, r1
    2400:	05 e2       	ldi	r16, 0x25	; 37
    2402:	13 e0       	ldi	r17, 0x03	; 3
    2404:	02 c0       	rjmp	.+4      	; 0x240a <strtod+0x21e>
    2406:	0d e3       	ldi	r16, 0x3D	; 61
    2408:	13 e0       	ldi	r17, 0x03	; 3
    240a:	68 01       	movw	r12, r16
    240c:	f8 e1       	ldi	r31, 0x18	; 24
    240e:	cf 1a       	sub	r12, r31
    2410:	d1 08       	sbc	r13, r1
    2412:	90 e2       	ldi	r25, 0x20	; 32
    2414:	e9 2e       	mov	r14, r25
    2416:	f1 2c       	mov	r15, r1
    2418:	ce 15       	cp	r28, r14
    241a:	df 05       	cpc	r29, r15
    241c:	74 f0       	brlt	.+28     	; 0x243a <strtod+0x24e>
    241e:	f8 01       	movw	r30, r16
    2420:	25 91       	lpm	r18, Z+
    2422:	35 91       	lpm	r19, Z+
    2424:	45 91       	lpm	r20, Z+
    2426:	54 91       	lpm	r21, Z
    2428:	c5 01       	movw	r24, r10
    242a:	b4 01       	movw	r22, r8
    242c:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__mulsf3>
    2430:	4b 01       	movw	r8, r22
    2432:	5c 01       	movw	r10, r24
    2434:	ce 19       	sub	r28, r14
    2436:	df 09       	sbc	r29, r15
    2438:	ef cf       	rjmp	.-34     	; 0x2418 <strtod+0x22c>
    243a:	04 50       	subi	r16, 0x04	; 4
    243c:	11 09       	sbc	r17, r1
    243e:	f5 94       	asr	r15
    2440:	e7 94       	ror	r14
    2442:	0c 15       	cp	r16, r12
    2444:	1d 05       	cpc	r17, r13
    2446:	41 f7       	brne	.-48     	; 0x2418 <strtod+0x22c>
    2448:	8a 2d       	mov	r24, r10
    244a:	88 0f       	add	r24, r24
    244c:	8b 2d       	mov	r24, r11
    244e:	88 1f       	adc	r24, r24
    2450:	8f 3f       	cpi	r24, 0xFF	; 255
    2452:	49 f0       	breq	.+18     	; 0x2466 <strtod+0x27a>
    2454:	20 e0       	ldi	r18, 0x00	; 0
    2456:	30 e0       	ldi	r19, 0x00	; 0
    2458:	a9 01       	movw	r20, r18
    245a:	c5 01       	movw	r24, r10
    245c:	b4 01       	movw	r22, r8
    245e:	0e 94 57 09 	call	0x12ae	; 0x12ae <__cmpsf2>
    2462:	81 11       	cpse	r24, r1
    2464:	06 c0       	rjmp	.+12     	; 0x2472 <strtod+0x286>
    2466:	82 e2       	ldi	r24, 0x22	; 34
    2468:	90 e0       	ldi	r25, 0x00	; 0
    246a:	80 93 db 21 	sts	0x21DB, r24	; 0x8021db <errno>
    246e:	90 93 dc 21 	sts	0x21DC, r25	; 0x8021dc <errno+0x1>
    2472:	c5 01       	movw	r24, r10
    2474:	b4 01       	movw	r22, r8
    2476:	09 c0       	rjmp	.+18     	; 0x248a <strtod+0x29e>
    2478:	60 e0       	ldi	r22, 0x00	; 0
    247a:	70 e0       	ldi	r23, 0x00	; 0
    247c:	80 e8       	ldi	r24, 0x80	; 128
    247e:	9f ef       	ldi	r25, 0xFF	; 255
    2480:	04 c0       	rjmp	.+8      	; 0x248a <strtod+0x29e>
    2482:	60 e0       	ldi	r22, 0x00	; 0
    2484:	70 e0       	ldi	r23, 0x00	; 0
    2486:	80 ec       	ldi	r24, 0xC0	; 192
    2488:	9f e7       	ldi	r25, 0x7F	; 127
    248a:	df 91       	pop	r29
    248c:	cf 91       	pop	r28
    248e:	1f 91       	pop	r17
    2490:	0f 91       	pop	r16
    2492:	ff 90       	pop	r15
    2494:	ef 90       	pop	r14
    2496:	df 90       	pop	r13
    2498:	cf 90       	pop	r12
    249a:	bf 90       	pop	r11
    249c:	af 90       	pop	r10
    249e:	9f 90       	pop	r9
    24a0:	8f 90       	pop	r8
    24a2:	08 95       	ret

000024a4 <isspace>:
    24a4:	91 11       	cpse	r25, r1
    24a6:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__ctype_isfalse>
    24aa:	80 32       	cpi	r24, 0x20	; 32
    24ac:	19 f0       	breq	.+6      	; 0x24b4 <isspace+0x10>
    24ae:	89 50       	subi	r24, 0x09	; 9
    24b0:	85 50       	subi	r24, 0x05	; 5
    24b2:	c8 f7       	brcc	.-14     	; 0x24a6 <isspace+0x2>
    24b4:	08 95       	ret

000024b6 <strncasecmp_P>:
    24b6:	fb 01       	movw	r30, r22
    24b8:	dc 01       	movw	r26, r24
    24ba:	41 50       	subi	r20, 0x01	; 1
    24bc:	50 40       	sbci	r21, 0x00	; 0
    24be:	88 f0       	brcs	.+34     	; 0x24e2 <strncasecmp_P+0x2c>
    24c0:	8d 91       	ld	r24, X+
    24c2:	81 34       	cpi	r24, 0x41	; 65
    24c4:	1c f0       	brlt	.+6      	; 0x24cc <strncasecmp_P+0x16>
    24c6:	8b 35       	cpi	r24, 0x5B	; 91
    24c8:	0c f4       	brge	.+2      	; 0x24cc <strncasecmp_P+0x16>
    24ca:	80 5e       	subi	r24, 0xE0	; 224
    24cc:	65 91       	lpm	r22, Z+
    24ce:	61 34       	cpi	r22, 0x41	; 65
    24d0:	1c f0       	brlt	.+6      	; 0x24d8 <strncasecmp_P+0x22>
    24d2:	6b 35       	cpi	r22, 0x5B	; 91
    24d4:	0c f4       	brge	.+2      	; 0x24d8 <strncasecmp_P+0x22>
    24d6:	60 5e       	subi	r22, 0xE0	; 224
    24d8:	86 1b       	sub	r24, r22
    24da:	61 11       	cpse	r22, r1
    24dc:	71 f3       	breq	.-36     	; 0x24ba <strncasecmp_P+0x4>
    24de:	99 0b       	sbc	r25, r25
    24e0:	08 95       	ret
    24e2:	88 1b       	sub	r24, r24
    24e4:	fc cf       	rjmp	.-8      	; 0x24de <strncasecmp_P+0x28>

000024e6 <__ctype_isfalse>:
    24e6:	99 27       	eor	r25, r25
    24e8:	88 27       	eor	r24, r24

000024ea <__ctype_istrue>:
    24ea:	08 95       	ret

000024ec <__muluhisi3>:
    24ec:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <__umulhisi3>
    24f0:	a5 9f       	mul	r26, r21
    24f2:	90 0d       	add	r25, r0
    24f4:	b4 9f       	mul	r27, r20
    24f6:	90 0d       	add	r25, r0
    24f8:	a4 9f       	mul	r26, r20
    24fa:	80 0d       	add	r24, r0
    24fc:	91 1d       	adc	r25, r1
    24fe:	11 24       	eor	r1, r1
    2500:	08 95       	ret

00002502 <_exit>:
    2502:	f8 94       	cli

00002504 <__stop_program>:
    2504:	ff cf       	rjmp	.-2      	; 0x2504 <__stop_program>
